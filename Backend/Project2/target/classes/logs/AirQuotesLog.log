2021-01-18 18:05:39 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-01-18 18:05:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-01-18 18:05:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-01-18 18:05:39 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-01-18 18:05:39 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.25.Final
2021-01-18 18:05:39 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-01-18 18:05:39 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-01-18 18:05:39 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-01-18 18:05:39 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-01-18 18:05:39 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-01-18 18:05:39 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-01-18 18:05:39 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@457c9034
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@457c9034
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@457c9034
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f57bcad
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7daa0fbd
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@181e731e
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@17d88132
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@17d88132
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17d88132
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@36b4091c
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@36b4091c
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@36b4091c
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5b367418
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5b367418
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5b367418
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@1efe439d
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@1efe439d
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1efe439d
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@413f69cc
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@413f69cc
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@413f69cc
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@39ac0c0a
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@39ac0c0a
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39ac0c0a
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@65b104b9
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@65b104b9
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@65b104b9
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@54504ecd
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@54504ecd
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6239aba6
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6239aba6
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@7164ca4c
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@7164ca4c
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3f91b517
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2421cc4
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@58ce9668
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@58ce9668
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@1fa1cab1
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1fa1cab1
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@5c2375a9
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5c2375a9
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@492691d7
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@492691d7
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@67545b57
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@67545b57
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@74589991
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@74589991
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1869fbd2
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1869fbd2
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@ca30bc1
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@ca30bc1
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@10a9d961
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@10a9d961
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@a4add54
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@a4add54
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@61fe30
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@61fe30
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7b420819
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7b420819
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7b420819
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@a3d9978
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@1e461e41
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e461e41
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e461e41
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3899782c
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@30e868be
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@13ad5cd3
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13ad5cd3
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@6581dc0a
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6581dc0a
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@77128536
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@77128536
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@4c1f22f3
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4c1f22f3
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@484094a5
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@484094a5
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@602e0143
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@34c01041
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@34c01041
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@34c01041
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7f0d96f2
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7f0d96f2
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7f0d96f2
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@49ff7d8c
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@77102b91
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@3f9342d4
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3f9342d4
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@3f9342d4
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3d3e5463
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3d3e5463
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3d3e5463
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@42b02722
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@528c868
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@7a1234bf
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7a1234bf
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@38aa816f
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@39a2bb97
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@39a2bb97
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5bf8fa12
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5bf8fa12
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5812f68b
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@55493582
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@52c3cb31
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@1c481ff2
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1c481ff2
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@676cf48
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a1de7fb
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@335b5620
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@29a0cdb
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@32a68f4f
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@73194df
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6eb2384f
2021-01-18 18:05:39 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3c9c0d96
2021-01-18 18:05:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-01-18 18:05:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-01-18 18:05:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-01-18 18:05:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-01-18 18:05:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-01-18 18:05:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-01-18 18:05:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-01-18 18:05:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-01-18 18:05:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-01-18 18:05:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-01-18 18:05:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-01-18 18:05:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-01-18 18:05:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-01-18 18:05:39 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-01-18 18:05:39 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
2021-01-18 18:05:39 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
2021-01-18 18:05:39 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.1
2021-01-18 18:05:39 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2021-01-18 18:05:39 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-01-18 18:05:39 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-01-18 18:05:39 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ab14cb9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5fb97279]
2021-01-18 18:05:39 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.Like
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 18:05:39 DEBUG EntityBinder:430 - Import with entity name Like
2021-01-18 18:05:39 DEBUG EntityBinder:873 - Bind entity com.project.model.Like on table Likes
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=like_id, insertable=true, updatable=true, unique=false}
2021-01-18 18:05:39 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-18 18:05:39 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-18 18:05:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property likeId with lazy=false
2021-01-18 18:05:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Like:likeId]
2021-01-18 18:05:39 DEBUG SimpleValueBinder:410 - building SimpleValue for likeId
2021-01-18 18:05:39 DEBUG PropertyBinder:266 - Building property likeId
2021-01-18 18:05:39 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(like_id)]), likeId, identity, , ...)
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id_fk', referencedColumn='post_id', mappedBy=''}
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=post, insertable=true, updatable=true, unique=false}
2021-01-18 18:05:39 DEBUG PropertyBinder:266 - Building property post
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id_fk', referencedColumn='user_id', mappedBy=''}
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-01-18 18:05:39 DEBUG PropertyBinder:266 - Building property user
2021-01-18 18:05:39 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.PasswordResetToken
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 18:05:39 DEBUG EntityBinder:430 - Import with entity name PasswordResetToken
2021-01-18 18:05:39 DEBUG EntityBinder:873 - Bind entity com.project.model.PasswordResetToken on table PasswordResetToken
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-01-18 18:05:39 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-18 18:05:39 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-18 18:05:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-01-18 18:05:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:id]
2021-01-18 18:05:39 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-01-18 18:05:39 DEBUG PropertyBinder:266 - Building property id
2021-01-18 18:05:39 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=expiryDate, insertable=true, updatable=true, unique=false}
2021-01-18 18:05:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expiryDate with lazy=false
2021-01-18 18:05:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:expiryDate]
2021-01-18 18:05:39 DEBUG SimpleValueBinder:410 - building SimpleValue for expiryDate
2021-01-18 18:05:39 DEBUG PropertyBinder:266 - Building property expiryDate
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=token, insertable=true, updatable=true, unique=false}
2021-01-18 18:05:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property token with lazy=false
2021-01-18 18:05:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:token]
2021-01-18 18:05:39 DEBUG SimpleValueBinder:410 - building SimpleValue for token
2021-01-18 18:05:39 DEBUG PropertyBinder:266 - Building property token
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-01-18 18:05:39 DEBUG PropertyBinder:266 - Building property user
2021-01-18 18:05:39 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.Post
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 18:05:39 DEBUG EntityBinder:430 - Import with entity name Post
2021-01-18 18:05:39 DEBUG EntityBinder:873 - Bind entity com.project.model.Post on table Posts
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-01-18 18:05:39 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-18 18:05:39 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-18 18:05:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-01-18 18:05:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postId]
2021-01-18 18:05:39 DEBUG SimpleValueBinder:410 - building SimpleValue for postId
2021-01-18 18:05:39 DEBUG PropertyBinder:266 - Building property postId
2021-01-18 18:05:39 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id_fk', referencedColumn='user_id', mappedBy=''}
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=author, insertable=true, updatable=true, unique=false}
2021-01-18 18:05:39 DEBUG PropertyBinder:266 - Building property author
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_picture, insertable=true, updatable=true, unique=false}
2021-01-18 18:05:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postPicture with lazy=false
2021-01-18 18:05:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postPicture]
2021-01-18 18:05:39 DEBUG SimpleValueBinder:410 - building SimpleValue for postPicture
2021-01-18 18:05:39 DEBUG PropertyBinder:266 - Building property postPicture
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_text, insertable=true, updatable=true, unique=false}
2021-01-18 18:05:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postText with lazy=false
2021-01-18 18:05:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postText]
2021-01-18 18:05:39 DEBUG SimpleValueBinder:410 - building SimpleValue for postText
2021-01-18 18:05:39 DEBUG PropertyBinder:266 - Building property postText
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=timestamp, insertable=true, updatable=true, unique=false}
2021-01-18 18:05:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property timestamp with lazy=false
2021-01-18 18:05:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:timestamp]
2021-01-18 18:05:39 DEBUG SimpleValueBinder:410 - building SimpleValue for timestamp
2021-01-18 18:05:39 DEBUG PropertyBinder:266 - Building property timestamp
2021-01-18 18:05:39 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.User
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 18:05:39 DEBUG EntityBinder:430 - Import with entity name User
2021-01-18 18:05:39 DEBUG EntityBinder:873 - Bind entity com.project.model.User on table Users
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-01-18 18:05:39 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-18 18:05:39 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-18 18:05:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-01-18 18:05:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:userId]
2021-01-18 18:05:39 DEBUG SimpleValueBinder:410 - building SimpleValue for userId
2021-01-18 18:05:39 DEBUG PropertyBinder:266 - Building property userId
2021-01-18 18:05:39 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, identity, , ...)
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-01-18 18:05:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-01-18 18:05:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:email]
2021-01-18 18:05:39 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-01-18 18:05:39 DEBUG PropertyBinder:266 - Building property email
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
2021-01-18 18:05:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-01-18 18:05:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:firstName]
2021-01-18 18:05:39 DEBUG SimpleValueBinder:410 - building SimpleValue for firstName
2021-01-18 18:05:39 DEBUG PropertyBinder:266 - Building property firstName
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
2021-01-18 18:05:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-01-18 18:05:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:lastName]
2021-01-18 18:05:39 DEBUG SimpleValueBinder:410 - building SimpleValue for lastName
2021-01-18 18:05:39 DEBUG PropertyBinder:266 - Building property lastName
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-01-18 18:05:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-01-18 18:05:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:password]
2021-01-18 18:05:39 DEBUG SimpleValueBinder:410 - building SimpleValue for password
2021-01-18 18:05:39 DEBUG PropertyBinder:266 - Building property password
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=profile_picture, insertable=true, updatable=true, unique=false}
2021-01-18 18:05:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property profilePicture with lazy=false
2021-01-18 18:05:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:profilePicture]
2021-01-18 18:05:39 DEBUG SimpleValueBinder:410 - building SimpleValue for profilePicture
2021-01-18 18:05:39 DEBUG PropertyBinder:266 - Building property profilePicture
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=password_salt, insertable=true, updatable=true, unique=false}
2021-01-18 18:05:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property salt with lazy=false
2021-01-18 18:05:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:salt]
2021-01-18 18:05:39 DEBUG SimpleValueBinder:410 - building SimpleValue for salt
2021-01-18 18:05:39 DEBUG PropertyBinder:266 - Building property salt
2021-01-18 18:05:39 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-01-18 18:05:39 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-01-18 18:05:39 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:username]
2021-01-18 18:05:39 DEBUG SimpleValueBinder:410 - building SimpleValue for username
2021-01-18 18:05:39 DEBUG PropertyBinder:266 - Building property username
2021-01-18 18:05:39 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for likeId
2021-01-18 18:05:39 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-01-18 18:05:39 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expiryDate
2021-01-18 18:05:39 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for token
2021-01-18 18:05:39 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postId
2021-01-18 18:05:39 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postPicture
2021-01-18 18:05:39 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postText
2021-01-18 18:05:39 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for timestamp
2021-01-18 18:05:39 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userId
2021-01-18 18:05:39 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-01-18 18:05:39 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for firstName
2021-01-18 18:05:39 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lastName
2021-01-18 18:05:39 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for password
2021-01-18 18:05:39 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for profilePicture
2021-01-18 18:05:39 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for salt
2021-01-18 18:05:39 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for username
2021-01-18 18:05:39 DEBUG PrimaryKey:35 - Forcing column [like_id] to be non-null as it is part of the primary key for table [likes]
2021-01-18 18:05:39 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [passwordresettoken]
2021-01-18 18:05:39 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-01-18 18:05:39 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-01-18 18:05:39 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.Post
2021-01-18 18:05:39 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:05:39 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:05:39 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:05:39 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.Post
2021-01-18 18:05:39 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:05:39 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:05:39 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:05:39 DEBUG SessionFactoryImpl:203 - Building session factory
2021-01-18 18:05:39 DEBUG Settings:68 - SessionFactory name : null
2021-01-18 18:05:39 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-01-18 18:05:39 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-01-18 18:05:39 DEBUG Settings:72 - Statistics: disabled
2021-01-18 18:05:39 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-01-18 18:05:39 DEBUG Settings:75 - Default entity-mode: pojo
2021-01-18 18:05:39 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-01-18 18:05:39 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-01-18 18:05:39 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-01-18 18:05:39 DEBUG Settings:80 - Default batch fetch size: -1
2021-01-18 18:05:39 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-01-18 18:05:39 DEBUG Settings:82 - Default null ordering: NONE
2021-01-18 18:05:39 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-01-18 18:05:39 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-01-18 18:05:39 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-01-18 18:05:39 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-01-18 18:05:39 DEBUG Settings:90 - Query language substitutions: {}
2021-01-18 18:05:39 DEBUG Settings:91 - Named query checking : enabled
2021-01-18 18:05:39 DEBUG Settings:93 - Second-level cache: disabled
2021-01-18 18:05:39 DEBUG Settings:94 - Second-level query cache: disabled
2021-01-18 18:05:39 DEBUG Settings:95 - Second-level query cache factory: null
2021-01-18 18:05:39 DEBUG Settings:96 - Second-level cache region prefix: null
2021-01-18 18:05:39 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-01-18 18:05:39 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-01-18 18:05:39 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-01-18 18:05:39 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-01-18 18:05:39 DEBUG Settings:102 - JDBC batch size: 15
2021-01-18 18:05:39 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-01-18 18:05:39 DEBUG Settings:104 - Scrollable result sets: enabled
2021-01-18 18:05:39 DEBUG Settings:105 - Wrap result sets: disabled
2021-01-18 18:05:39 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-01-18 18:05:39 DEBUG Settings:107 - JDBC result set fetch size: null
2021-01-18 18:05:39 DEBUG Settings:108 - Connection release mode: ON_CLOSE
2021-01-18 18:05:39 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-01-18 18:05:39 DEBUG Settings:111 - JPA compliance - query : disabled
2021-01-18 18:05:39 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-01-18 18:05:39 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-01-18 18:05:39 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-01-18 18:05:39 DEBUG SessionFactoryImpl:258 - Session factory constructed with filter configurations : {}
2021-01-18 18:05:39 DEBUG SessionFactoryImpl:259 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@46baf579, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2\target\test-classes;C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2\target\classes;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\annotations-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ant.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ha.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ssi.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-storeconfig.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-tribes.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\ecj-4.17.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\el-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jasper-el.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jasper.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jaspic-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jsp-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\servlet-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-coyote.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-dbcp.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-cs.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-de.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-es.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-fr.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ja.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ko.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-pt-BR.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ru.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-zh-CN.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-jdbc.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-jni.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-util-scan.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-util.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-websocket.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\websocket-api.jar;C:\Users\david\.m2\repository\org\postgresql\postgresql\42.2.14\postgresql-42.2.14.jar;C:\Users\david\.m2\repository\org\hibernate\hibernate-core\5.4.25.Final\hibernate-core-5.4.25.Final.jar;C:\Users\david\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\david\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\david\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\david\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\david\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\david\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\david\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\david\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\david\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\david\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\david\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\david\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\david\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\david\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\david\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\david\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\david\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\david\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.5.Final\hibernate-validator-6.1.5.Final.jar;C:\Users\david\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\david\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\david\.m2\repository\junit\junit\4.13\junit-4.13.jar;C:\Users\david\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.11.3\jackson-databind-2.11.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.3\jackson-annotations-2.11.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.3\jackson-core-2.11.3.jar;C:\Users\david\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\david\.m2\repository\org\springframework\spring-core\5.2.12.RELEASE\spring-core-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-jcl\5.2.12.RELEASE\spring-jcl-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-beans\5.2.12.RELEASE\spring-beans-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-context\5.2.12.RELEASE\spring-context-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-aop\5.2.12.RELEASE\spring-aop-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-expression\5.2.12.RELEASE\spring-expression-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-orm\5.2.12.RELEASE\spring-orm-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-jdbc\5.2.12.RELEASE\spring-jdbc-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-tx\5.2.12.RELEASE\spring-tx-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-webmvc\5.2.12.RELEASE\spring-webmvc-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-web\5.2.12.RELEASE\spring-web-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-context-support\5.2.12.RELEASE\spring-context-support-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\javax\mail\javax.mail-api\1.6.2\javax.mail-api-1.6.2.jar;C:\Users\david\.m2\repository\com\sun\mail\javax.mail\1.6.2\javax.mail-1.6.2.jar;C:\Users\david\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\david\.m2\repository\org\springframework\spring-aspects\5.2.12.RELEASE\spring-aspects-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\david\.m2\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;C:\Users\david\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-s3\1.11.327\aws-java-sdk-s3-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-kms\1.11.327\aws-java-sdk-kms-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-core\1.11.327\aws-java-sdk-core-1.11.327.jar;C:\Users\david\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\david\.m2\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;C:\Users\david\.m2\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;C:\Users\david\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\david\.m2\repository\software\amazon\ion\ion-java\1.0.2\ion-java-1.0.2.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-cbor\2.6.7\jackson-dataformat-cbor-2.6.7.jar;C:\Users\david\.m2\repository\joda-time\joda-time\2.8.1\joda-time-2.8.1.jar;C:\Users\david\.m2\repository\com\amazonaws\jmespath-java\1.11.327\jmespath-java-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-dynamodb\1.11.327\aws-java-sdk-dynamodb-1.11.327.jar;C:\sts-bundle\sts-3.9.13.RELEASE\configuration\org.eclipse.osgi\311\0\.cp;C:\sts-bundle\sts-3.9.13.RELEASE\configuration\org.eclipse.osgi\310\0\.cp, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Los_Angeles, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_271\bin, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 63970 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.project.test.PostDaoTest, sun.cpu.endian=little, user.home=C:\Users\david, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_271, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_271\lib\resources.jar;C:\Program Files\Java\jre1.8.0_271\lib\rt.jar;C:\Program Files\Java\jre1.8.0_271\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_271\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_271\lib\jce.jar;C:\Program Files\Java\jre1.8.0_271\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_271\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_271\classes, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=david, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_271\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@3d494fbf], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\david\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4bf324f9, java.library.path=C:\Program Files\Java\jre1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_271/bin/server;C:/Program Files/Java/jre1.8.0_271/bin;C:/Program Files/Java/jre1.8.0_271/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\ProgramData\chocolatey\bin;C:\ProgramData\nvm;C:\Program Files\nodejs;C:\Program Files\Microsoft VS Code\bin;D:\PuTTY\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Users\david\AppData\Local\Microsoft\WindowsApps;C:\sts-bundle\sts-3.9.13.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@77888435, java.ext.dirs=C:\Program Files\Java\jre1.8.0_271\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-01-18 18:05:39 INFO  Version:21 - HV000001: Hibernate Validator 6.1.5.Final
2021-01-18 18:05:39 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-01-18 18:05:39 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-01-18 18:05:39 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-01-18 18:05:39 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-01-18 18:05:39 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-01-18 18:05:39 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-01-18 18:05:39 DEBUG ResourceBundleMessageInterpolator:172 - Loaded expression factory via original TCCL
2021-01-18 18:05:40 DEBUG ValidatorFactoryConfigurationHelper:300 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-01-18 18:05:40 DEBUG ValidatorFactoryConfigurationHelper:375 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-01-18 18:05:40 DEBUG ValidatorFactoryConfigurationHelper:376 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-01-18 18:05:40 DEBUG ValidatorFactoryConfigurationHelper:377 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-01-18 18:05:40 DEBUG ValidatorFactoryConfigurationHelper:378 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-01-18 18:05:40 DEBUG ValidatorFactoryConfigurationHelper:379 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-01-18 18:05:40 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-18 18:05:40 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-18 18:05:40 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-18 18:05:40 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-18 18:05:40 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-18 18:05:40 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-18 18:05:40 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-18 18:05:40 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-18 18:05:40 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-01-18 18:05:40 DEBUG SessionFactoryImpl:298 - Instantiated session factory
2021-01-18 18:05:40 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ab14cb9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@784c5ef5]
2021-01-18 18:05:40 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-18 18:05:40 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-18 18:05:40 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-18 18:05:40 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-18 18:05:40 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-18 18:05:40 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-18 18:05:40 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-18 18:05:40 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.PasswordResetToken
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:3928 -  Version select: select id from PasswordResetToken where id =?
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select passwordre_.id, passwordre_.expiryDate as expiryda2_1_, passwordre_.token as token3_1_, passwordre_.user_id as user_id4_1_ from PasswordResetToken passwordre_ where passwordre_.id=?
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into PasswordResetToken (expiryDate, token, user_id, id) values (?, ?, ?, ?)
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:394 -  Update 0: update PasswordResetToken set expiryDate=?, token=?, user_id=? where id=?
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from PasswordResetToken where id=?
2021-01-18 18:05:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@646c0a67]
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expiryDate
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : token
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-01-18 18:05:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a2bcd56]
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.email
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.firstName
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.lastName
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.password
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.profilePicture
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.salt
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.username
2021-01-18 18:05:40 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 18:05:40 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 18:05:40 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.PasswordResetToken)
    - Returns
       - EntityReturnImpl(entity=com.project.model.PasswordResetToken, querySpaceUid=<gen:0>, path=com.project.model.PasswordResetToken)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:1>, path=com.project.model.PasswordResetToken.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.PasswordResetToken)
          - SQL table alias mapping - passwordre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_3_1_}

2021-01-18 18:05:40 DEBUG EntityLoader:129 - Static select for entity com.project.model.PasswordResetToken [NONE]: select passwordre0_.id as id1_1_0_, passwordre0_.expiryDate as expiryda2_1_0_, passwordre0_.token as token3_1_0_, passwordre0_.user_id as user_id4_1_0_, user1_.user_id as user_id1_3_1_, user1_.email as email2_3_1_, user1_.firstname as firstnam3_3_1_, user1_.lastname as lastname4_3_1_, user1_.password as password5_3_1_, user1_.profile_picture as profile_6_3_1_, user1_.password_salt as password7_3_1_, user1_.username as username8_3_1_ from PasswordResetToken passwordre0_ inner join Users user1_ on passwordre0_.user_id=user1_.user_id where passwordre0_.id=?
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.Like
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:3928 -  Version select: select like_id from Likes where like_id =?
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select like_.like_id, like_.post_id_fk as post_id_2_0_, like_.user_id_fk as user_id_3_0_ from Likes like_ where like_.like_id=?
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Likes (post_id_fk, user_id_fk, like_id) values (?, ?, ?)
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:394 -  Update 0: update Likes set post_id_fk=?, user_id_fk=? where like_id=?
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Likes where like_id=?
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Likes (like_id, post_id_fk, user_id_fk) values (null, ?, ?)
2021-01-18 18:05:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@588f63c]
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post
2021-01-18 18:05:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1981d861]
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author
2021-01-18 18:05:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f4c1e6]
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.email
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.firstName
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.lastName
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.password
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.profilePicture
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.salt
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.username
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.postPicture
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.postText
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.timestamp
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-01-18 18:05:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6342d610]
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.email
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.firstName
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.lastName
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.password
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.profilePicture
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.salt
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.username
2021-01-18 18:05:40 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 18:05:40 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 18:05:40 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.Like)
    - Returns
       - EntityReturnImpl(entity=com.project.model.Like, querySpaceUid=<gen:0>, path=com.project.model.Like)
          - EntityAttributeFetchImpl(entity=com.project.model.Post, querySpaceUid=<gen:1>, path=com.project.model.Like.post)
             - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:2>, path=com.project.model.Like.post.author)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:3>, path=com.project.model.Like.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.Like)
          - SQL table alias mapping - like0_
          - alias suffix - 0_
          - suffixed key columns - {like_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(post)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.project.model.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_3_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.project.model.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {user_id1_3_3_}

2021-01-18 18:05:40 DEBUG EntityLoader:129 - Static select for entity com.project.model.Like [NONE]: select like0_.like_id as like_id1_0_0_, like0_.post_id_fk as post_id_2_0_0_, like0_.user_id_fk as user_id_3_0_0_, post1_.post_id as post_id1_2_1_, post1_.user_id_fk as user_id_5_2_1_, post1_.post_picture as post_pic2_2_1_, post1_.post_text as post_tex3_2_1_, post1_.timestamp as timestam4_2_1_, user2_.user_id as user_id1_3_2_, user2_.email as email2_3_2_, user2_.firstname as firstnam3_3_2_, user2_.lastname as lastname4_3_2_, user2_.password as password5_3_2_, user2_.profile_picture as profile_6_3_2_, user2_.password_salt as password7_3_2_, user2_.username as username8_3_2_, user3_.user_id as user_id1_3_3_, user3_.email as email2_3_3_, user3_.firstname as firstnam3_3_3_, user3_.lastname as lastname4_3_3_, user3_.password as password5_3_3_, user3_.profile_picture as profile_6_3_3_, user3_.password_salt as password7_3_3_, user3_.username as username8_3_3_ from Likes like0_ left outer join Posts post1_ on like0_.post_id_fk=post1_.post_id left outer join Users user2_ on post1_.user_id_fk=user2_.user_id left outer join Users user3_ on like0_.user_id_fk=user3_.user_id where like0_.like_id=?
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.User
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:3928 -  Version select: select user_id from Users where user_id =?
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select user_.user_id, user_.email as email2_3_, user_.firstname as firstnam3_3_, user_.lastname as lastname4_3_, user_.password as password5_3_, user_.profile_picture as profile_6_3_, user_.password_salt as password7_3_, user_.username as username8_3_ from Users user_ where user_.user_id=?
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Users (email, firstname, lastname, password, profile_picture, password_salt, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:394 -  Update 0: update Users set email=?, firstname=?, lastname=?, password=?, profile_picture=?, password_salt=?, username=? where user_id=?
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Users where user_id=?
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Users (user_id, email, firstname, lastname, password, profile_picture, password_salt, username) values (null, ?, ?, ?, ?, ?, ?, ?)
2021-01-18 18:05:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@784abd3e]
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : profilePicture
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : salt
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-01-18 18:05:40 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 18:05:40 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 18:05:40 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.User)
    - Returns
       - EntityReturnImpl(entity=com.project.model.User, querySpaceUid=<gen:0>, path=com.project.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}

2021-01-18 18:05:40 DEBUG EntityLoader:129 - Static select for entity com.project.model.User [NONE]: select user0_.user_id as user_id1_3_0_, user0_.email as email2_3_0_, user0_.firstname as firstnam3_3_0_, user0_.lastname as lastname4_3_0_, user0_.password as password5_3_0_, user0_.profile_picture as profile_6_3_0_, user0_.password_salt as password7_3_0_, user0_.username as username8_3_0_ from Users user0_ where user0_.user_id=?
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.Post
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:3928 -  Version select: select post_id from Posts where post_id =?
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select post_.post_id, post_.user_id_fk as user_id_5_2_, post_.post_picture as post_pic2_2_, post_.post_text as post_tex3_2_, post_.timestamp as timestam4_2_ from Posts post_ where post_.post_id=?
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Posts (user_id_fk, post_picture, post_text, timestamp, post_id) values (?, ?, ?, ?, ?)
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:394 -  Update 0: update Posts set user_id_fk=?, post_picture=?, post_text=?, timestamp=? where post_id=?
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Posts where post_id=?
2021-01-18 18:05:40 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Posts (post_id, user_id_fk, post_picture, post_text, timestamp) values (null, ?, ?, ?, ?)
2021-01-18 18:05:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@434514d8]
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author
2021-01-18 18:05:40 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4613311f]
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.email
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.firstName
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.lastName
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.password
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.profilePicture
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.salt
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.username
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postPicture
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postText
2021-01-18 18:05:40 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : timestamp
2021-01-18 18:05:40 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 18:05:40 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 18:05:40 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.Post)
    - Returns
       - EntityReturnImpl(entity=com.project.model.Post, querySpaceUid=<gen:0>, path=com.project.model.Post)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:1>, path=com.project.model.Post.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_3_1_}

2021-01-18 18:05:40 DEBUG EntityLoader:129 - Static select for entity com.project.model.Post [NONE]: select post0_.post_id as post_id1_2_0_, post0_.user_id_fk as user_id_5_2_0_, post0_.post_picture as post_pic2_2_0_, post0_.post_text as post_tex3_2_0_, post0_.timestamp as timestam4_2_0_, user1_.user_id as user_id1_3_1_, user1_.email as email2_3_1_, user1_.firstname as firstnam3_3_1_, user1_.lastname as lastname4_3_1_, user1_.password as password5_3_1_, user1_.profile_picture as profile_6_3_1_, user1_.password_salt as password7_3_1_, user1_.username as username8_3_1_ from Posts post0_ left outer join Users user1_ on post0_.user_id_fk=user1_.user_id where post0_.post_id=?
2021-01-18 18:05:40 DEBUG SQL:144 - 
    
    drop table if exists Likes CASCADE 
2021-01-18 18:05:40 DEBUG SQL:144 - 
    
    drop table if exists PasswordResetToken CASCADE 
2021-01-18 18:05:40 DEBUG SQL:144 - 
    
    drop table if exists Posts CASCADE 
2021-01-18 18:05:40 DEBUG SQL:144 - 
    
    drop table if exists Users CASCADE 
2021-01-18 18:05:40 DEBUG SQL:144 - 
    
    drop sequence if exists hibernate_sequence
2021-01-18 18:05:40 DEBUG SQL:144 - create sequence hibernate_sequence start with 1 increment by 1
2021-01-18 18:05:40 DEBUG SQL:144 - 
    
    create table Likes (
       like_id integer generated by default as identity,
        post_id_fk integer,
        user_id_fk integer,
        primary key (like_id)
    )
2021-01-18 18:05:40 DEBUG SQL:144 - 
    
    create table PasswordResetToken (
       id bigint not null,
        expiryDate timestamp,
        token varchar(255),
        user_id integer not null,
        primary key (id)
    )
2021-01-18 18:05:40 DEBUG SQL:144 - 
    
    create table Posts (
       post_id integer generated by default as identity,
        post_picture varchar(255),
        post_text varchar(280) not null,
        timestamp timestamp not null,
        user_id_fk integer,
        primary key (post_id)
    )
2021-01-18 18:05:40 DEBUG SQL:144 - 
    
    create table Users (
       user_id integer generated by default as identity,
        email varchar(255) not null,
        firstname varchar(255) not null,
        lastname varchar(255) not null,
        password varchar(255) not null,
        profile_picture varchar(255),
        password_salt varchar(255) not null,
        username varchar(255) not null,
        primary key (user_id)
    )
2021-01-18 18:05:40 DEBUG SQL:144 - 
    
    alter table Users 
       add constraint UK_ncoa9bfasrql0x4nhmh1plxxy unique (email)
2021-01-18 18:05:40 DEBUG SQL:144 - 
    
    alter table Users 
       add constraint UK_23y4gd49ajvbqgl3psjsvhff6 unique (username)
2021-01-18 18:05:40 DEBUG SQL:144 - 
    
    alter table Likes 
       add constraint FKsgiuhjmogswsfkd01syvnd1uc 
       foreign key (post_id_fk) 
       references Posts
2021-01-18 18:05:40 DEBUG SQL:144 - 
    
    alter table Likes 
       add constraint FK10tjjddvctvy7e5mim2in6icy 
       foreign key (user_id_fk) 
       references Users
2021-01-18 18:05:40 DEBUG SQL:144 - 
    
    alter table PasswordResetToken 
       add constraint FKpr3o3kx11ack418b2doprb9rl 
       foreign key (user_id) 
       references Users
2021-01-18 18:05:40 DEBUG SQL:144 - 
    
    alter table Posts 
       add constraint FKq5d7uyu4hr67yrr645katvulo 
       foreign key (user_id_fk) 
       references Users
2021-01-18 18:05:40 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-01-18 18:05:40 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-01-18 18:05:40 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-18 18:05:40 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-18 18:05:40 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-01-18 18:05:40 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-01-18 18:05:40 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2bc426f0
2021-01-18 18:05:40 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 5926b6a2-0c47-4089-aad1-4b65ede045df (<unnamed>)
2021-01-18 18:05:40 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-01-18 18:05:40 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-01-18 18:05:40 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:05:40 DEBUG TransactionImpl:81 - begin
2021-01-18 18:05:40 DEBUG TransactionImpl:98 - committing
2021-01-18 18:05:40 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:05:40 DEBUG TransactionImpl:81 - begin
2021-01-18 18:05:40 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@79518e00
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:292 - parse() - HQL: update com.project.model.Post as generatedAlias0 set generatedAlias0.postText = :param0 where generatedAlias0.postId=1
2021-01-18 18:05:40 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  \-[IDENT] Node: 'project'
    |     |  |  \-[IDENT] Node: 'model'
    |     |  \-[IDENT] Node: 'Post'
    |     \-[ALIAS] Node: 'generatedAlias0'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias0'
    |     |  \-[IDENT] Node: 'postText'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'postId'
          \-[NUM_INT] Node: '1'

2021-01-18 18:05:40 DEBUG HqlSqlBaseWalker:124 - update << begin [level=1, statement=update]
2021-01-18 18:05:40 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Post (generatedAlias0) -> post0_
2021-01-18 18:05:40 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post_id
2021-01-18 18:05:40 DEBUG DotNode:695 - getDataType() : postText -> org.hibernate.type.StringType@7164ca4c
2021-01-18 18:05:40 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.postText -> post_text
2021-01-18 18:05:40 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post_id
2021-01-18 18:05:40 DEBUG DotNode:695 - getDataType() : postId -> org.hibernate.type.IntegerType@1efe439d
2021-01-18 18:05:40 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.postId -> post_id
2021-01-18 18:05:40 DEBUG HqlSqlBaseWalker:128 - update : finishing up [level=1, statement=update]
2021-01-18 18:05:40 DEBUG HqlSqlBaseWalker:132 - update >> end [level=1, statement=update]
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Posts)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Posts' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Posts,tableAlias=post0_,origin=null,columns={,className=com.project.model.Post}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'post_text' {propertyName=postText,dereferenceType=PRIMITIVE,getPropertyPath=postText,path=generatedAlias0.postText,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
    |     |  +-[ALIAS_REF] IdentNode: 'post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |     |  \-[IDENT] IdentNode: 'postText' {originalText=postText}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7164ca4c}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'post_id' {propertyName=postId,dereferenceType=PRIMITIVE,getPropertyPath=postId,path=generatedAlias0.postId,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
          |  \-[IDENT] IdentNode: 'postId' {originalText=postId}
          \-[NUM_INT] LiteralNode: '1'

2021-01-18 18:05:40 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:05:40 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:05:40 DEBUG SQL:144 - 
    update
        Posts 
    set
        post_text=? 
    where
        post_id=1
2021-01-18 18:05:40 DEBUG TransactionImpl:98 - committing
2021-01-18 18:05:40 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:05:40 DEBUG TransactionImpl:81 - begin
2021-01-18 18:05:40 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 where generatedAlias0.postId=1
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 where generatedAlias0.postId=1
2021-01-18 18:05:40 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'project'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Post'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'postId'
          \-[NUM_INT] Node: '1'

2021-01-18 18:05:40 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 18:05:40 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Post (generatedAlias0) -> post0_
2021-01-18 18:05:40 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:05:40 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:05:40 DEBUG DotNode:695 - getDataType() : postId -> org.hibernate.type.IntegerType@1efe439d
2021-01-18 18:05:40 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.postId -> post0_.post_id
2021-01-18 18:05:40 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 18:05:40 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} post0_.post_id ) ( FromClause{level=1} Posts post0_ ) ( where ( = ( post0_.post_id post0_.post_id postId ) 1 ) ) )
2021-01-18 18:05:40 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [Posts]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.Post)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.project.model.Post)
          | path: generatedAlias0.postId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.project.model.Post)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: postId
          \-LiteralNode

2021-01-18 18:05:40 DEBUG JoinProcessor:304 - Using FROM fragment [Posts post0_]
2021-01-18 18:05:40 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Posts)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'post0_.post_id as post_id1_2_' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |  \-[SQL_TOKEN] SqlFragment: 'post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Posts post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Posts,tableAlias=post0_,origin=null,columns={,className=com.project.model.Post}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'post0_.post_id' {propertyName=postId,dereferenceType=PRIMITIVE,getPropertyPath=postId,path=generatedAlias0.postId,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'post0_.post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
          |  \-[IDENT] IdentNode: 'postId' {originalText=postId}
          \-[NUM_INT] LiteralNode: '1'

2021-01-18 18:05:40 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 where generatedAlias0.postId=1
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:259 - SQL: select post0_.post_id as post_id1_2_, post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_ from Posts post0_ where post0_.post_id=1
2021-01-18 18:05:40 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:05:40 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    where
        post0_.post_id=1
2021-01-18 18:05:40 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:05:40 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:05:40 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:05:40 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:05:40.607
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:05:40 DEBUG TransactionImpl:98 - committing
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:05:40 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:05:40 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:05:40.607}
2021-01-18 18:05:40 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:05:40 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:05:40 DEBUG TransactionImpl:81 - begin
2021-01-18 18:05:40 DEBUG TransactionImpl:98 - committing
2021-01-18 18:05:40 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:05:40 DEBUG TransactionImpl:81 - begin
2021-01-18 18:05:40 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 where generatedAlias0.author=1 order by generatedAlias0.timestamp desc
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 where generatedAlias0.author=1 order by generatedAlias0.timestamp desc
2021-01-18 18:05:40 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'project'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Post'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias0'
    |     |  \-[IDENT] Node: 'author'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'timestamp'
       \-[DESCENDING] Node: 'desc'

2021-01-18 18:05:40 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 18:05:40 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Post (generatedAlias0) -> post0_
2021-01-18 18:05:40 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:05:40 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:05:40 DEBUG DotNode:695 - getDataType() : author -> org.hibernate.type.ManyToOneType(com.project.model.User)
2021-01-18 18:05:40 DEBUG DotNode:653 - dereferenceShortcut() : property author in com.project.model.Post does not require a join.
2021-01-18 18:05:40 DEBUG DotNode:682 - Terminal getPropertyPath = [author]
2021-01-18 18:05:40 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.author -> post0_.user_id_fk
2021-01-18 18:05:40 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:05:40 DEBUG DotNode:695 - getDataType() : timestamp -> org.hibernate.type.LocalDateTimeType@492691d7
2021-01-18 18:05:40 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.timestamp -> post0_.timestamp
2021-01-18 18:05:40 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 18:05:40 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} post0_.post_id ) ( FromClause{level=1} Posts post0_ ) ( where ( = ( post0_.user_id_fk post0_.post_id author ) 1 ) ) ( order ( post0_.timestamp post0_.post_id timestamp ) desc ) )
2021-01-18 18:05:40 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [Posts]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.Post)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    +-SqlNode
    |  \-BinaryLogicOperatorNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.project.model.Post)
    |     | path: generatedAlias0.author
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.project.model.Post)
    |     |  | originalText: generatedAlias0
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: author
    |     \-LiteralNode
    \-OrderByClause
       +-DotNode
       | persister: SingleTableEntityPersister(com.project.model.Post)
       | path: generatedAlias0.timestamp
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.project.model.Post)
       |  | originalText: generatedAlias0
       |  \-IdentNode
       |    persister: null
       |    originalText: timestamp
       \-SqlNode

2021-01-18 18:05:40 DEBUG JoinProcessor:304 - Using FROM fragment [Posts post0_]
2021-01-18 18:05:40 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Posts)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'post0_.post_id as post_id1_2_' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |  \-[SQL_TOKEN] SqlFragment: 'post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Posts post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Posts,tableAlias=post0_,origin=null,columns={,className=com.project.model.Post}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'post0_.user_id_fk' {propertyName=author,dereferenceType=UNKNOWN,getPropertyPath=author,path=generatedAlias0.author,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
    |     |  +-[ALIAS_REF] IdentNode: 'post0_.post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |     |  \-[IDENT] IdentNode: 'author' {originalText=author}
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'post0_.timestamp' {propertyName=timestamp,dereferenceType=PRIMITIVE,getPropertyPath=timestamp,path=generatedAlias0.timestamp,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'post0_.post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
       |  \-[IDENT] IdentNode: 'timestamp' {originalText=timestamp}
       \-[DESCENDING] SqlNode: 'desc'

2021-01-18 18:05:40 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 where generatedAlias0.author=1 order by generatedAlias0.timestamp desc
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:259 - SQL: select post0_.post_id as post_id1_2_, post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_ from Posts post0_ where post0_.user_id_fk=1 order by post0_.timestamp desc
2021-01-18 18:05:40 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:05:40 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    where
        post0_.user_id_fk=1 
    order by
        post0_.timestamp desc
2021-01-18 18:05:40 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:05:40 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:05:40 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:05:40 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:05:40.607
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:05:40 DEBUG TransactionImpl:98 - committing
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:05:40 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:05:40 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:05:40.607}
2021-01-18 18:05:40 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:05:40 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:05:40 DEBUG TransactionImpl:81 - begin
2021-01-18 18:05:40 DEBUG TransactionImpl:98 - committing
2021-01-18 18:05:40 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:05:40 DEBUG TransactionImpl:81 - begin
2021-01-18 18:05:40 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0
2021-01-18 18:05:40 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'project'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-01-18 18:05:40 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 18:05:40 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.User (generatedAlias0) -> user0_
2021-01-18 18:05:40 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> user0_.user_id
2021-01-18 18:05:40 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 18:05:40 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} Users user0_ ) )
2021-01-18 18:05:40 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [Users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-01-18 18:05:40 DEBUG JoinProcessor:304 - Using FROM fragment [Users user0_]
2021-01-18 18:05:40 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_3_' {alias=generatedAlias0, className=com.project.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.project.model.User}}

2021-01-18 18:05:40 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:259 - SQL: select user0_.user_id as user_id1_3_, user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_ from Users user0_
2021-01-18 18:05:40 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:05:40 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_,
        user0_.email as email2_3_,
        user0_.firstname as firstnam3_3_,
        user0_.lastname as lastname4_3_,
        user0_.password as password5_3_,
        user0_.profile_picture as profile_6_3_,
        user0_.password_salt as password7_3_,
        user0_.username as username8_3_ 
    from
        Users user0_
2021-01-18 18:05:40 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:05:40 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#1]
2021-01-18 18:05:40 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:05:40 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#2]
2021-01-18 18:05:40 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:05:40 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#3]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:05:40 DEBUG TransactionImpl:98 - committing
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:05:40 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:05:40 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:05:40 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:05:40 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:05:40 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:05:40 DEBUG TransactionImpl:81 - begin
2021-01-18 18:05:40 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:05:40 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'project'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Post'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'timestamp'
       \-[DESCENDING] Node: 'desc'

2021-01-18 18:05:40 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 18:05:40 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Post (generatedAlias0) -> post0_
2021-01-18 18:05:40 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:05:40 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:05:40 DEBUG DotNode:695 - getDataType() : timestamp -> org.hibernate.type.LocalDateTimeType@492691d7
2021-01-18 18:05:40 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.timestamp -> post0_.timestamp
2021-01-18 18:05:40 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 18:05:40 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} post0_.post_id ) ( FromClause{level=1} Posts post0_ ) ( order ( post0_.timestamp post0_.post_id timestamp ) desc ) )
2021-01-18 18:05:40 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [Posts]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.Post)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-OrderByClause
       +-DotNode
       | persister: SingleTableEntityPersister(com.project.model.Post)
       | path: generatedAlias0.timestamp
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.project.model.Post)
       |  | originalText: generatedAlias0
       |  \-IdentNode
       |    persister: null
       |    originalText: timestamp
       \-SqlNode

2021-01-18 18:05:40 DEBUG JoinProcessor:304 - Using FROM fragment [Posts post0_]
2021-01-18 18:05:40 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Posts)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'post0_.post_id as post_id1_2_' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |  \-[SQL_TOKEN] SqlFragment: 'post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Posts post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Posts,tableAlias=post0_,origin=null,columns={,className=com.project.model.Post}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'post0_.timestamp' {propertyName=timestamp,dereferenceType=PRIMITIVE,getPropertyPath=timestamp,path=generatedAlias0.timestamp,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'post0_.post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
       |  \-[IDENT] IdentNode: 'timestamp' {originalText=timestamp}
       \-[DESCENDING] SqlNode: 'desc'

2021-01-18 18:05:40 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:05:40 DEBUG QueryTranslatorImpl:259 - SQL: select post0_.post_id as post_id1_2_, post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_ from Posts post0_ order by post0_.timestamp desc
2021-01-18 18:05:40 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:05:40 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    order by
        post0_.timestamp desc
2021-01-18 18:05:40 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:05:40 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#2]
2021-01-18 18:05:40 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:05:40 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#3]
2021-01-18 18:05:40 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:05:40 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#2]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 2
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:05:40 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:05:40 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#2
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Seans Post
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:05:40.614
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#2]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#3]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 3
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:05:40 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:05:40 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#3
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Alberts Post
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:05:40.614
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#3]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:05:40 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:05:40 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:05:40.607
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:05:40 DEBUG TransactionImpl:98 - committing
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:05:40 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:05:40 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:05:40.607}
2021-01-18 18:05:40 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Seans Post, author=com.project.model.User#2, postId=2, postPicture=null, timestamp=2021-01-18T18:05:40.614}
2021-01-18 18:05:40 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Alberts Post, author=com.project.model.User#3, postId=3, postPicture=null, timestamp=2021-01-18T18:05:40.614}
2021-01-18 18:05:40 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:05:40 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:05:40 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:05:40 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:05:40 DEBUG TransactionImpl:81 - begin
2021-01-18 18:05:40 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-01-18 18:05:40 DEBUG SQL:144 - 
    insert 
    into
        Posts
        (post_id, user_id_fk, post_picture, post_text, timestamp) 
    values
        (null, ?, ?, ?, ?)
2021-01-18 18:05:40 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 4
2021-01-18 18:05:40 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-01-18 18:05:40 DEBUG TransactionImpl:98 - committing
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:05:40 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:05:40 DEBUG EntityPrinter:117 - com.project.model.Post{postText=some text, author=com.project.model.User#1, postId=4, postPicture=null, timestamp=2021-01-18T18:05:40.952}
2021-01-18 18:05:40 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:05:40 DEBUG TransactionImpl:81 - begin
2021-01-18 18:05:40 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:05:40 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    order by
        post0_.timestamp desc
2021-01-18 18:05:40 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:05:40 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#4]
2021-01-18 18:05:40 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:05:40 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#2]
2021-01-18 18:05:40 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:05:40 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#3]
2021-01-18 18:05:40 DEBUG Loader:384 - Result set row: 3
2021-01-18 18:05:40 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#4]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:05:40 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:05:40 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = some text
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:05:40.952
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#4]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#2]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 2
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:05:40 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:05:40 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#2
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Seans Post
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:05:40.614
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#2]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#3]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 3
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:05:40 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:05:40 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#3
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Alberts Post
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:05:40.614
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#3]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:05:40.607
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:40 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:05:40 DEBUG TransactionImpl:98 - committing
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
2021-01-18 18:05:40 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:05:40 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:05:40 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:05:40.607}
2021-01-18 18:05:40 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Seans Post, author=com.project.model.User#2, postId=2, postPicture=null, timestamp=2021-01-18T18:05:40.614}
2021-01-18 18:05:40 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Alberts Post, author=com.project.model.User#3, postId=3, postPicture=null, timestamp=2021-01-18T18:05:40.614}
2021-01-18 18:05:40 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:05:40 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:05:40 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:05:40 DEBUG EntityPrinter:117 - com.project.model.Post{postText=some text, author=com.project.model.User#1, postId=4, postPicture=null, timestamp=2021-01-18T18:05:40.952}
2021-01-18 18:05:41 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:05:41 DEBUG TransactionImpl:81 - begin
2021-01-18 18:05:41 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:05:41 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    order by
        post0_.timestamp desc
2021-01-18 18:05:41 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:05:41 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#4]
2021-01-18 18:05:41 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:05:41 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#2]
2021-01-18 18:05:41 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:05:41 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#3]
2021-01-18 18:05:41 DEBUG Loader:384 - Result set row: 3
2021-01-18 18:05:41 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#4]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:05:41 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:05:41 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = some text
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:05:40.952
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#4]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#2]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 2
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:05:41 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:05:41 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#2
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Seans Post
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:05:40.614
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#2]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#3]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 3
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:05:41 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:05:41 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#3
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Alberts Post
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:05:40.614
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#3]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:05:40.607
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:05:41 DEBUG TransactionImpl:98 - committing
2021-01-18 18:05:41 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:05:41 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:05:41 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
2021-01-18 18:05:41 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:05:41 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:05:41 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:05:40.607}
2021-01-18 18:05:41 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Seans Post, author=com.project.model.User#2, postId=2, postPicture=null, timestamp=2021-01-18T18:05:40.614}
2021-01-18 18:05:41 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Alberts Post, author=com.project.model.User#3, postId=3, postPicture=null, timestamp=2021-01-18T18:05:40.614}
2021-01-18 18:05:41 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:05:41 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:05:41 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:05:41 DEBUG EntityPrinter:117 - com.project.model.Post{postText=some text, author=com.project.model.User#1, postId=4, postPicture=null, timestamp=2021-01-18T18:05:40.952}
2021-01-18 18:05:41 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:05:41 DEBUG TransactionImpl:81 - begin
2021-01-18 18:05:41 DEBUG TransactionImpl:98 - committing
2021-01-18 18:05:41 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:05:41 DEBUG TransactionImpl:81 - begin
2021-01-18 18:05:41 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:05:41 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    order by
        post0_.timestamp desc
2021-01-18 18:05:41 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:05:41 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#4]
2021-01-18 18:05:41 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:05:41 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#2]
2021-01-18 18:05:41 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:05:41 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#3]
2021-01-18 18:05:41 DEBUG Loader:384 - Result set row: 3
2021-01-18 18:05:41 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#4]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:05:41 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:05:41 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = some text
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:05:40.952
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#4]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#2]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 2
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:05:41 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:05:41 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#2
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Seans Post
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:05:40.614
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#2]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#3]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 3
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:05:41 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:05:41 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#3
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Alberts Post
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:05:40.614
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#3]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:05:40.607
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:05:41 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:05:41 DEBUG TransactionImpl:98 - committing
2021-01-18 18:05:41 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:05:41 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:05:41 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
2021-01-18 18:05:41 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:05:41 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:05:41 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:05:40.607}
2021-01-18 18:05:41 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Seans Post, author=com.project.model.User#2, postId=2, postPicture=null, timestamp=2021-01-18T18:05:40.614}
2021-01-18 18:05:41 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Alberts Post, author=com.project.model.User#3, postId=3, postPicture=null, timestamp=2021-01-18T18:05:40.614}
2021-01-18 18:05:41 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:05:41 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:05:41 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:05:41 DEBUG EntityPrinter:117 - com.project.model.Post{postText=some text, author=com.project.model.User#1, postId=4, postPicture=null, timestamp=2021-01-18T18:05:40.952}
2021-01-18 18:06:05 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-01-18 18:06:05 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-01-18 18:06:05 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-01-18 18:06:05 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-01-18 18:06:05 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.25.Final
2021-01-18 18:06:05 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-01-18 18:06:05 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-01-18 18:06:05 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-01-18 18:06:05 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-01-18 18:06:05 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-01-18 18:06:05 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-01-18 18:06:05 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@457c9034
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@457c9034
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@457c9034
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f57bcad
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7daa0fbd
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@181e731e
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@17d88132
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@17d88132
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17d88132
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@36b4091c
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@36b4091c
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@36b4091c
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5b367418
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5b367418
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5b367418
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@1efe439d
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@1efe439d
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1efe439d
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@413f69cc
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@413f69cc
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@413f69cc
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@39ac0c0a
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@39ac0c0a
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39ac0c0a
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@65b104b9
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@65b104b9
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@65b104b9
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@54504ecd
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@54504ecd
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6239aba6
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6239aba6
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@7164ca4c
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@7164ca4c
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3f91b517
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2421cc4
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@58ce9668
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@58ce9668
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@1fa1cab1
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1fa1cab1
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@5c2375a9
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5c2375a9
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@492691d7
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@492691d7
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@67545b57
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@67545b57
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@74589991
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@74589991
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1869fbd2
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1869fbd2
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@ca30bc1
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@ca30bc1
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@10a9d961
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@10a9d961
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@a4add54
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@a4add54
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@61fe30
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@61fe30
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7b420819
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7b420819
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7b420819
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@a3d9978
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@1e461e41
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e461e41
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e461e41
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3899782c
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@30e868be
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@13ad5cd3
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13ad5cd3
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@6581dc0a
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6581dc0a
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@77128536
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@77128536
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@4c1f22f3
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4c1f22f3
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@484094a5
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@484094a5
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@602e0143
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@34c01041
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@34c01041
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@34c01041
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7f0d96f2
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7f0d96f2
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7f0d96f2
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@49ff7d8c
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@77102b91
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@3f9342d4
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3f9342d4
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@3f9342d4
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3d3e5463
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3d3e5463
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3d3e5463
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@42b02722
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@528c868
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@7a1234bf
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7a1234bf
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@38aa816f
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@39a2bb97
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@39a2bb97
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5bf8fa12
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5bf8fa12
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5812f68b
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@55493582
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@52c3cb31
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@1c481ff2
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1c481ff2
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@676cf48
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a1de7fb
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@335b5620
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@29a0cdb
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@32a68f4f
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@73194df
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6eb2384f
2021-01-18 18:06:05 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3c9c0d96
2021-01-18 18:06:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-01-18 18:06:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-01-18 18:06:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-01-18 18:06:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-01-18 18:06:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-01-18 18:06:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-01-18 18:06:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-01-18 18:06:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-01-18 18:06:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-01-18 18:06:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-01-18 18:06:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-01-18 18:06:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-01-18 18:06:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-01-18 18:06:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-01-18 18:06:05 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
2021-01-18 18:06:05 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
2021-01-18 18:06:05 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.1
2021-01-18 18:06:05 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2021-01-18 18:06:05 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-01-18 18:06:05 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-01-18 18:06:05 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ab14cb9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5fb97279]
2021-01-18 18:06:05 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.Like
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 18:06:06 DEBUG EntityBinder:430 - Import with entity name Like
2021-01-18 18:06:06 DEBUG EntityBinder:873 - Bind entity com.project.model.Like on table Likes
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=like_id, insertable=true, updatable=true, unique=false}
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-18 18:06:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property likeId with lazy=false
2021-01-18 18:06:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Like:likeId]
2021-01-18 18:06:06 DEBUG SimpleValueBinder:410 - building SimpleValue for likeId
2021-01-18 18:06:06 DEBUG PropertyBinder:266 - Building property likeId
2021-01-18 18:06:06 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(like_id)]), likeId, identity, , ...)
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id_fk', referencedColumn='post_id', mappedBy=''}
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=post, insertable=true, updatable=true, unique=false}
2021-01-18 18:06:06 DEBUG PropertyBinder:266 - Building property post
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id_fk', referencedColumn='user_id', mappedBy=''}
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-01-18 18:06:06 DEBUG PropertyBinder:266 - Building property user
2021-01-18 18:06:06 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.PasswordResetToken
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 18:06:06 DEBUG EntityBinder:430 - Import with entity name PasswordResetToken
2021-01-18 18:06:06 DEBUG EntityBinder:873 - Bind entity com.project.model.PasswordResetToken on table PasswordResetToken
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-18 18:06:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-01-18 18:06:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:id]
2021-01-18 18:06:06 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-01-18 18:06:06 DEBUG PropertyBinder:266 - Building property id
2021-01-18 18:06:06 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=expiryDate, insertable=true, updatable=true, unique=false}
2021-01-18 18:06:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expiryDate with lazy=false
2021-01-18 18:06:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:expiryDate]
2021-01-18 18:06:06 DEBUG SimpleValueBinder:410 - building SimpleValue for expiryDate
2021-01-18 18:06:06 DEBUG PropertyBinder:266 - Building property expiryDate
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=token, insertable=true, updatable=true, unique=false}
2021-01-18 18:06:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property token with lazy=false
2021-01-18 18:06:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:token]
2021-01-18 18:06:06 DEBUG SimpleValueBinder:410 - building SimpleValue for token
2021-01-18 18:06:06 DEBUG PropertyBinder:266 - Building property token
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-01-18 18:06:06 DEBUG PropertyBinder:266 - Building property user
2021-01-18 18:06:06 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.Post
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 18:06:06 DEBUG EntityBinder:430 - Import with entity name Post
2021-01-18 18:06:06 DEBUG EntityBinder:873 - Bind entity com.project.model.Post on table Posts
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-18 18:06:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-01-18 18:06:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postId]
2021-01-18 18:06:06 DEBUG SimpleValueBinder:410 - building SimpleValue for postId
2021-01-18 18:06:06 DEBUG PropertyBinder:266 - Building property postId
2021-01-18 18:06:06 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id_fk', referencedColumn='user_id', mappedBy=''}
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=author, insertable=true, updatable=true, unique=false}
2021-01-18 18:06:06 DEBUG PropertyBinder:266 - Building property author
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_picture, insertable=true, updatable=true, unique=false}
2021-01-18 18:06:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postPicture with lazy=false
2021-01-18 18:06:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postPicture]
2021-01-18 18:06:06 DEBUG SimpleValueBinder:410 - building SimpleValue for postPicture
2021-01-18 18:06:06 DEBUG PropertyBinder:266 - Building property postPicture
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_text, insertable=true, updatable=true, unique=false}
2021-01-18 18:06:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postText with lazy=false
2021-01-18 18:06:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postText]
2021-01-18 18:06:06 DEBUG SimpleValueBinder:410 - building SimpleValue for postText
2021-01-18 18:06:06 DEBUG PropertyBinder:266 - Building property postText
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=timestamp, insertable=true, updatable=true, unique=false}
2021-01-18 18:06:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property timestamp with lazy=false
2021-01-18 18:06:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:timestamp]
2021-01-18 18:06:06 DEBUG SimpleValueBinder:410 - building SimpleValue for timestamp
2021-01-18 18:06:06 DEBUG PropertyBinder:266 - Building property timestamp
2021-01-18 18:06:06 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.User
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 18:06:06 DEBUG EntityBinder:430 - Import with entity name User
2021-01-18 18:06:06 DEBUG EntityBinder:873 - Bind entity com.project.model.User on table Users
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-18 18:06:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-01-18 18:06:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:userId]
2021-01-18 18:06:06 DEBUG SimpleValueBinder:410 - building SimpleValue for userId
2021-01-18 18:06:06 DEBUG PropertyBinder:266 - Building property userId
2021-01-18 18:06:06 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, identity, , ...)
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-01-18 18:06:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-01-18 18:06:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:email]
2021-01-18 18:06:06 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-01-18 18:06:06 DEBUG PropertyBinder:266 - Building property email
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
2021-01-18 18:06:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-01-18 18:06:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:firstName]
2021-01-18 18:06:06 DEBUG SimpleValueBinder:410 - building SimpleValue for firstName
2021-01-18 18:06:06 DEBUG PropertyBinder:266 - Building property firstName
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
2021-01-18 18:06:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-01-18 18:06:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:lastName]
2021-01-18 18:06:06 DEBUG SimpleValueBinder:410 - building SimpleValue for lastName
2021-01-18 18:06:06 DEBUG PropertyBinder:266 - Building property lastName
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-01-18 18:06:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-01-18 18:06:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:password]
2021-01-18 18:06:06 DEBUG SimpleValueBinder:410 - building SimpleValue for password
2021-01-18 18:06:06 DEBUG PropertyBinder:266 - Building property password
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=profile_picture, insertable=true, updatable=true, unique=false}
2021-01-18 18:06:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property profilePicture with lazy=false
2021-01-18 18:06:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:profilePicture]
2021-01-18 18:06:06 DEBUG SimpleValueBinder:410 - building SimpleValue for profilePicture
2021-01-18 18:06:06 DEBUG PropertyBinder:266 - Building property profilePicture
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=password_salt, insertable=true, updatable=true, unique=false}
2021-01-18 18:06:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property salt with lazy=false
2021-01-18 18:06:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:salt]
2021-01-18 18:06:06 DEBUG SimpleValueBinder:410 - building SimpleValue for salt
2021-01-18 18:06:06 DEBUG PropertyBinder:266 - Building property salt
2021-01-18 18:06:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-01-18 18:06:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-01-18 18:06:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:username]
2021-01-18 18:06:06 DEBUG SimpleValueBinder:410 - building SimpleValue for username
2021-01-18 18:06:06 DEBUG PropertyBinder:266 - Building property username
2021-01-18 18:06:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for likeId
2021-01-18 18:06:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-01-18 18:06:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expiryDate
2021-01-18 18:06:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for token
2021-01-18 18:06:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postId
2021-01-18 18:06:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postPicture
2021-01-18 18:06:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postText
2021-01-18 18:06:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for timestamp
2021-01-18 18:06:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userId
2021-01-18 18:06:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-01-18 18:06:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for firstName
2021-01-18 18:06:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lastName
2021-01-18 18:06:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for password
2021-01-18 18:06:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for profilePicture
2021-01-18 18:06:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for salt
2021-01-18 18:06:06 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for username
2021-01-18 18:06:06 DEBUG PrimaryKey:35 - Forcing column [like_id] to be non-null as it is part of the primary key for table [likes]
2021-01-18 18:06:06 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [passwordresettoken]
2021-01-18 18:06:06 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-01-18 18:06:06 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-01-18 18:06:06 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.Post
2021-01-18 18:06:06 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:06:06 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:06:06 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:06:06 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.Post
2021-01-18 18:06:06 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:06:06 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:06:06 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:06:06 DEBUG SessionFactoryImpl:203 - Building session factory
2021-01-18 18:06:06 DEBUG Settings:68 - SessionFactory name : null
2021-01-18 18:06:06 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-01-18 18:06:06 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-01-18 18:06:06 DEBUG Settings:72 - Statistics: disabled
2021-01-18 18:06:06 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-01-18 18:06:06 DEBUG Settings:75 - Default entity-mode: pojo
2021-01-18 18:06:06 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-01-18 18:06:06 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-01-18 18:06:06 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-01-18 18:06:06 DEBUG Settings:80 - Default batch fetch size: -1
2021-01-18 18:06:06 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-01-18 18:06:06 DEBUG Settings:82 - Default null ordering: NONE
2021-01-18 18:06:06 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-01-18 18:06:06 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-01-18 18:06:06 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-01-18 18:06:06 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-01-18 18:06:06 DEBUG Settings:90 - Query language substitutions: {}
2021-01-18 18:06:06 DEBUG Settings:91 - Named query checking : enabled
2021-01-18 18:06:06 DEBUG Settings:93 - Second-level cache: disabled
2021-01-18 18:06:06 DEBUG Settings:94 - Second-level query cache: disabled
2021-01-18 18:06:06 DEBUG Settings:95 - Second-level query cache factory: null
2021-01-18 18:06:06 DEBUG Settings:96 - Second-level cache region prefix: null
2021-01-18 18:06:06 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-01-18 18:06:06 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-01-18 18:06:06 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-01-18 18:06:06 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-01-18 18:06:06 DEBUG Settings:102 - JDBC batch size: 15
2021-01-18 18:06:06 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-01-18 18:06:06 DEBUG Settings:104 - Scrollable result sets: enabled
2021-01-18 18:06:06 DEBUG Settings:105 - Wrap result sets: disabled
2021-01-18 18:06:06 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-01-18 18:06:06 DEBUG Settings:107 - JDBC result set fetch size: null
2021-01-18 18:06:06 DEBUG Settings:108 - Connection release mode: ON_CLOSE
2021-01-18 18:06:06 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-01-18 18:06:06 DEBUG Settings:111 - JPA compliance - query : disabled
2021-01-18 18:06:06 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-01-18 18:06:06 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-01-18 18:06:06 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-01-18 18:06:06 DEBUG SessionFactoryImpl:258 - Session factory constructed with filter configurations : {}
2021-01-18 18:06:06 DEBUG SessionFactoryImpl:259 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@46baf579, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2\target\test-classes;C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2\target\classes;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\annotations-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ant.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ha.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ssi.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-storeconfig.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-tribes.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\ecj-4.17.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\el-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jasper-el.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jasper.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jaspic-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jsp-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\servlet-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-coyote.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-dbcp.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-cs.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-de.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-es.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-fr.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ja.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ko.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-pt-BR.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ru.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-zh-CN.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-jdbc.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-jni.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-util-scan.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-util.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-websocket.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\websocket-api.jar;C:\Users\david\.m2\repository\org\postgresql\postgresql\42.2.14\postgresql-42.2.14.jar;C:\Users\david\.m2\repository\org\hibernate\hibernate-core\5.4.25.Final\hibernate-core-5.4.25.Final.jar;C:\Users\david\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\david\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\david\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\david\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\david\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\david\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\david\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\david\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\david\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\david\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\david\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\david\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\david\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\david\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\david\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\david\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\david\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\david\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.5.Final\hibernate-validator-6.1.5.Final.jar;C:\Users\david\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\david\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\david\.m2\repository\junit\junit\4.13\junit-4.13.jar;C:\Users\david\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.11.3\jackson-databind-2.11.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.3\jackson-annotations-2.11.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.3\jackson-core-2.11.3.jar;C:\Users\david\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\david\.m2\repository\org\springframework\spring-core\5.2.12.RELEASE\spring-core-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-jcl\5.2.12.RELEASE\spring-jcl-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-beans\5.2.12.RELEASE\spring-beans-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-context\5.2.12.RELEASE\spring-context-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-aop\5.2.12.RELEASE\spring-aop-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-expression\5.2.12.RELEASE\spring-expression-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-orm\5.2.12.RELEASE\spring-orm-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-jdbc\5.2.12.RELEASE\spring-jdbc-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-tx\5.2.12.RELEASE\spring-tx-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-webmvc\5.2.12.RELEASE\spring-webmvc-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-web\5.2.12.RELEASE\spring-web-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-context-support\5.2.12.RELEASE\spring-context-support-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\javax\mail\javax.mail-api\1.6.2\javax.mail-api-1.6.2.jar;C:\Users\david\.m2\repository\com\sun\mail\javax.mail\1.6.2\javax.mail-1.6.2.jar;C:\Users\david\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\david\.m2\repository\org\springframework\spring-aspects\5.2.12.RELEASE\spring-aspects-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\david\.m2\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;C:\Users\david\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-s3\1.11.327\aws-java-sdk-s3-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-kms\1.11.327\aws-java-sdk-kms-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-core\1.11.327\aws-java-sdk-core-1.11.327.jar;C:\Users\david\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\david\.m2\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;C:\Users\david\.m2\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;C:\Users\david\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\david\.m2\repository\software\amazon\ion\ion-java\1.0.2\ion-java-1.0.2.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-cbor\2.6.7\jackson-dataformat-cbor-2.6.7.jar;C:\Users\david\.m2\repository\joda-time\joda-time\2.8.1\joda-time-2.8.1.jar;C:\Users\david\.m2\repository\com\amazonaws\jmespath-java\1.11.327\jmespath-java-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-dynamodb\1.11.327\aws-java-sdk-dynamodb-1.11.327.jar;C:\sts-bundle\sts-3.9.13.RELEASE\configuration\org.eclipse.osgi\311\0\.cp;C:\sts-bundle\sts-3.9.13.RELEASE\configuration\org.eclipse.osgi\310\0\.cp, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Los_Angeles, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_271\bin, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 63990 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.project.test.PostDaoTest, sun.cpu.endian=little, user.home=C:\Users\david, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_271, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_271\lib\resources.jar;C:\Program Files\Java\jre1.8.0_271\lib\rt.jar;C:\Program Files\Java\jre1.8.0_271\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_271\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_271\lib\jce.jar;C:\Program Files\Java\jre1.8.0_271\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_271\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_271\classes, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=david, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_271\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@3d494fbf], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\david\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4bf324f9, java.library.path=C:\Program Files\Java\jre1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_271/bin/server;C:/Program Files/Java/jre1.8.0_271/bin;C:/Program Files/Java/jre1.8.0_271/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\ProgramData\chocolatey\bin;C:\ProgramData\nvm;C:\Program Files\nodejs;C:\Program Files\Microsoft VS Code\bin;D:\PuTTY\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Users\david\AppData\Local\Microsoft\WindowsApps;C:\sts-bundle\sts-3.9.13.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@77888435, java.ext.dirs=C:\Program Files\Java\jre1.8.0_271\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-01-18 18:06:06 INFO  Version:21 - HV000001: Hibernate Validator 6.1.5.Final
2021-01-18 18:06:06 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-01-18 18:06:06 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-01-18 18:06:06 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-01-18 18:06:06 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-01-18 18:06:06 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-01-18 18:06:06 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-01-18 18:06:06 DEBUG ResourceBundleMessageInterpolator:172 - Loaded expression factory via original TCCL
2021-01-18 18:06:06 DEBUG ValidatorFactoryConfigurationHelper:300 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-01-18 18:06:06 DEBUG ValidatorFactoryConfigurationHelper:375 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-01-18 18:06:06 DEBUG ValidatorFactoryConfigurationHelper:376 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-01-18 18:06:06 DEBUG ValidatorFactoryConfigurationHelper:377 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-01-18 18:06:06 DEBUG ValidatorFactoryConfigurationHelper:378 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-01-18 18:06:06 DEBUG ValidatorFactoryConfigurationHelper:379 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-18 18:06:06 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-01-18 18:06:06 DEBUG SessionFactoryImpl:298 - Instantiated session factory
2021-01-18 18:06:06 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ab14cb9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@784c5ef5]
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-18 18:06:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.PasswordResetToken
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:3928 -  Version select: select id from PasswordResetToken where id =?
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select passwordre_.id, passwordre_.expiryDate as expiryda2_1_, passwordre_.token as token3_1_, passwordre_.user_id as user_id4_1_ from PasswordResetToken passwordre_ where passwordre_.id=?
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into PasswordResetToken (expiryDate, token, user_id, id) values (?, ?, ?, ?)
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:394 -  Update 0: update PasswordResetToken set expiryDate=?, token=?, user_id=? where id=?
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from PasswordResetToken where id=?
2021-01-18 18:06:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@646c0a67]
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expiryDate
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : token
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-01-18 18:06:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a2bcd56]
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.email
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.firstName
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.lastName
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.password
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.profilePicture
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.salt
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.username
2021-01-18 18:06:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 18:06:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 18:06:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.PasswordResetToken)
    - Returns
       - EntityReturnImpl(entity=com.project.model.PasswordResetToken, querySpaceUid=<gen:0>, path=com.project.model.PasswordResetToken)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:1>, path=com.project.model.PasswordResetToken.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.PasswordResetToken)
          - SQL table alias mapping - passwordre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_3_1_}

2021-01-18 18:06:06 DEBUG EntityLoader:129 - Static select for entity com.project.model.PasswordResetToken [NONE]: select passwordre0_.id as id1_1_0_, passwordre0_.expiryDate as expiryda2_1_0_, passwordre0_.token as token3_1_0_, passwordre0_.user_id as user_id4_1_0_, user1_.user_id as user_id1_3_1_, user1_.email as email2_3_1_, user1_.firstname as firstnam3_3_1_, user1_.lastname as lastname4_3_1_, user1_.password as password5_3_1_, user1_.profile_picture as profile_6_3_1_, user1_.password_salt as password7_3_1_, user1_.username as username8_3_1_ from PasswordResetToken passwordre0_ inner join Users user1_ on passwordre0_.user_id=user1_.user_id where passwordre0_.id=?
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.Like
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:3928 -  Version select: select like_id from Likes where like_id =?
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select like_.like_id, like_.post_id_fk as post_id_2_0_, like_.user_id_fk as user_id_3_0_ from Likes like_ where like_.like_id=?
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Likes (post_id_fk, user_id_fk, like_id) values (?, ?, ?)
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:394 -  Update 0: update Likes set post_id_fk=?, user_id_fk=? where like_id=?
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Likes where like_id=?
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Likes (like_id, post_id_fk, user_id_fk) values (null, ?, ?)
2021-01-18 18:06:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@588f63c]
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post
2021-01-18 18:06:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1981d861]
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author
2021-01-18 18:06:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f4c1e6]
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.email
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.firstName
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.lastName
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.password
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.profilePicture
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.salt
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.username
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.postPicture
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.postText
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.timestamp
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-01-18 18:06:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6342d610]
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.email
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.firstName
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.lastName
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.password
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.profilePicture
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.salt
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.username
2021-01-18 18:06:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 18:06:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 18:06:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.Like)
    - Returns
       - EntityReturnImpl(entity=com.project.model.Like, querySpaceUid=<gen:0>, path=com.project.model.Like)
          - EntityAttributeFetchImpl(entity=com.project.model.Post, querySpaceUid=<gen:1>, path=com.project.model.Like.post)
             - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:2>, path=com.project.model.Like.post.author)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:3>, path=com.project.model.Like.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.Like)
          - SQL table alias mapping - like0_
          - alias suffix - 0_
          - suffixed key columns - {like_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(post)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.project.model.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_3_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.project.model.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {user_id1_3_3_}

2021-01-18 18:06:06 DEBUG EntityLoader:129 - Static select for entity com.project.model.Like [NONE]: select like0_.like_id as like_id1_0_0_, like0_.post_id_fk as post_id_2_0_0_, like0_.user_id_fk as user_id_3_0_0_, post1_.post_id as post_id1_2_1_, post1_.user_id_fk as user_id_5_2_1_, post1_.post_picture as post_pic2_2_1_, post1_.post_text as post_tex3_2_1_, post1_.timestamp as timestam4_2_1_, user2_.user_id as user_id1_3_2_, user2_.email as email2_3_2_, user2_.firstname as firstnam3_3_2_, user2_.lastname as lastname4_3_2_, user2_.password as password5_3_2_, user2_.profile_picture as profile_6_3_2_, user2_.password_salt as password7_3_2_, user2_.username as username8_3_2_, user3_.user_id as user_id1_3_3_, user3_.email as email2_3_3_, user3_.firstname as firstnam3_3_3_, user3_.lastname as lastname4_3_3_, user3_.password as password5_3_3_, user3_.profile_picture as profile_6_3_3_, user3_.password_salt as password7_3_3_, user3_.username as username8_3_3_ from Likes like0_ left outer join Posts post1_ on like0_.post_id_fk=post1_.post_id left outer join Users user2_ on post1_.user_id_fk=user2_.user_id left outer join Users user3_ on like0_.user_id_fk=user3_.user_id where like0_.like_id=?
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.User
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:3928 -  Version select: select user_id from Users where user_id =?
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select user_.user_id, user_.email as email2_3_, user_.firstname as firstnam3_3_, user_.lastname as lastname4_3_, user_.password as password5_3_, user_.profile_picture as profile_6_3_, user_.password_salt as password7_3_, user_.username as username8_3_ from Users user_ where user_.user_id=?
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Users (email, firstname, lastname, password, profile_picture, password_salt, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:394 -  Update 0: update Users set email=?, firstname=?, lastname=?, password=?, profile_picture=?, password_salt=?, username=? where user_id=?
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Users where user_id=?
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Users (user_id, email, firstname, lastname, password, profile_picture, password_salt, username) values (null, ?, ?, ?, ?, ?, ?, ?)
2021-01-18 18:06:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@784abd3e]
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : profilePicture
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : salt
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-01-18 18:06:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 18:06:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 18:06:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.User)
    - Returns
       - EntityReturnImpl(entity=com.project.model.User, querySpaceUid=<gen:0>, path=com.project.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}

2021-01-18 18:06:06 DEBUG EntityLoader:129 - Static select for entity com.project.model.User [NONE]: select user0_.user_id as user_id1_3_0_, user0_.email as email2_3_0_, user0_.firstname as firstnam3_3_0_, user0_.lastname as lastname4_3_0_, user0_.password as password5_3_0_, user0_.profile_picture as profile_6_3_0_, user0_.password_salt as password7_3_0_, user0_.username as username8_3_0_ from Users user0_ where user0_.user_id=?
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.Post
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:3928 -  Version select: select post_id from Posts where post_id =?
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select post_.post_id, post_.user_id_fk as user_id_5_2_, post_.post_picture as post_pic2_2_, post_.post_text as post_tex3_2_, post_.timestamp as timestam4_2_ from Posts post_ where post_.post_id=?
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Posts (user_id_fk, post_picture, post_text, timestamp, post_id) values (?, ?, ?, ?, ?)
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:394 -  Update 0: update Posts set user_id_fk=?, post_picture=?, post_text=?, timestamp=? where post_id=?
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Posts where post_id=?
2021-01-18 18:06:06 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Posts (post_id, user_id_fk, post_picture, post_text, timestamp) values (null, ?, ?, ?, ?)
2021-01-18 18:06:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@434514d8]
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author
2021-01-18 18:06:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4613311f]
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.email
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.firstName
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.lastName
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.password
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.profilePicture
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.salt
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.username
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postPicture
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postText
2021-01-18 18:06:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : timestamp
2021-01-18 18:06:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 18:06:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 18:06:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.Post)
    - Returns
       - EntityReturnImpl(entity=com.project.model.Post, querySpaceUid=<gen:0>, path=com.project.model.Post)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:1>, path=com.project.model.Post.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_3_1_}

2021-01-18 18:06:06 DEBUG EntityLoader:129 - Static select for entity com.project.model.Post [NONE]: select post0_.post_id as post_id1_2_0_, post0_.user_id_fk as user_id_5_2_0_, post0_.post_picture as post_pic2_2_0_, post0_.post_text as post_tex3_2_0_, post0_.timestamp as timestam4_2_0_, user1_.user_id as user_id1_3_1_, user1_.email as email2_3_1_, user1_.firstname as firstnam3_3_1_, user1_.lastname as lastname4_3_1_, user1_.password as password5_3_1_, user1_.profile_picture as profile_6_3_1_, user1_.password_salt as password7_3_1_, user1_.username as username8_3_1_ from Posts post0_ left outer join Users user1_ on post0_.user_id_fk=user1_.user_id where post0_.post_id=?
2021-01-18 18:06:06 DEBUG SQL:144 - 
    
    drop table if exists Likes CASCADE 
2021-01-18 18:06:06 DEBUG SQL:144 - 
    
    drop table if exists PasswordResetToken CASCADE 
2021-01-18 18:06:06 DEBUG SQL:144 - 
    
    drop table if exists Posts CASCADE 
2021-01-18 18:06:06 DEBUG SQL:144 - 
    
    drop table if exists Users CASCADE 
2021-01-18 18:06:06 DEBUG SQL:144 - 
    
    drop sequence if exists hibernate_sequence
2021-01-18 18:06:06 DEBUG SQL:144 - create sequence hibernate_sequence start with 1 increment by 1
2021-01-18 18:06:06 DEBUG SQL:144 - 
    
    create table Likes (
       like_id integer generated by default as identity,
        post_id_fk integer,
        user_id_fk integer,
        primary key (like_id)
    )
2021-01-18 18:06:06 DEBUG SQL:144 - 
    
    create table PasswordResetToken (
       id bigint not null,
        expiryDate timestamp,
        token varchar(255),
        user_id integer not null,
        primary key (id)
    )
2021-01-18 18:06:06 DEBUG SQL:144 - 
    
    create table Posts (
       post_id integer generated by default as identity,
        post_picture varchar(255),
        post_text varchar(280) not null,
        timestamp timestamp not null,
        user_id_fk integer,
        primary key (post_id)
    )
2021-01-18 18:06:06 DEBUG SQL:144 - 
    
    create table Users (
       user_id integer generated by default as identity,
        email varchar(255) not null,
        firstname varchar(255) not null,
        lastname varchar(255) not null,
        password varchar(255) not null,
        profile_picture varchar(255),
        password_salt varchar(255) not null,
        username varchar(255) not null,
        primary key (user_id)
    )
2021-01-18 18:06:06 DEBUG SQL:144 - 
    
    alter table Users 
       add constraint UK_ncoa9bfasrql0x4nhmh1plxxy unique (email)
2021-01-18 18:06:06 DEBUG SQL:144 - 
    
    alter table Users 
       add constraint UK_23y4gd49ajvbqgl3psjsvhff6 unique (username)
2021-01-18 18:06:06 DEBUG SQL:144 - 
    
    alter table Likes 
       add constraint FKsgiuhjmogswsfkd01syvnd1uc 
       foreign key (post_id_fk) 
       references Posts
2021-01-18 18:06:06 DEBUG SQL:144 - 
    
    alter table Likes 
       add constraint FK10tjjddvctvy7e5mim2in6icy 
       foreign key (user_id_fk) 
       references Users
2021-01-18 18:06:06 DEBUG SQL:144 - 
    
    alter table PasswordResetToken 
       add constraint FKpr3o3kx11ack418b2doprb9rl 
       foreign key (user_id) 
       references Users
2021-01-18 18:06:06 DEBUG SQL:144 - 
    
    alter table Posts 
       add constraint FKq5d7uyu4hr67yrr645katvulo 
       foreign key (user_id_fk) 
       references Users
2021-01-18 18:06:06 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-01-18 18:06:06 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-01-18 18:06:06 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-18 18:06:06 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-18 18:06:06 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-01-18 18:06:06 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-01-18 18:06:06 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2bc426f0
2021-01-18 18:06:06 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 8c26c432-37fc-482b-9217-43e512c34603 (<unnamed>)
2021-01-18 18:06:06 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-01-18 18:06:06 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-01-18 18:06:06 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:06:06 DEBUG TransactionImpl:81 - begin
2021-01-18 18:06:06 DEBUG TransactionImpl:98 - committing
2021-01-18 18:06:06 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:06:06 DEBUG TransactionImpl:81 - begin
2021-01-18 18:06:06 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@79518e00
2021-01-18 18:06:06 DEBUG QueryTranslatorImpl:292 - parse() - HQL: update com.project.model.Post as generatedAlias0 set generatedAlias0.postText = :param0 where generatedAlias0.postId=1
2021-01-18 18:06:06 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:06:06 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  \-[IDENT] Node: 'project'
    |     |  |  \-[IDENT] Node: 'model'
    |     |  \-[IDENT] Node: 'Post'
    |     \-[ALIAS] Node: 'generatedAlias0'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias0'
    |     |  \-[IDENT] Node: 'postText'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'postId'
          \-[NUM_INT] Node: '1'

2021-01-18 18:06:06 DEBUG HqlSqlBaseWalker:124 - update << begin [level=1, statement=update]
2021-01-18 18:06:06 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Post (generatedAlias0) -> post0_
2021-01-18 18:06:06 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post_id
2021-01-18 18:06:06 DEBUG DotNode:695 - getDataType() : postText -> org.hibernate.type.StringType@7164ca4c
2021-01-18 18:06:06 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.postText -> post_text
2021-01-18 18:06:06 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post_id
2021-01-18 18:06:06 DEBUG DotNode:695 - getDataType() : postId -> org.hibernate.type.IntegerType@1efe439d
2021-01-18 18:06:06 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.postId -> post_id
2021-01-18 18:06:06 DEBUG HqlSqlBaseWalker:128 - update : finishing up [level=1, statement=update]
2021-01-18 18:06:06 DEBUG HqlSqlBaseWalker:132 - update >> end [level=1, statement=update]
2021-01-18 18:06:06 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Posts)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Posts' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Posts,tableAlias=post0_,origin=null,columns={,className=com.project.model.Post}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'post_text' {propertyName=postText,dereferenceType=PRIMITIVE,getPropertyPath=postText,path=generatedAlias0.postText,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
    |     |  +-[ALIAS_REF] IdentNode: 'post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |     |  \-[IDENT] IdentNode: 'postText' {originalText=postText}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7164ca4c}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'post_id' {propertyName=postId,dereferenceType=PRIMITIVE,getPropertyPath=postId,path=generatedAlias0.postId,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
          |  \-[IDENT] IdentNode: 'postId' {originalText=postId}
          \-[NUM_INT] LiteralNode: '1'

2021-01-18 18:06:06 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:06:06 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:06:06 DEBUG SQL:144 - 
    update
        Posts 
    set
        post_text=? 
    where
        post_id=1
2021-01-18 18:06:06 DEBUG TransactionImpl:98 - committing
2021-01-18 18:06:06 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:06:06 DEBUG TransactionImpl:81 - begin
2021-01-18 18:06:06 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 where generatedAlias0.postId=1
2021-01-18 18:06:06 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 where generatedAlias0.postId=1
2021-01-18 18:06:06 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:06:06 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'project'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Post'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'postId'
          \-[NUM_INT] Node: '1'

2021-01-18 18:06:06 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 18:06:06 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Post (generatedAlias0) -> post0_
2021-01-18 18:06:06 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:06:06 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:06:06 DEBUG DotNode:695 - getDataType() : postId -> org.hibernate.type.IntegerType@1efe439d
2021-01-18 18:06:06 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.postId -> post0_.post_id
2021-01-18 18:06:06 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 18:06:06 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} post0_.post_id ) ( FromClause{level=1} Posts post0_ ) ( where ( = ( post0_.post_id post0_.post_id postId ) 1 ) ) )
2021-01-18 18:06:06 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [Posts]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.Post)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.project.model.Post)
          | path: generatedAlias0.postId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.project.model.Post)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: postId
          \-LiteralNode

2021-01-18 18:06:06 DEBUG JoinProcessor:304 - Using FROM fragment [Posts post0_]
2021-01-18 18:06:06 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 18:06:06 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Posts)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'post0_.post_id as post_id1_2_' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |  \-[SQL_TOKEN] SqlFragment: 'post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Posts post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Posts,tableAlias=post0_,origin=null,columns={,className=com.project.model.Post}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'post0_.post_id' {propertyName=postId,dereferenceType=PRIMITIVE,getPropertyPath=postId,path=generatedAlias0.postId,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'post0_.post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
          |  \-[IDENT] IdentNode: 'postId' {originalText=postId}
          \-[NUM_INT] LiteralNode: '1'

2021-01-18 18:06:06 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:06:06 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 where generatedAlias0.postId=1
2021-01-18 18:06:06 DEBUG QueryTranslatorImpl:259 - SQL: select post0_.post_id as post_id1_2_, post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_ from Posts post0_ where post0_.post_id=1
2021-01-18 18:06:06 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:06:06 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    where
        post0_.post_id=1
2021-01-18 18:06:06 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:06:06 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:06:07 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:06:07 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:06:06.840
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:06:07 DEBUG TransactionImpl:98 - committing
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:06:07 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:06:06.840}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:06:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:06:07 DEBUG TransactionImpl:81 - begin
2021-01-18 18:06:07 DEBUG TransactionImpl:98 - committing
2021-01-18 18:06:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:06:07 DEBUG TransactionImpl:81 - begin
2021-01-18 18:06:07 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 where generatedAlias0.author=1 order by generatedAlias0.timestamp desc
2021-01-18 18:06:07 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 where generatedAlias0.author=1 order by generatedAlias0.timestamp desc
2021-01-18 18:06:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:06:07 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'project'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Post'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias0'
    |     |  \-[IDENT] Node: 'author'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'timestamp'
       \-[DESCENDING] Node: 'desc'

2021-01-18 18:06:07 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 18:06:07 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Post (generatedAlias0) -> post0_
2021-01-18 18:06:07 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:06:07 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:06:07 DEBUG DotNode:695 - getDataType() : author -> org.hibernate.type.ManyToOneType(com.project.model.User)
2021-01-18 18:06:07 DEBUG DotNode:653 - dereferenceShortcut() : property author in com.project.model.Post does not require a join.
2021-01-18 18:06:07 DEBUG DotNode:682 - Terminal getPropertyPath = [author]
2021-01-18 18:06:07 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.author -> post0_.user_id_fk
2021-01-18 18:06:07 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:06:07 DEBUG DotNode:695 - getDataType() : timestamp -> org.hibernate.type.LocalDateTimeType@492691d7
2021-01-18 18:06:07 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.timestamp -> post0_.timestamp
2021-01-18 18:06:07 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 18:06:07 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} post0_.post_id ) ( FromClause{level=1} Posts post0_ ) ( where ( = ( post0_.user_id_fk post0_.post_id author ) 1 ) ) ( order ( post0_.timestamp post0_.post_id timestamp ) desc ) )
2021-01-18 18:06:07 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [Posts]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.Post)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    +-SqlNode
    |  \-BinaryLogicOperatorNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.project.model.Post)
    |     | path: generatedAlias0.author
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.project.model.Post)
    |     |  | originalText: generatedAlias0
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: author
    |     \-LiteralNode
    \-OrderByClause
       +-DotNode
       | persister: SingleTableEntityPersister(com.project.model.Post)
       | path: generatedAlias0.timestamp
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.project.model.Post)
       |  | originalText: generatedAlias0
       |  \-IdentNode
       |    persister: null
       |    originalText: timestamp
       \-SqlNode

2021-01-18 18:06:07 DEBUG JoinProcessor:304 - Using FROM fragment [Posts post0_]
2021-01-18 18:06:07 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 18:06:07 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Posts)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'post0_.post_id as post_id1_2_' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |  \-[SQL_TOKEN] SqlFragment: 'post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Posts post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Posts,tableAlias=post0_,origin=null,columns={,className=com.project.model.Post}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'post0_.user_id_fk' {propertyName=author,dereferenceType=UNKNOWN,getPropertyPath=author,path=generatedAlias0.author,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
    |     |  +-[ALIAS_REF] IdentNode: 'post0_.post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |     |  \-[IDENT] IdentNode: 'author' {originalText=author}
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'post0_.timestamp' {propertyName=timestamp,dereferenceType=PRIMITIVE,getPropertyPath=timestamp,path=generatedAlias0.timestamp,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'post0_.post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
       |  \-[IDENT] IdentNode: 'timestamp' {originalText=timestamp}
       \-[DESCENDING] SqlNode: 'desc'

2021-01-18 18:06:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:06:07 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 where generatedAlias0.author=1 order by generatedAlias0.timestamp desc
2021-01-18 18:06:07 DEBUG QueryTranslatorImpl:259 - SQL: select post0_.post_id as post_id1_2_, post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_ from Posts post0_ where post0_.user_id_fk=1 order by post0_.timestamp desc
2021-01-18 18:06:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:06:07 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    where
        post0_.user_id_fk=1 
    order by
        post0_.timestamp desc
2021-01-18 18:06:07 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:06:07 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:06:07 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:06:07 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:06:06.840
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:06:07 DEBUG TransactionImpl:98 - committing
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:06:07 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:06:06.840}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:06:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:06:07 DEBUG TransactionImpl:81 - begin
2021-01-18 18:06:07 DEBUG TransactionImpl:98 - committing
2021-01-18 18:06:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:06:07 DEBUG TransactionImpl:81 - begin
2021-01-18 18:06:07 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
2021-01-18 18:06:07 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0
2021-01-18 18:06:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:06:07 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'project'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-01-18 18:06:07 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 18:06:07 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.User (generatedAlias0) -> user0_
2021-01-18 18:06:07 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> user0_.user_id
2021-01-18 18:06:07 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 18:06:07 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} Users user0_ ) )
2021-01-18 18:06:07 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [Users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-01-18 18:06:07 DEBUG JoinProcessor:304 - Using FROM fragment [Users user0_]
2021-01-18 18:06:07 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 18:06:07 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_3_' {alias=generatedAlias0, className=com.project.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.project.model.User}}

2021-01-18 18:06:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:06:07 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0
2021-01-18 18:06:07 DEBUG QueryTranslatorImpl:259 - SQL: select user0_.user_id as user_id1_3_, user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_ from Users user0_
2021-01-18 18:06:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:06:07 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_,
        user0_.email as email2_3_,
        user0_.firstname as firstnam3_3_,
        user0_.lastname as lastname4_3_,
        user0_.password as password5_3_,
        user0_.profile_picture as profile_6_3_,
        user0_.password_salt as password7_3_,
        user0_.username as username8_3_ 
    from
        Users user0_
2021-01-18 18:06:07 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:06:07 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#1]
2021-01-18 18:06:07 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:06:07 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#2]
2021-01-18 18:06:07 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:06:07 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#3]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:06:07 DEBUG TransactionImpl:98 - committing
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:06:07 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:06:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:06:07 DEBUG TransactionImpl:81 - begin
2021-01-18 18:06:07 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:06:07 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:06:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:06:07 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'project'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Post'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'timestamp'
       \-[DESCENDING] Node: 'desc'

2021-01-18 18:06:07 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 18:06:07 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Post (generatedAlias0) -> post0_
2021-01-18 18:06:07 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:06:07 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:06:07 DEBUG DotNode:695 - getDataType() : timestamp -> org.hibernate.type.LocalDateTimeType@492691d7
2021-01-18 18:06:07 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.timestamp -> post0_.timestamp
2021-01-18 18:06:07 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 18:06:07 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} post0_.post_id ) ( FromClause{level=1} Posts post0_ ) ( order ( post0_.timestamp post0_.post_id timestamp ) desc ) )
2021-01-18 18:06:07 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [Posts]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.Post)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-OrderByClause
       +-DotNode
       | persister: SingleTableEntityPersister(com.project.model.Post)
       | path: generatedAlias0.timestamp
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.project.model.Post)
       |  | originalText: generatedAlias0
       |  \-IdentNode
       |    persister: null
       |    originalText: timestamp
       \-SqlNode

2021-01-18 18:06:07 DEBUG JoinProcessor:304 - Using FROM fragment [Posts post0_]
2021-01-18 18:06:07 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 18:06:07 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Posts)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'post0_.post_id as post_id1_2_' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |  \-[SQL_TOKEN] SqlFragment: 'post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Posts post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Posts,tableAlias=post0_,origin=null,columns={,className=com.project.model.Post}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'post0_.timestamp' {propertyName=timestamp,dereferenceType=PRIMITIVE,getPropertyPath=timestamp,path=generatedAlias0.timestamp,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'post0_.post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
       |  \-[IDENT] IdentNode: 'timestamp' {originalText=timestamp}
       \-[DESCENDING] SqlNode: 'desc'

2021-01-18 18:06:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:06:07 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:06:07 DEBUG QueryTranslatorImpl:259 - SQL: select post0_.post_id as post_id1_2_, post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_ from Posts post0_ order by post0_.timestamp desc
2021-01-18 18:06:07 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:06:07 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    order by
        post0_.timestamp desc
2021-01-18 18:06:07 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:06:07 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#2]
2021-01-18 18:06:07 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:06:07 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#3]
2021-01-18 18:06:07 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:06:07 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#2]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 2
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:06:07 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:06:07 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#2
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Seans Post
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:06:06.847
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#2]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#3]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 3
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:06:07 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:06:07 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#3
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Alberts Post
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:06:06.847
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#3]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:06:07 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:06:07 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:06:06.840
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:06:07 DEBUG TransactionImpl:98 - committing
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:06:07 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:06:06.840}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Seans Post, author=com.project.model.User#2, postId=2, postPicture=null, timestamp=2021-01-18T18:06:06.847}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Alberts Post, author=com.project.model.User#3, postId=3, postPicture=null, timestamp=2021-01-18T18:06:06.847}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:06:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:06:07 DEBUG TransactionImpl:81 - begin
2021-01-18 18:06:07 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-01-18 18:06:07 DEBUG SQL:144 - 
    insert 
    into
        Posts
        (post_id, user_id_fk, post_picture, post_text, timestamp) 
    values
        (null, ?, ?, ?, ?)
2021-01-18 18:06:07 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 4
2021-01-18 18:06:07 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-01-18 18:06:07 DEBUG TransactionImpl:98 - committing
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:06:07 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.Post{postText=some text, author=com.project.model.User#1, postId=4, postPicture=null, timestamp=2021-01-18T18:06:07.185}
2021-01-18 18:06:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:06:07 DEBUG TransactionImpl:81 - begin
2021-01-18 18:06:07 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:06:07 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    order by
        post0_.timestamp desc
2021-01-18 18:06:07 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:06:07 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#4]
2021-01-18 18:06:07 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:06:07 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#2]
2021-01-18 18:06:07 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:06:07 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#3]
2021-01-18 18:06:07 DEBUG Loader:384 - Result set row: 3
2021-01-18 18:06:07 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#4]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:06:07 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:06:07 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = some text
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:06:07.185
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#4]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#2]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 2
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:06:07 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:06:07 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#2
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Seans Post
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:06:06.847
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#2]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#3]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 3
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:06:07 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:06:07 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#3
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Alberts Post
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:06:06.847
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#3]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:06:06.840
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:06:07 DEBUG TransactionImpl:98 - committing
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:06:07 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:06:06.840}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Seans Post, author=com.project.model.User#2, postId=2, postPicture=null, timestamp=2021-01-18T18:06:06.847}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Alberts Post, author=com.project.model.User#3, postId=3, postPicture=null, timestamp=2021-01-18T18:06:06.847}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.Post{postText=some text, author=com.project.model.User#1, postId=4, postPicture=null, timestamp=2021-01-18T18:06:07.185}
2021-01-18 18:06:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:06:07 DEBUG TransactionImpl:81 - begin
2021-01-18 18:06:07 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:06:07 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    order by
        post0_.timestamp desc
2021-01-18 18:06:07 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:06:07 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#4]
2021-01-18 18:06:07 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:06:07 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#2]
2021-01-18 18:06:07 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:06:07 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#3]
2021-01-18 18:06:07 DEBUG Loader:384 - Result set row: 3
2021-01-18 18:06:07 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#4]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:06:07 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:06:07 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = some text
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:06:07.185
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#4]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#2]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 2
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:06:07 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:06:07 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#2
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Seans Post
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:06:06.847
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#2]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#3]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 3
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:06:07 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:06:07 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#3
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Alberts Post
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:06:06.847
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#3]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:06:06.840
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:06:07 DEBUG TransactionImpl:98 - committing
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:06:07 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:06:06.840}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Seans Post, author=com.project.model.User#2, postId=2, postPicture=null, timestamp=2021-01-18T18:06:06.847}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Alberts Post, author=com.project.model.User#3, postId=3, postPicture=null, timestamp=2021-01-18T18:06:06.847}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.Post{postText=some text, author=com.project.model.User#1, postId=4, postPicture=null, timestamp=2021-01-18T18:06:07.185}
2021-01-18 18:06:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:06:07 DEBUG TransactionImpl:81 - begin
2021-01-18 18:06:07 DEBUG TransactionImpl:98 - committing
2021-01-18 18:06:07 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:06:07 DEBUG TransactionImpl:81 - begin
2021-01-18 18:06:07 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:06:07 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    order by
        post0_.timestamp desc
2021-01-18 18:06:07 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:06:07 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#4]
2021-01-18 18:06:07 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:06:07 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#2]
2021-01-18 18:06:07 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:06:07 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#3]
2021-01-18 18:06:07 DEBUG Loader:384 - Result set row: 3
2021-01-18 18:06:07 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#4]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:06:07 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:06:07 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = some text
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:06:07.185
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#4]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#2]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 2
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:06:07 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:06:07 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#2
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Seans Post
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:06:06.847
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#2]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#3]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 3
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:06:07 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:06:07 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#3
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Alberts Post
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:06:06.847
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#3]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:06:06.840
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:06:07 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:06:07 DEBUG TransactionImpl:98 - committing
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
2021-01-18 18:06:07 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:06:07 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:06:06.840}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Seans Post, author=com.project.model.User#2, postId=2, postPicture=null, timestamp=2021-01-18T18:06:06.847}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Alberts Post, author=com.project.model.User#3, postId=3, postPicture=null, timestamp=2021-01-18T18:06:06.847}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:06:07 DEBUG EntityPrinter:117 - com.project.model.Post{postText=some text, author=com.project.model.User#1, postId=4, postPicture=null, timestamp=2021-01-18T18:06:07.185}
2021-01-18 18:07:03 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-01-18 18:07:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-01-18 18:07:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-01-18 18:07:03 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-01-18 18:07:03 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.25.Final
2021-01-18 18:07:03 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-01-18 18:07:03 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-01-18 18:07:03 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-01-18 18:07:03 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-01-18 18:07:03 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-01-18 18:07:03 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-01-18 18:07:03 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@457c9034
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@457c9034
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@457c9034
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f57bcad
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7daa0fbd
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@181e731e
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@17d88132
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@17d88132
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17d88132
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@36b4091c
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@36b4091c
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@36b4091c
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5b367418
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5b367418
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5b367418
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@1efe439d
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@1efe439d
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1efe439d
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@413f69cc
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@413f69cc
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@413f69cc
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@39ac0c0a
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@39ac0c0a
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39ac0c0a
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@65b104b9
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@65b104b9
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@65b104b9
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@54504ecd
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@54504ecd
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6239aba6
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6239aba6
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@7164ca4c
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@7164ca4c
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3f91b517
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2421cc4
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@58ce9668
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@58ce9668
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@1fa1cab1
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1fa1cab1
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@5c2375a9
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5c2375a9
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@492691d7
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@492691d7
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@67545b57
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@67545b57
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@74589991
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@74589991
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1869fbd2
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1869fbd2
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@ca30bc1
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@ca30bc1
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@10a9d961
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@10a9d961
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@a4add54
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@a4add54
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@61fe30
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@61fe30
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7b420819
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7b420819
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7b420819
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@a3d9978
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@1e461e41
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e461e41
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e461e41
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3899782c
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@30e868be
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@13ad5cd3
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13ad5cd3
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@6581dc0a
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6581dc0a
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@77128536
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@77128536
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@4c1f22f3
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4c1f22f3
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@484094a5
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@484094a5
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@602e0143
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@34c01041
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@34c01041
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@34c01041
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7f0d96f2
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7f0d96f2
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7f0d96f2
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@49ff7d8c
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@77102b91
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@3f9342d4
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3f9342d4
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@3f9342d4
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3d3e5463
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3d3e5463
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3d3e5463
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@42b02722
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@528c868
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@7a1234bf
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7a1234bf
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@38aa816f
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@39a2bb97
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@39a2bb97
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5bf8fa12
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5bf8fa12
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5812f68b
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@55493582
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@52c3cb31
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@1c481ff2
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1c481ff2
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@676cf48
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a1de7fb
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@335b5620
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@29a0cdb
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@32a68f4f
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@73194df
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6eb2384f
2021-01-18 18:07:03 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3c9c0d96
2021-01-18 18:07:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-01-18 18:07:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-01-18 18:07:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-01-18 18:07:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-01-18 18:07:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-01-18 18:07:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-01-18 18:07:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-01-18 18:07:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-01-18 18:07:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-01-18 18:07:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-01-18 18:07:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-01-18 18:07:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-01-18 18:07:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-01-18 18:07:03 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-01-18 18:07:03 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
2021-01-18 18:07:03 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
2021-01-18 18:07:03 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.1
2021-01-18 18:07:03 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2021-01-18 18:07:04 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-01-18 18:07:04 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-01-18 18:07:04 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ab14cb9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5fb97279]
2021-01-18 18:07:04 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.Like
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 18:07:04 DEBUG EntityBinder:430 - Import with entity name Like
2021-01-18 18:07:04 DEBUG EntityBinder:873 - Bind entity com.project.model.Like on table Likes
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=like_id, insertable=true, updatable=true, unique=false}
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-18 18:07:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property likeId with lazy=false
2021-01-18 18:07:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Like:likeId]
2021-01-18 18:07:04 DEBUG SimpleValueBinder:410 - building SimpleValue for likeId
2021-01-18 18:07:04 DEBUG PropertyBinder:266 - Building property likeId
2021-01-18 18:07:04 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(like_id)]), likeId, identity, , ...)
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id_fk', referencedColumn='post_id', mappedBy=''}
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=post, insertable=true, updatable=true, unique=false}
2021-01-18 18:07:04 DEBUG PropertyBinder:266 - Building property post
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id_fk', referencedColumn='user_id', mappedBy=''}
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-01-18 18:07:04 DEBUG PropertyBinder:266 - Building property user
2021-01-18 18:07:04 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.PasswordResetToken
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 18:07:04 DEBUG EntityBinder:430 - Import with entity name PasswordResetToken
2021-01-18 18:07:04 DEBUG EntityBinder:873 - Bind entity com.project.model.PasswordResetToken on table PasswordResetToken
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-18 18:07:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-01-18 18:07:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:id]
2021-01-18 18:07:04 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-01-18 18:07:04 DEBUG PropertyBinder:266 - Building property id
2021-01-18 18:07:04 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=expiryDate, insertable=true, updatable=true, unique=false}
2021-01-18 18:07:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expiryDate with lazy=false
2021-01-18 18:07:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:expiryDate]
2021-01-18 18:07:04 DEBUG SimpleValueBinder:410 - building SimpleValue for expiryDate
2021-01-18 18:07:04 DEBUG PropertyBinder:266 - Building property expiryDate
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=token, insertable=true, updatable=true, unique=false}
2021-01-18 18:07:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property token with lazy=false
2021-01-18 18:07:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:token]
2021-01-18 18:07:04 DEBUG SimpleValueBinder:410 - building SimpleValue for token
2021-01-18 18:07:04 DEBUG PropertyBinder:266 - Building property token
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-01-18 18:07:04 DEBUG PropertyBinder:266 - Building property user
2021-01-18 18:07:04 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.Post
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 18:07:04 DEBUG EntityBinder:430 - Import with entity name Post
2021-01-18 18:07:04 DEBUG EntityBinder:873 - Bind entity com.project.model.Post on table Posts
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-18 18:07:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-01-18 18:07:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postId]
2021-01-18 18:07:04 DEBUG SimpleValueBinder:410 - building SimpleValue for postId
2021-01-18 18:07:04 DEBUG PropertyBinder:266 - Building property postId
2021-01-18 18:07:04 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id_fk', referencedColumn='user_id', mappedBy=''}
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=author, insertable=true, updatable=true, unique=false}
2021-01-18 18:07:04 DEBUG PropertyBinder:266 - Building property author
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_picture, insertable=true, updatable=true, unique=false}
2021-01-18 18:07:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postPicture with lazy=false
2021-01-18 18:07:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postPicture]
2021-01-18 18:07:04 DEBUG SimpleValueBinder:410 - building SimpleValue for postPicture
2021-01-18 18:07:04 DEBUG PropertyBinder:266 - Building property postPicture
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_text, insertable=true, updatable=true, unique=false}
2021-01-18 18:07:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postText with lazy=false
2021-01-18 18:07:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postText]
2021-01-18 18:07:04 DEBUG SimpleValueBinder:410 - building SimpleValue for postText
2021-01-18 18:07:04 DEBUG PropertyBinder:266 - Building property postText
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=timestamp, insertable=true, updatable=true, unique=false}
2021-01-18 18:07:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property timestamp with lazy=false
2021-01-18 18:07:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:timestamp]
2021-01-18 18:07:04 DEBUG SimpleValueBinder:410 - building SimpleValue for timestamp
2021-01-18 18:07:04 DEBUG PropertyBinder:266 - Building property timestamp
2021-01-18 18:07:04 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.User
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 18:07:04 DEBUG EntityBinder:430 - Import with entity name User
2021-01-18 18:07:04 DEBUG EntityBinder:873 - Bind entity com.project.model.User on table Users
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-18 18:07:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-01-18 18:07:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:userId]
2021-01-18 18:07:04 DEBUG SimpleValueBinder:410 - building SimpleValue for userId
2021-01-18 18:07:04 DEBUG PropertyBinder:266 - Building property userId
2021-01-18 18:07:04 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, identity, , ...)
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-01-18 18:07:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-01-18 18:07:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:email]
2021-01-18 18:07:04 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-01-18 18:07:04 DEBUG PropertyBinder:266 - Building property email
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
2021-01-18 18:07:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-01-18 18:07:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:firstName]
2021-01-18 18:07:04 DEBUG SimpleValueBinder:410 - building SimpleValue for firstName
2021-01-18 18:07:04 DEBUG PropertyBinder:266 - Building property firstName
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
2021-01-18 18:07:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-01-18 18:07:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:lastName]
2021-01-18 18:07:04 DEBUG SimpleValueBinder:410 - building SimpleValue for lastName
2021-01-18 18:07:04 DEBUG PropertyBinder:266 - Building property lastName
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-01-18 18:07:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-01-18 18:07:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:password]
2021-01-18 18:07:04 DEBUG SimpleValueBinder:410 - building SimpleValue for password
2021-01-18 18:07:04 DEBUG PropertyBinder:266 - Building property password
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=profile_picture, insertable=true, updatable=true, unique=false}
2021-01-18 18:07:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property profilePicture with lazy=false
2021-01-18 18:07:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:profilePicture]
2021-01-18 18:07:04 DEBUG SimpleValueBinder:410 - building SimpleValue for profilePicture
2021-01-18 18:07:04 DEBUG PropertyBinder:266 - Building property profilePicture
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=password_salt, insertable=true, updatable=true, unique=false}
2021-01-18 18:07:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property salt with lazy=false
2021-01-18 18:07:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:salt]
2021-01-18 18:07:04 DEBUG SimpleValueBinder:410 - building SimpleValue for salt
2021-01-18 18:07:04 DEBUG PropertyBinder:266 - Building property salt
2021-01-18 18:07:04 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-01-18 18:07:04 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-01-18 18:07:04 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:username]
2021-01-18 18:07:04 DEBUG SimpleValueBinder:410 - building SimpleValue for username
2021-01-18 18:07:04 DEBUG PropertyBinder:266 - Building property username
2021-01-18 18:07:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for likeId
2021-01-18 18:07:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-01-18 18:07:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expiryDate
2021-01-18 18:07:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for token
2021-01-18 18:07:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postId
2021-01-18 18:07:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postPicture
2021-01-18 18:07:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postText
2021-01-18 18:07:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for timestamp
2021-01-18 18:07:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userId
2021-01-18 18:07:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-01-18 18:07:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for firstName
2021-01-18 18:07:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lastName
2021-01-18 18:07:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for password
2021-01-18 18:07:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for profilePicture
2021-01-18 18:07:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for salt
2021-01-18 18:07:04 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for username
2021-01-18 18:07:04 DEBUG PrimaryKey:35 - Forcing column [like_id] to be non-null as it is part of the primary key for table [likes]
2021-01-18 18:07:04 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [passwordresettoken]
2021-01-18 18:07:04 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-01-18 18:07:04 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-01-18 18:07:04 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.Post
2021-01-18 18:07:04 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:07:04 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:07:04 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:07:04 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.Post
2021-01-18 18:07:04 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:07:04 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:07:04 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:07:04 DEBUG SessionFactoryImpl:203 - Building session factory
2021-01-18 18:07:04 DEBUG Settings:68 - SessionFactory name : null
2021-01-18 18:07:04 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-01-18 18:07:04 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-01-18 18:07:04 DEBUG Settings:72 - Statistics: disabled
2021-01-18 18:07:04 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-01-18 18:07:04 DEBUG Settings:75 - Default entity-mode: pojo
2021-01-18 18:07:04 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-01-18 18:07:04 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-01-18 18:07:04 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-01-18 18:07:04 DEBUG Settings:80 - Default batch fetch size: -1
2021-01-18 18:07:04 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-01-18 18:07:04 DEBUG Settings:82 - Default null ordering: NONE
2021-01-18 18:07:04 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-01-18 18:07:04 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-01-18 18:07:04 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-01-18 18:07:04 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-01-18 18:07:04 DEBUG Settings:90 - Query language substitutions: {}
2021-01-18 18:07:04 DEBUG Settings:91 - Named query checking : enabled
2021-01-18 18:07:04 DEBUG Settings:93 - Second-level cache: disabled
2021-01-18 18:07:04 DEBUG Settings:94 - Second-level query cache: disabled
2021-01-18 18:07:04 DEBUG Settings:95 - Second-level query cache factory: null
2021-01-18 18:07:04 DEBUG Settings:96 - Second-level cache region prefix: null
2021-01-18 18:07:04 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-01-18 18:07:04 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-01-18 18:07:04 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-01-18 18:07:04 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-01-18 18:07:04 DEBUG Settings:102 - JDBC batch size: 15
2021-01-18 18:07:04 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-01-18 18:07:04 DEBUG Settings:104 - Scrollable result sets: enabled
2021-01-18 18:07:04 DEBUG Settings:105 - Wrap result sets: disabled
2021-01-18 18:07:04 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-01-18 18:07:04 DEBUG Settings:107 - JDBC result set fetch size: null
2021-01-18 18:07:04 DEBUG Settings:108 - Connection release mode: ON_CLOSE
2021-01-18 18:07:04 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-01-18 18:07:04 DEBUG Settings:111 - JPA compliance - query : disabled
2021-01-18 18:07:04 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-01-18 18:07:04 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-01-18 18:07:04 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-01-18 18:07:04 DEBUG SessionFactoryImpl:258 - Session factory constructed with filter configurations : {}
2021-01-18 18:07:04 DEBUG SessionFactoryImpl:259 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@46baf579, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2\target\test-classes;C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2\target\classes;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\annotations-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ant.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ha.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ssi.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-storeconfig.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-tribes.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\ecj-4.17.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\el-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jasper-el.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jasper.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jaspic-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jsp-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\servlet-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-coyote.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-dbcp.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-cs.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-de.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-es.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-fr.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ja.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ko.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-pt-BR.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ru.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-zh-CN.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-jdbc.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-jni.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-util-scan.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-util.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-websocket.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\websocket-api.jar;C:\Users\david\.m2\repository\org\postgresql\postgresql\42.2.14\postgresql-42.2.14.jar;C:\Users\david\.m2\repository\org\hibernate\hibernate-core\5.4.25.Final\hibernate-core-5.4.25.Final.jar;C:\Users\david\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\david\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\david\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\david\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\david\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\david\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\david\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\david\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\david\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\david\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\david\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\david\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\david\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\david\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\david\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\david\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\david\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\david\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.5.Final\hibernate-validator-6.1.5.Final.jar;C:\Users\david\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\david\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\david\.m2\repository\junit\junit\4.13\junit-4.13.jar;C:\Users\david\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.11.3\jackson-databind-2.11.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.3\jackson-annotations-2.11.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.3\jackson-core-2.11.3.jar;C:\Users\david\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\david\.m2\repository\org\springframework\spring-core\5.2.12.RELEASE\spring-core-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-jcl\5.2.12.RELEASE\spring-jcl-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-beans\5.2.12.RELEASE\spring-beans-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-context\5.2.12.RELEASE\spring-context-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-aop\5.2.12.RELEASE\spring-aop-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-expression\5.2.12.RELEASE\spring-expression-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-orm\5.2.12.RELEASE\spring-orm-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-jdbc\5.2.12.RELEASE\spring-jdbc-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-tx\5.2.12.RELEASE\spring-tx-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-webmvc\5.2.12.RELEASE\spring-webmvc-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-web\5.2.12.RELEASE\spring-web-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-context-support\5.2.12.RELEASE\spring-context-support-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\javax\mail\javax.mail-api\1.6.2\javax.mail-api-1.6.2.jar;C:\Users\david\.m2\repository\com\sun\mail\javax.mail\1.6.2\javax.mail-1.6.2.jar;C:\Users\david\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\david\.m2\repository\org\springframework\spring-aspects\5.2.12.RELEASE\spring-aspects-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\david\.m2\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;C:\Users\david\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-s3\1.11.327\aws-java-sdk-s3-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-kms\1.11.327\aws-java-sdk-kms-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-core\1.11.327\aws-java-sdk-core-1.11.327.jar;C:\Users\david\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\david\.m2\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;C:\Users\david\.m2\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;C:\Users\david\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\david\.m2\repository\software\amazon\ion\ion-java\1.0.2\ion-java-1.0.2.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-cbor\2.6.7\jackson-dataformat-cbor-2.6.7.jar;C:\Users\david\.m2\repository\joda-time\joda-time\2.8.1\joda-time-2.8.1.jar;C:\Users\david\.m2\repository\com\amazonaws\jmespath-java\1.11.327\jmespath-java-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-dynamodb\1.11.327\aws-java-sdk-dynamodb-1.11.327.jar;C:\sts-bundle\sts-3.9.13.RELEASE\configuration\org.eclipse.osgi\311\0\.cp;C:\sts-bundle\sts-3.9.13.RELEASE\configuration\org.eclipse.osgi\310\0\.cp, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Los_Angeles, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_271\bin, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 64020 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.project.test.PostDaoTest, sun.cpu.endian=little, user.home=C:\Users\david, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_271, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_271\lib\resources.jar;C:\Program Files\Java\jre1.8.0_271\lib\rt.jar;C:\Program Files\Java\jre1.8.0_271\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_271\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_271\lib\jce.jar;C:\Program Files\Java\jre1.8.0_271\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_271\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_271\classes, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=david, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_271\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@3d494fbf], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\david\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4bf324f9, java.library.path=C:\Program Files\Java\jre1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_271/bin/server;C:/Program Files/Java/jre1.8.0_271/bin;C:/Program Files/Java/jre1.8.0_271/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\ProgramData\chocolatey\bin;C:\ProgramData\nvm;C:\Program Files\nodejs;C:\Program Files\Microsoft VS Code\bin;D:\PuTTY\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Users\david\AppData\Local\Microsoft\WindowsApps;C:\sts-bundle\sts-3.9.13.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@77888435, java.ext.dirs=C:\Program Files\Java\jre1.8.0_271\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-01-18 18:07:04 INFO  Version:21 - HV000001: Hibernate Validator 6.1.5.Final
2021-01-18 18:07:04 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-01-18 18:07:04 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-01-18 18:07:04 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-01-18 18:07:04 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-01-18 18:07:04 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-01-18 18:07:04 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-01-18 18:07:04 DEBUG ResourceBundleMessageInterpolator:172 - Loaded expression factory via original TCCL
2021-01-18 18:07:04 DEBUG ValidatorFactoryConfigurationHelper:300 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-01-18 18:07:04 DEBUG ValidatorFactoryConfigurationHelper:375 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-01-18 18:07:04 DEBUG ValidatorFactoryConfigurationHelper:376 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-01-18 18:07:04 DEBUG ValidatorFactoryConfigurationHelper:377 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-01-18 18:07:04 DEBUG ValidatorFactoryConfigurationHelper:378 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-01-18 18:07:04 DEBUG ValidatorFactoryConfigurationHelper:379 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-18 18:07:04 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-01-18 18:07:04 DEBUG SessionFactoryImpl:298 - Instantiated session factory
2021-01-18 18:07:04 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ab14cb9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@784c5ef5]
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-18 18:07:04 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.PasswordResetToken
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:3928 -  Version select: select id from PasswordResetToken where id =?
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select passwordre_.id, passwordre_.expiryDate as expiryda2_1_, passwordre_.token as token3_1_, passwordre_.user_id as user_id4_1_ from PasswordResetToken passwordre_ where passwordre_.id=?
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into PasswordResetToken (expiryDate, token, user_id, id) values (?, ?, ?, ?)
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:394 -  Update 0: update PasswordResetToken set expiryDate=?, token=?, user_id=? where id=?
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from PasswordResetToken where id=?
2021-01-18 18:07:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@646c0a67]
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expiryDate
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : token
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-01-18 18:07:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a2bcd56]
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.email
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.firstName
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.lastName
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.password
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.profilePicture
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.salt
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.username
2021-01-18 18:07:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 18:07:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 18:07:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.PasswordResetToken)
    - Returns
       - EntityReturnImpl(entity=com.project.model.PasswordResetToken, querySpaceUid=<gen:0>, path=com.project.model.PasswordResetToken)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:1>, path=com.project.model.PasswordResetToken.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.PasswordResetToken)
          - SQL table alias mapping - passwordre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_3_1_}

2021-01-18 18:07:04 DEBUG EntityLoader:129 - Static select for entity com.project.model.PasswordResetToken [NONE]: select passwordre0_.id as id1_1_0_, passwordre0_.expiryDate as expiryda2_1_0_, passwordre0_.token as token3_1_0_, passwordre0_.user_id as user_id4_1_0_, user1_.user_id as user_id1_3_1_, user1_.email as email2_3_1_, user1_.firstname as firstnam3_3_1_, user1_.lastname as lastname4_3_1_, user1_.password as password5_3_1_, user1_.profile_picture as profile_6_3_1_, user1_.password_salt as password7_3_1_, user1_.username as username8_3_1_ from PasswordResetToken passwordre0_ inner join Users user1_ on passwordre0_.user_id=user1_.user_id where passwordre0_.id=?
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.Like
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:3928 -  Version select: select like_id from Likes where like_id =?
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select like_.like_id, like_.post_id_fk as post_id_2_0_, like_.user_id_fk as user_id_3_0_ from Likes like_ where like_.like_id=?
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Likes (post_id_fk, user_id_fk, like_id) values (?, ?, ?)
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:394 -  Update 0: update Likes set post_id_fk=?, user_id_fk=? where like_id=?
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Likes where like_id=?
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Likes (like_id, post_id_fk, user_id_fk) values (null, ?, ?)
2021-01-18 18:07:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@588f63c]
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post
2021-01-18 18:07:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1981d861]
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author
2021-01-18 18:07:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f4c1e6]
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.email
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.firstName
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.lastName
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.password
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.profilePicture
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.salt
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.username
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.postPicture
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.postText
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.timestamp
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-01-18 18:07:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6342d610]
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.email
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.firstName
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.lastName
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.password
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.profilePicture
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.salt
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.username
2021-01-18 18:07:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 18:07:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 18:07:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.Like)
    - Returns
       - EntityReturnImpl(entity=com.project.model.Like, querySpaceUid=<gen:0>, path=com.project.model.Like)
          - EntityAttributeFetchImpl(entity=com.project.model.Post, querySpaceUid=<gen:1>, path=com.project.model.Like.post)
             - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:2>, path=com.project.model.Like.post.author)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:3>, path=com.project.model.Like.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.Like)
          - SQL table alias mapping - like0_
          - alias suffix - 0_
          - suffixed key columns - {like_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(post)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.project.model.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_3_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.project.model.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {user_id1_3_3_}

2021-01-18 18:07:04 DEBUG EntityLoader:129 - Static select for entity com.project.model.Like [NONE]: select like0_.like_id as like_id1_0_0_, like0_.post_id_fk as post_id_2_0_0_, like0_.user_id_fk as user_id_3_0_0_, post1_.post_id as post_id1_2_1_, post1_.user_id_fk as user_id_5_2_1_, post1_.post_picture as post_pic2_2_1_, post1_.post_text as post_tex3_2_1_, post1_.timestamp as timestam4_2_1_, user2_.user_id as user_id1_3_2_, user2_.email as email2_3_2_, user2_.firstname as firstnam3_3_2_, user2_.lastname as lastname4_3_2_, user2_.password as password5_3_2_, user2_.profile_picture as profile_6_3_2_, user2_.password_salt as password7_3_2_, user2_.username as username8_3_2_, user3_.user_id as user_id1_3_3_, user3_.email as email2_3_3_, user3_.firstname as firstnam3_3_3_, user3_.lastname as lastname4_3_3_, user3_.password as password5_3_3_, user3_.profile_picture as profile_6_3_3_, user3_.password_salt as password7_3_3_, user3_.username as username8_3_3_ from Likes like0_ left outer join Posts post1_ on like0_.post_id_fk=post1_.post_id left outer join Users user2_ on post1_.user_id_fk=user2_.user_id left outer join Users user3_ on like0_.user_id_fk=user3_.user_id where like0_.like_id=?
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.User
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:3928 -  Version select: select user_id from Users where user_id =?
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select user_.user_id, user_.email as email2_3_, user_.firstname as firstnam3_3_, user_.lastname as lastname4_3_, user_.password as password5_3_, user_.profile_picture as profile_6_3_, user_.password_salt as password7_3_, user_.username as username8_3_ from Users user_ where user_.user_id=?
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Users (email, firstname, lastname, password, profile_picture, password_salt, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:394 -  Update 0: update Users set email=?, firstname=?, lastname=?, password=?, profile_picture=?, password_salt=?, username=? where user_id=?
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Users where user_id=?
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Users (user_id, email, firstname, lastname, password, profile_picture, password_salt, username) values (null, ?, ?, ?, ?, ?, ?, ?)
2021-01-18 18:07:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@784abd3e]
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : profilePicture
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : salt
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-01-18 18:07:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 18:07:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 18:07:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.User)
    - Returns
       - EntityReturnImpl(entity=com.project.model.User, querySpaceUid=<gen:0>, path=com.project.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}

2021-01-18 18:07:04 DEBUG EntityLoader:129 - Static select for entity com.project.model.User [NONE]: select user0_.user_id as user_id1_3_0_, user0_.email as email2_3_0_, user0_.firstname as firstnam3_3_0_, user0_.lastname as lastname4_3_0_, user0_.password as password5_3_0_, user0_.profile_picture as profile_6_3_0_, user0_.password_salt as password7_3_0_, user0_.username as username8_3_0_ from Users user0_ where user0_.user_id=?
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.Post
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:3928 -  Version select: select post_id from Posts where post_id =?
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select post_.post_id, post_.user_id_fk as user_id_5_2_, post_.post_picture as post_pic2_2_, post_.post_text as post_tex3_2_, post_.timestamp as timestam4_2_ from Posts post_ where post_.post_id=?
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Posts (user_id_fk, post_picture, post_text, timestamp, post_id) values (?, ?, ?, ?, ?)
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:394 -  Update 0: update Posts set user_id_fk=?, post_picture=?, post_text=?, timestamp=? where post_id=?
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Posts where post_id=?
2021-01-18 18:07:04 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Posts (post_id, user_id_fk, post_picture, post_text, timestamp) values (null, ?, ?, ?, ?)
2021-01-18 18:07:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@434514d8]
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author
2021-01-18 18:07:04 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4613311f]
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.email
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.firstName
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.lastName
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.password
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.profilePicture
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.salt
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.username
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postPicture
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postText
2021-01-18 18:07:04 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : timestamp
2021-01-18 18:07:04 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 18:07:04 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 18:07:04 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.Post)
    - Returns
       - EntityReturnImpl(entity=com.project.model.Post, querySpaceUid=<gen:0>, path=com.project.model.Post)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:1>, path=com.project.model.Post.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_3_1_}

2021-01-18 18:07:04 DEBUG EntityLoader:129 - Static select for entity com.project.model.Post [NONE]: select post0_.post_id as post_id1_2_0_, post0_.user_id_fk as user_id_5_2_0_, post0_.post_picture as post_pic2_2_0_, post0_.post_text as post_tex3_2_0_, post0_.timestamp as timestam4_2_0_, user1_.user_id as user_id1_3_1_, user1_.email as email2_3_1_, user1_.firstname as firstnam3_3_1_, user1_.lastname as lastname4_3_1_, user1_.password as password5_3_1_, user1_.profile_picture as profile_6_3_1_, user1_.password_salt as password7_3_1_, user1_.username as username8_3_1_ from Posts post0_ left outer join Users user1_ on post0_.user_id_fk=user1_.user_id where post0_.post_id=?
2021-01-18 18:07:04 DEBUG SQL:144 - 
    
    drop table if exists Likes CASCADE 
2021-01-18 18:07:04 DEBUG SQL:144 - 
    
    drop table if exists PasswordResetToken CASCADE 
2021-01-18 18:07:04 DEBUG SQL:144 - 
    
    drop table if exists Posts CASCADE 
2021-01-18 18:07:04 DEBUG SQL:144 - 
    
    drop table if exists Users CASCADE 
2021-01-18 18:07:04 DEBUG SQL:144 - 
    
    drop sequence if exists hibernate_sequence
2021-01-18 18:07:04 DEBUG SQL:144 - create sequence hibernate_sequence start with 1 increment by 1
2021-01-18 18:07:04 DEBUG SQL:144 - 
    
    create table Likes (
       like_id integer generated by default as identity,
        post_id_fk integer,
        user_id_fk integer,
        primary key (like_id)
    )
2021-01-18 18:07:04 DEBUG SQL:144 - 
    
    create table PasswordResetToken (
       id bigint not null,
        expiryDate timestamp,
        token varchar(255),
        user_id integer not null,
        primary key (id)
    )
2021-01-18 18:07:04 DEBUG SQL:144 - 
    
    create table Posts (
       post_id integer generated by default as identity,
        post_picture varchar(255),
        post_text varchar(280) not null,
        timestamp timestamp not null,
        user_id_fk integer,
        primary key (post_id)
    )
2021-01-18 18:07:04 DEBUG SQL:144 - 
    
    create table Users (
       user_id integer generated by default as identity,
        email varchar(255) not null,
        firstname varchar(255) not null,
        lastname varchar(255) not null,
        password varchar(255) not null,
        profile_picture varchar(255),
        password_salt varchar(255) not null,
        username varchar(255) not null,
        primary key (user_id)
    )
2021-01-18 18:07:04 DEBUG SQL:144 - 
    
    alter table Users 
       add constraint UK_ncoa9bfasrql0x4nhmh1plxxy unique (email)
2021-01-18 18:07:04 DEBUG SQL:144 - 
    
    alter table Users 
       add constraint UK_23y4gd49ajvbqgl3psjsvhff6 unique (username)
2021-01-18 18:07:04 DEBUG SQL:144 - 
    
    alter table Likes 
       add constraint FKsgiuhjmogswsfkd01syvnd1uc 
       foreign key (post_id_fk) 
       references Posts
2021-01-18 18:07:04 DEBUG SQL:144 - 
    
    alter table Likes 
       add constraint FK10tjjddvctvy7e5mim2in6icy 
       foreign key (user_id_fk) 
       references Users
2021-01-18 18:07:04 DEBUG SQL:144 - 
    
    alter table PasswordResetToken 
       add constraint FKpr3o3kx11ack418b2doprb9rl 
       foreign key (user_id) 
       references Users
2021-01-18 18:07:04 DEBUG SQL:144 - 
    
    alter table Posts 
       add constraint FKq5d7uyu4hr67yrr645katvulo 
       foreign key (user_id_fk) 
       references Users
2021-01-18 18:07:04 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-01-18 18:07:04 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-01-18 18:07:04 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-18 18:07:04 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-18 18:07:04 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-01-18 18:07:04 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-01-18 18:07:04 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2bc426f0
2021-01-18 18:07:04 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 266c1715-f4a3-4e00-a61c-c1de6d17a3c6 (<unnamed>)
2021-01-18 18:07:04 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-01-18 18:07:04 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-01-18 18:07:04 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:07:04 DEBUG TransactionImpl:81 - begin
2021-01-18 18:07:05 DEBUG TransactionImpl:98 - committing
2021-01-18 18:07:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:07:05 DEBUG TransactionImpl:81 - begin
2021-01-18 18:07:05 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@79518e00
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:292 - parse() - HQL: update com.project.model.Post as generatedAlias0 set generatedAlias0.postText = :param0 where generatedAlias0.postId=1
2021-01-18 18:07:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  \-[IDENT] Node: 'project'
    |     |  |  \-[IDENT] Node: 'model'
    |     |  \-[IDENT] Node: 'Post'
    |     \-[ALIAS] Node: 'generatedAlias0'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias0'
    |     |  \-[IDENT] Node: 'postText'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'postId'
          \-[NUM_INT] Node: '1'

2021-01-18 18:07:05 DEBUG HqlSqlBaseWalker:124 - update << begin [level=1, statement=update]
2021-01-18 18:07:05 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Post (generatedAlias0) -> post0_
2021-01-18 18:07:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post_id
2021-01-18 18:07:05 DEBUG DotNode:695 - getDataType() : postText -> org.hibernate.type.StringType@7164ca4c
2021-01-18 18:07:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.postText -> post_text
2021-01-18 18:07:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post_id
2021-01-18 18:07:05 DEBUG DotNode:695 - getDataType() : postId -> org.hibernate.type.IntegerType@1efe439d
2021-01-18 18:07:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.postId -> post_id
2021-01-18 18:07:05 DEBUG HqlSqlBaseWalker:128 - update : finishing up [level=1, statement=update]
2021-01-18 18:07:05 DEBUG HqlSqlBaseWalker:132 - update >> end [level=1, statement=update]
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Posts)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Posts' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Posts,tableAlias=post0_,origin=null,columns={,className=com.project.model.Post}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'post_text' {propertyName=postText,dereferenceType=PRIMITIVE,getPropertyPath=postText,path=generatedAlias0.postText,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
    |     |  +-[ALIAS_REF] IdentNode: 'post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |     |  \-[IDENT] IdentNode: 'postText' {originalText=postText}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7164ca4c}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'post_id' {propertyName=postId,dereferenceType=PRIMITIVE,getPropertyPath=postId,path=generatedAlias0.postId,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
          |  \-[IDENT] IdentNode: 'postId' {originalText=postId}
          \-[NUM_INT] LiteralNode: '1'

2021-01-18 18:07:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:07:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:07:05 DEBUG SQL:144 - 
    update
        Posts 
    set
        post_text=? 
    where
        post_id=1
2021-01-18 18:07:05 DEBUG TransactionImpl:98 - committing
2021-01-18 18:07:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:07:05 DEBUG TransactionImpl:81 - begin
2021-01-18 18:07:05 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 where generatedAlias0.postId=1
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 where generatedAlias0.postId=1
2021-01-18 18:07:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'project'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Post'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'postId'
          \-[NUM_INT] Node: '1'

2021-01-18 18:07:05 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 18:07:05 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Post (generatedAlias0) -> post0_
2021-01-18 18:07:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:07:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:07:05 DEBUG DotNode:695 - getDataType() : postId -> org.hibernate.type.IntegerType@1efe439d
2021-01-18 18:07:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.postId -> post0_.post_id
2021-01-18 18:07:05 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 18:07:05 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} post0_.post_id ) ( FromClause{level=1} Posts post0_ ) ( where ( = ( post0_.post_id post0_.post_id postId ) 1 ) ) )
2021-01-18 18:07:05 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [Posts]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.Post)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.project.model.Post)
          | path: generatedAlias0.postId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.project.model.Post)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: postId
          \-LiteralNode

2021-01-18 18:07:05 DEBUG JoinProcessor:304 - Using FROM fragment [Posts post0_]
2021-01-18 18:07:05 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Posts)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'post0_.post_id as post_id1_2_' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |  \-[SQL_TOKEN] SqlFragment: 'post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Posts post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Posts,tableAlias=post0_,origin=null,columns={,className=com.project.model.Post}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'post0_.post_id' {propertyName=postId,dereferenceType=PRIMITIVE,getPropertyPath=postId,path=generatedAlias0.postId,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'post0_.post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
          |  \-[IDENT] IdentNode: 'postId' {originalText=postId}
          \-[NUM_INT] LiteralNode: '1'

2021-01-18 18:07:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 where generatedAlias0.postId=1
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:259 - SQL: select post0_.post_id as post_id1_2_, post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_ from Posts post0_ where post0_.post_id=1
2021-01-18 18:07:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:07:05 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    where
        post0_.post_id=1
2021-01-18 18:07:05 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:07:05 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:07:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:07:05 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:07:05.003
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:07:05 DEBUG TransactionImpl:98 - committing
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:07:05 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:07:05.003}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:07:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:07:05 DEBUG TransactionImpl:81 - begin
2021-01-18 18:07:05 DEBUG TransactionImpl:98 - committing
2021-01-18 18:07:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:07:05 DEBUG TransactionImpl:81 - begin
2021-01-18 18:07:05 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 where generatedAlias0.author=1 order by generatedAlias0.timestamp desc
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 where generatedAlias0.author=1 order by generatedAlias0.timestamp desc
2021-01-18 18:07:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'project'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Post'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias0'
    |     |  \-[IDENT] Node: 'author'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'timestamp'
       \-[DESCENDING] Node: 'desc'

2021-01-18 18:07:05 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 18:07:05 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Post (generatedAlias0) -> post0_
2021-01-18 18:07:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:07:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:07:05 DEBUG DotNode:695 - getDataType() : author -> org.hibernate.type.ManyToOneType(com.project.model.User)
2021-01-18 18:07:05 DEBUG DotNode:653 - dereferenceShortcut() : property author in com.project.model.Post does not require a join.
2021-01-18 18:07:05 DEBUG DotNode:682 - Terminal getPropertyPath = [author]
2021-01-18 18:07:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.author -> post0_.user_id_fk
2021-01-18 18:07:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:07:05 DEBUG DotNode:695 - getDataType() : timestamp -> org.hibernate.type.LocalDateTimeType@492691d7
2021-01-18 18:07:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.timestamp -> post0_.timestamp
2021-01-18 18:07:05 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 18:07:05 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} post0_.post_id ) ( FromClause{level=1} Posts post0_ ) ( where ( = ( post0_.user_id_fk post0_.post_id author ) 1 ) ) ( order ( post0_.timestamp post0_.post_id timestamp ) desc ) )
2021-01-18 18:07:05 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [Posts]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.Post)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    +-SqlNode
    |  \-BinaryLogicOperatorNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.project.model.Post)
    |     | path: generatedAlias0.author
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.project.model.Post)
    |     |  | originalText: generatedAlias0
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: author
    |     \-LiteralNode
    \-OrderByClause
       +-DotNode
       | persister: SingleTableEntityPersister(com.project.model.Post)
       | path: generatedAlias0.timestamp
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.project.model.Post)
       |  | originalText: generatedAlias0
       |  \-IdentNode
       |    persister: null
       |    originalText: timestamp
       \-SqlNode

2021-01-18 18:07:05 DEBUG JoinProcessor:304 - Using FROM fragment [Posts post0_]
2021-01-18 18:07:05 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Posts)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'post0_.post_id as post_id1_2_' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |  \-[SQL_TOKEN] SqlFragment: 'post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Posts post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Posts,tableAlias=post0_,origin=null,columns={,className=com.project.model.Post}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'post0_.user_id_fk' {propertyName=author,dereferenceType=UNKNOWN,getPropertyPath=author,path=generatedAlias0.author,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
    |     |  +-[ALIAS_REF] IdentNode: 'post0_.post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |     |  \-[IDENT] IdentNode: 'author' {originalText=author}
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'post0_.timestamp' {propertyName=timestamp,dereferenceType=PRIMITIVE,getPropertyPath=timestamp,path=generatedAlias0.timestamp,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'post0_.post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
       |  \-[IDENT] IdentNode: 'timestamp' {originalText=timestamp}
       \-[DESCENDING] SqlNode: 'desc'

2021-01-18 18:07:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 where generatedAlias0.author=1 order by generatedAlias0.timestamp desc
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:259 - SQL: select post0_.post_id as post_id1_2_, post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_ from Posts post0_ where post0_.user_id_fk=1 order by post0_.timestamp desc
2021-01-18 18:07:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:07:05 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    where
        post0_.user_id_fk=1 
    order by
        post0_.timestamp desc
2021-01-18 18:07:05 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:07:05 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:07:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:07:05 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:07:05.003
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:07:05 DEBUG TransactionImpl:98 - committing
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:07:05 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:07:05.003}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:07:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:07:05 DEBUG TransactionImpl:81 - begin
2021-01-18 18:07:05 DEBUG TransactionImpl:98 - committing
2021-01-18 18:07:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:07:05 DEBUG TransactionImpl:81 - begin
2021-01-18 18:07:05 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0
2021-01-18 18:07:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'project'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-01-18 18:07:05 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 18:07:05 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.User (generatedAlias0) -> user0_
2021-01-18 18:07:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> user0_.user_id
2021-01-18 18:07:05 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 18:07:05 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} Users user0_ ) )
2021-01-18 18:07:05 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [Users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-01-18 18:07:05 DEBUG JoinProcessor:304 - Using FROM fragment [Users user0_]
2021-01-18 18:07:05 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_3_' {alias=generatedAlias0, className=com.project.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.project.model.User}}

2021-01-18 18:07:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:259 - SQL: select user0_.user_id as user_id1_3_, user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_ from Users user0_
2021-01-18 18:07:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:07:05 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_,
        user0_.email as email2_3_,
        user0_.firstname as firstnam3_3_,
        user0_.lastname as lastname4_3_,
        user0_.password as password5_3_,
        user0_.profile_picture as profile_6_3_,
        user0_.password_salt as password7_3_,
        user0_.username as username8_3_ 
    from
        Users user0_
2021-01-18 18:07:05 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:07:05 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#1]
2021-01-18 18:07:05 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:07:05 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#2]
2021-01-18 18:07:05 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:07:05 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#3]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:07:05 DEBUG TransactionImpl:98 - committing
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:07:05 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:07:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:07:05 DEBUG TransactionImpl:81 - begin
2021-01-18 18:07:05 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:07:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'project'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Post'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'timestamp'
       \-[DESCENDING] Node: 'desc'

2021-01-18 18:07:05 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 18:07:05 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Post (generatedAlias0) -> post0_
2021-01-18 18:07:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:07:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:07:05 DEBUG DotNode:695 - getDataType() : timestamp -> org.hibernate.type.LocalDateTimeType@492691d7
2021-01-18 18:07:05 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.timestamp -> post0_.timestamp
2021-01-18 18:07:05 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 18:07:05 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} post0_.post_id ) ( FromClause{level=1} Posts post0_ ) ( order ( post0_.timestamp post0_.post_id timestamp ) desc ) )
2021-01-18 18:07:05 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [Posts]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.Post)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-OrderByClause
       +-DotNode
       | persister: SingleTableEntityPersister(com.project.model.Post)
       | path: generatedAlias0.timestamp
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.project.model.Post)
       |  | originalText: generatedAlias0
       |  \-IdentNode
       |    persister: null
       |    originalText: timestamp
       \-SqlNode

2021-01-18 18:07:05 DEBUG JoinProcessor:304 - Using FROM fragment [Posts post0_]
2021-01-18 18:07:05 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Posts)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'post0_.post_id as post_id1_2_' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |  \-[SQL_TOKEN] SqlFragment: 'post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Posts post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Posts,tableAlias=post0_,origin=null,columns={,className=com.project.model.Post}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'post0_.timestamp' {propertyName=timestamp,dereferenceType=PRIMITIVE,getPropertyPath=timestamp,path=generatedAlias0.timestamp,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'post0_.post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
       |  \-[IDENT] IdentNode: 'timestamp' {originalText=timestamp}
       \-[DESCENDING] SqlNode: 'desc'

2021-01-18 18:07:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:07:05 DEBUG QueryTranslatorImpl:259 - SQL: select post0_.post_id as post_id1_2_, post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_ from Posts post0_ order by post0_.timestamp desc
2021-01-18 18:07:05 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:07:05 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    order by
        post0_.timestamp desc
2021-01-18 18:07:05 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:07:05 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#2]
2021-01-18 18:07:05 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:07:05 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#3]
2021-01-18 18:07:05 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:07:05 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#2]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 2
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:07:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:07:05 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#2
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Seans Post
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:07:05.010
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#2]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#3]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 3
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:07:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:07:05 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#3
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Alberts Post
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:07:05.010
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#3]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:07:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:07:05 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:07:05.003
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:07:05 DEBUG TransactionImpl:98 - committing
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:07:05 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:07:05.003}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Seans Post, author=com.project.model.User#2, postId=2, postPicture=null, timestamp=2021-01-18T18:07:05.010}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Alberts Post, author=com.project.model.User#3, postId=3, postPicture=null, timestamp=2021-01-18T18:07:05.010}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:07:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:07:05 DEBUG TransactionImpl:81 - begin
2021-01-18 18:07:05 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-01-18 18:07:05 DEBUG SQL:144 - 
    insert 
    into
        Posts
        (post_id, user_id_fk, post_picture, post_text, timestamp) 
    values
        (null, ?, ?, ?, ?)
2021-01-18 18:07:05 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 4
2021-01-18 18:07:05 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-01-18 18:07:05 DEBUG TransactionImpl:98 - committing
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:07:05 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.Post{postText=some text, author=com.project.model.User#1, postId=4, postPicture=null, timestamp=2021-01-18T18:07:05.359}
2021-01-18 18:07:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:07:05 DEBUG TransactionImpl:81 - begin
2021-01-18 18:07:05 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:07:05 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    order by
        post0_.timestamp desc
2021-01-18 18:07:05 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:07:05 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#4]
2021-01-18 18:07:05 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:07:05 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#2]
2021-01-18 18:07:05 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:07:05 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#3]
2021-01-18 18:07:05 DEBUG Loader:384 - Result set row: 3
2021-01-18 18:07:05 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#4]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:07:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:07:05 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = some text
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:07:05.359
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#4]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#2]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 2
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:07:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:07:05 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#2
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Seans Post
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:07:05.010
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#2]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#3]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 3
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:07:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:07:05 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#3
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Alberts Post
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:07:05.010
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#3]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:07:05.003
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:07:05 DEBUG TransactionImpl:98 - committing
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:07:05 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:07:05.003}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Seans Post, author=com.project.model.User#2, postId=2, postPicture=null, timestamp=2021-01-18T18:07:05.010}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Alberts Post, author=com.project.model.User#3, postId=3, postPicture=null, timestamp=2021-01-18T18:07:05.010}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.Post{postText=some text, author=com.project.model.User#1, postId=4, postPicture=null, timestamp=2021-01-18T18:07:05.359}
2021-01-18 18:07:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:07:05 DEBUG TransactionImpl:81 - begin
2021-01-18 18:07:05 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:07:05 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    order by
        post0_.timestamp desc
2021-01-18 18:07:05 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:07:05 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#4]
2021-01-18 18:07:05 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:07:05 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#2]
2021-01-18 18:07:05 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:07:05 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#3]
2021-01-18 18:07:05 DEBUG Loader:384 - Result set row: 3
2021-01-18 18:07:05 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#4]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:07:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:07:05 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = some text
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:07:05.359
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#4]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#2]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 2
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:07:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:07:05 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#2
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Seans Post
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:07:05.010
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#2]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#3]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 3
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:07:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:07:05 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#3
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Alberts Post
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:07:05.010
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#3]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:07:05.003
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:07:05 DEBUG TransactionImpl:98 - committing
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:07:05 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:07:05.003}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Seans Post, author=com.project.model.User#2, postId=2, postPicture=null, timestamp=2021-01-18T18:07:05.010}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Alberts Post, author=com.project.model.User#3, postId=3, postPicture=null, timestamp=2021-01-18T18:07:05.010}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.Post{postText=some text, author=com.project.model.User#1, postId=4, postPicture=null, timestamp=2021-01-18T18:07:05.359}
2021-01-18 18:07:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:07:05 DEBUG TransactionImpl:81 - begin
2021-01-18 18:07:05 DEBUG TransactionImpl:98 - committing
2021-01-18 18:07:05 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:07:05 DEBUG TransactionImpl:81 - begin
2021-01-18 18:07:05 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:07:05 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    order by
        post0_.timestamp desc
2021-01-18 18:07:05 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:07:05 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#4]
2021-01-18 18:07:05 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:07:05 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#2]
2021-01-18 18:07:05 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:07:05 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#3]
2021-01-18 18:07:05 DEBUG Loader:384 - Result set row: 3
2021-01-18 18:07:05 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#4]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:07:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:07:05 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = some text
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:07:05.359
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#4]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#2]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 2
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:07:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:07:05 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#2
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Seans Post
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:07:05.010
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#2]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#3]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 3
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:07:05 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:07:05 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#3
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Alberts Post
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:07:05.010
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#3]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:07:05.003
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:07:05 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:07:05 DEBUG TransactionImpl:98 - committing
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
2021-01-18 18:07:05 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:07:05 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:07:05.003}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Seans Post, author=com.project.model.User#2, postId=2, postPicture=null, timestamp=2021-01-18T18:07:05.010}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Alberts Post, author=com.project.model.User#3, postId=3, postPicture=null, timestamp=2021-01-18T18:07:05.010}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:07:05 DEBUG EntityPrinter:117 - com.project.model.Post{postText=some text, author=com.project.model.User#1, postId=4, postPicture=null, timestamp=2021-01-18T18:07:05.359}
2021-01-18 18:56:26 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-01-18 18:56:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-01-18 18:56:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-01-18 18:56:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-01-18 18:56:26 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.25.Final
2021-01-18 18:56:26 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-01-18 18:56:27 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-01-18 18:56:27 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-01-18 18:56:27 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-01-18 18:56:27 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-01-18 18:56:27 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-01-18 18:56:27 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@457c9034
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@457c9034
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@457c9034
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f57bcad
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7daa0fbd
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@181e731e
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@17d88132
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@17d88132
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17d88132
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@36b4091c
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@36b4091c
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@36b4091c
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5b367418
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5b367418
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5b367418
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@1efe439d
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@1efe439d
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1efe439d
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@413f69cc
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@413f69cc
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@413f69cc
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@39ac0c0a
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@39ac0c0a
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39ac0c0a
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@65b104b9
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@65b104b9
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@65b104b9
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@54504ecd
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@54504ecd
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6239aba6
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6239aba6
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@7164ca4c
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@7164ca4c
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3f91b517
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2421cc4
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@58ce9668
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@58ce9668
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@1fa1cab1
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1fa1cab1
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@5c2375a9
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5c2375a9
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@492691d7
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@492691d7
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@67545b57
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@67545b57
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@74589991
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@74589991
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1869fbd2
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1869fbd2
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@ca30bc1
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@ca30bc1
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@10a9d961
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@10a9d961
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@a4add54
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@a4add54
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@61fe30
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@61fe30
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7b420819
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7b420819
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7b420819
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@a3d9978
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@1e461e41
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e461e41
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e461e41
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3899782c
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@30e868be
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@13ad5cd3
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13ad5cd3
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@6581dc0a
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6581dc0a
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@77128536
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@77128536
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@4c1f22f3
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4c1f22f3
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@484094a5
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@484094a5
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@602e0143
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@34c01041
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@34c01041
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@34c01041
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7f0d96f2
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7f0d96f2
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7f0d96f2
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@49ff7d8c
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@77102b91
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@3f9342d4
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3f9342d4
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@3f9342d4
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3d3e5463
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3d3e5463
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3d3e5463
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@42b02722
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@528c868
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@7a1234bf
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7a1234bf
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@38aa816f
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@39a2bb97
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@39a2bb97
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5bf8fa12
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5bf8fa12
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5812f68b
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@55493582
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@52c3cb31
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@1c481ff2
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1c481ff2
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@676cf48
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a1de7fb
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@335b5620
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@29a0cdb
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@32a68f4f
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@73194df
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6eb2384f
2021-01-18 18:56:27 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3c9c0d96
2021-01-18 18:56:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-01-18 18:56:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-01-18 18:56:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-01-18 18:56:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-01-18 18:56:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-01-18 18:56:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-01-18 18:56:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-01-18 18:56:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-01-18 18:56:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-01-18 18:56:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-01-18 18:56:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-01-18 18:56:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-01-18 18:56:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-01-18 18:56:27 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-01-18 18:56:27 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
2021-01-18 18:56:27 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
2021-01-18 18:56:27 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.1
2021-01-18 18:56:27 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2021-01-18 18:56:27 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-01-18 18:56:27 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-01-18 18:56:27 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ab14cb9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5fb97279]
2021-01-18 18:56:27 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.Like
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 18:56:27 DEBUG EntityBinder:430 - Import with entity name Like
2021-01-18 18:56:27 DEBUG EntityBinder:873 - Bind entity com.project.model.Like on table Likes
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=like_id, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-18 18:56:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-18 18:56:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property likeId with lazy=false
2021-01-18 18:56:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Like:likeId]
2021-01-18 18:56:27 DEBUG SimpleValueBinder:410 - building SimpleValue for likeId
2021-01-18 18:56:27 DEBUG PropertyBinder:266 - Building property likeId
2021-01-18 18:56:27 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(like_id)]), likeId, identity, , ...)
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id_fk', referencedColumn='post_id', mappedBy=''}
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=post, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:27 DEBUG PropertyBinder:266 - Building property post
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id_fk', referencedColumn='user_id', mappedBy=''}
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:27 DEBUG PropertyBinder:266 - Building property user
2021-01-18 18:56:27 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.PasswordResetToken
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 18:56:27 DEBUG EntityBinder:430 - Import with entity name PasswordResetToken
2021-01-18 18:56:27 DEBUG EntityBinder:873 - Bind entity com.project.model.PasswordResetToken on table PasswordResetToken
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-18 18:56:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-18 18:56:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-01-18 18:56:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:id]
2021-01-18 18:56:27 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-01-18 18:56:27 DEBUG PropertyBinder:266 - Building property id
2021-01-18 18:56:27 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=expiryDate, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expiryDate with lazy=false
2021-01-18 18:56:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:expiryDate]
2021-01-18 18:56:27 DEBUG SimpleValueBinder:410 - building SimpleValue for expiryDate
2021-01-18 18:56:27 DEBUG PropertyBinder:266 - Building property expiryDate
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=token, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property token with lazy=false
2021-01-18 18:56:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:token]
2021-01-18 18:56:27 DEBUG SimpleValueBinder:410 - building SimpleValue for token
2021-01-18 18:56:27 DEBUG PropertyBinder:266 - Building property token
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:27 DEBUG PropertyBinder:266 - Building property user
2021-01-18 18:56:27 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.Post
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 18:56:27 DEBUG EntityBinder:430 - Import with entity name Post
2021-01-18 18:56:27 DEBUG EntityBinder:873 - Bind entity com.project.model.Post on table Posts
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-18 18:56:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-18 18:56:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-01-18 18:56:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postId]
2021-01-18 18:56:27 DEBUG SimpleValueBinder:410 - building SimpleValue for postId
2021-01-18 18:56:27 DEBUG PropertyBinder:266 - Building property postId
2021-01-18 18:56:27 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id_fk', referencedColumn='user_id', mappedBy=''}
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=author, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:27 DEBUG PropertyBinder:266 - Building property author
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_picture, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postPicture with lazy=false
2021-01-18 18:56:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postPicture]
2021-01-18 18:56:27 DEBUG SimpleValueBinder:410 - building SimpleValue for postPicture
2021-01-18 18:56:27 DEBUG PropertyBinder:266 - Building property postPicture
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_text, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postText with lazy=false
2021-01-18 18:56:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postText]
2021-01-18 18:56:27 DEBUG SimpleValueBinder:410 - building SimpleValue for postText
2021-01-18 18:56:27 DEBUG PropertyBinder:266 - Building property postText
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=timestamp, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property timestamp with lazy=false
2021-01-18 18:56:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:timestamp]
2021-01-18 18:56:27 DEBUG SimpleValueBinder:410 - building SimpleValue for timestamp
2021-01-18 18:56:27 DEBUG PropertyBinder:266 - Building property timestamp
2021-01-18 18:56:27 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.User
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 18:56:27 DEBUG EntityBinder:430 - Import with entity name User
2021-01-18 18:56:27 DEBUG EntityBinder:873 - Bind entity com.project.model.User on table Users
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-18 18:56:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-18 18:56:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-01-18 18:56:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:userId]
2021-01-18 18:56:27 DEBUG SimpleValueBinder:410 - building SimpleValue for userId
2021-01-18 18:56:27 DEBUG PropertyBinder:266 - Building property userId
2021-01-18 18:56:27 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, identity, , ...)
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-01-18 18:56:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-01-18 18:56:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:email]
2021-01-18 18:56:27 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-01-18 18:56:27 DEBUG PropertyBinder:266 - Building property email
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-01-18 18:56:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:firstName]
2021-01-18 18:56:27 DEBUG SimpleValueBinder:410 - building SimpleValue for firstName
2021-01-18 18:56:27 DEBUG PropertyBinder:266 - Building property firstName
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-01-18 18:56:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:lastName]
2021-01-18 18:56:27 DEBUG SimpleValueBinder:410 - building SimpleValue for lastName
2021-01-18 18:56:27 DEBUG PropertyBinder:266 - Building property lastName
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-01-18 18:56:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:password]
2021-01-18 18:56:27 DEBUG SimpleValueBinder:410 - building SimpleValue for password
2021-01-18 18:56:27 DEBUG PropertyBinder:266 - Building property password
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=profile_picture, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property profilePicture with lazy=false
2021-01-18 18:56:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:profilePicture]
2021-01-18 18:56:27 DEBUG SimpleValueBinder:410 - building SimpleValue for profilePicture
2021-01-18 18:56:27 DEBUG PropertyBinder:266 - Building property profilePicture
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=password_salt, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property salt with lazy=false
2021-01-18 18:56:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:salt]
2021-01-18 18:56:27 DEBUG SimpleValueBinder:410 - building SimpleValue for salt
2021-01-18 18:56:27 DEBUG PropertyBinder:266 - Building property salt
2021-01-18 18:56:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-01-18 18:56:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-01-18 18:56:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:username]
2021-01-18 18:56:27 DEBUG SimpleValueBinder:410 - building SimpleValue for username
2021-01-18 18:56:27 DEBUG PropertyBinder:266 - Building property username
2021-01-18 18:56:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for likeId
2021-01-18 18:56:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-01-18 18:56:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expiryDate
2021-01-18 18:56:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for token
2021-01-18 18:56:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postId
2021-01-18 18:56:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postPicture
2021-01-18 18:56:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postText
2021-01-18 18:56:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for timestamp
2021-01-18 18:56:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userId
2021-01-18 18:56:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-01-18 18:56:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for firstName
2021-01-18 18:56:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lastName
2021-01-18 18:56:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for password
2021-01-18 18:56:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for profilePicture
2021-01-18 18:56:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for salt
2021-01-18 18:56:27 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for username
2021-01-18 18:56:27 DEBUG PrimaryKey:35 - Forcing column [like_id] to be non-null as it is part of the primary key for table [likes]
2021-01-18 18:56:27 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [passwordresettoken]
2021-01-18 18:56:27 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-01-18 18:56:27 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-01-18 18:56:27 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.Post
2021-01-18 18:56:27 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:56:27 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:56:27 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:56:27 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.Post
2021-01-18 18:56:27 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:56:27 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:56:27 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:56:27 DEBUG SessionFactoryImpl:203 - Building session factory
2021-01-18 18:56:27 DEBUG Settings:68 - SessionFactory name : null
2021-01-18 18:56:27 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-01-18 18:56:27 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-01-18 18:56:27 DEBUG Settings:72 - Statistics: disabled
2021-01-18 18:56:27 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-01-18 18:56:27 DEBUG Settings:75 - Default entity-mode: pojo
2021-01-18 18:56:27 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-01-18 18:56:27 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-01-18 18:56:27 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-01-18 18:56:27 DEBUG Settings:80 - Default batch fetch size: -1
2021-01-18 18:56:27 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-01-18 18:56:27 DEBUG Settings:82 - Default null ordering: NONE
2021-01-18 18:56:27 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-01-18 18:56:27 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-01-18 18:56:27 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-01-18 18:56:27 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-01-18 18:56:27 DEBUG Settings:90 - Query language substitutions: {}
2021-01-18 18:56:27 DEBUG Settings:91 - Named query checking : enabled
2021-01-18 18:56:27 DEBUG Settings:93 - Second-level cache: disabled
2021-01-18 18:56:27 DEBUG Settings:94 - Second-level query cache: disabled
2021-01-18 18:56:27 DEBUG Settings:95 - Second-level query cache factory: null
2021-01-18 18:56:27 DEBUG Settings:96 - Second-level cache region prefix: null
2021-01-18 18:56:27 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-01-18 18:56:27 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-01-18 18:56:27 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-01-18 18:56:27 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-01-18 18:56:27 DEBUG Settings:102 - JDBC batch size: 15
2021-01-18 18:56:27 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-01-18 18:56:27 DEBUG Settings:104 - Scrollable result sets: enabled
2021-01-18 18:56:27 DEBUG Settings:105 - Wrap result sets: disabled
2021-01-18 18:56:27 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-01-18 18:56:27 DEBUG Settings:107 - JDBC result set fetch size: null
2021-01-18 18:56:27 DEBUG Settings:108 - Connection release mode: ON_CLOSE
2021-01-18 18:56:27 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-01-18 18:56:27 DEBUG Settings:111 - JPA compliance - query : disabled
2021-01-18 18:56:27 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-01-18 18:56:27 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-01-18 18:56:27 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-01-18 18:56:27 DEBUG SessionFactoryImpl:258 - Session factory constructed with filter configurations : {}
2021-01-18 18:56:27 DEBUG SessionFactoryImpl:259 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@46baf579, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2\target\test-classes;C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2\target\classes;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\annotations-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ant.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ha.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ssi.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-storeconfig.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-tribes.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\ecj-4.17.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\el-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jasper-el.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jasper.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jaspic-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jsp-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\servlet-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-coyote.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-dbcp.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-cs.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-de.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-es.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-fr.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ja.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ko.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-pt-BR.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ru.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-zh-CN.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-jdbc.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-jni.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-util-scan.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-util.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-websocket.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\websocket-api.jar;C:\Users\david\.m2\repository\org\postgresql\postgresql\42.2.14\postgresql-42.2.14.jar;C:\Users\david\.m2\repository\org\hibernate\hibernate-core\5.4.25.Final\hibernate-core-5.4.25.Final.jar;C:\Users\david\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\david\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\david\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\david\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\david\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\david\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\david\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\david\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\david\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\david\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\david\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\david\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\david\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\david\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\david\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\david\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\david\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\david\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.5.Final\hibernate-validator-6.1.5.Final.jar;C:\Users\david\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\david\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\david\.m2\repository\junit\junit\4.13\junit-4.13.jar;C:\Users\david\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.11.3\jackson-databind-2.11.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.3\jackson-annotations-2.11.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.3\jackson-core-2.11.3.jar;C:\Users\david\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\david\.m2\repository\org\springframework\spring-core\5.2.12.RELEASE\spring-core-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-jcl\5.2.12.RELEASE\spring-jcl-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-beans\5.2.12.RELEASE\spring-beans-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-context\5.2.12.RELEASE\spring-context-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-aop\5.2.12.RELEASE\spring-aop-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-expression\5.2.12.RELEASE\spring-expression-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-orm\5.2.12.RELEASE\spring-orm-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-jdbc\5.2.12.RELEASE\spring-jdbc-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-tx\5.2.12.RELEASE\spring-tx-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-webmvc\5.2.12.RELEASE\spring-webmvc-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-web\5.2.12.RELEASE\spring-web-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-context-support\5.2.12.RELEASE\spring-context-support-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\javax\mail\javax.mail-api\1.6.2\javax.mail-api-1.6.2.jar;C:\Users\david\.m2\repository\com\sun\mail\javax.mail\1.6.2\javax.mail-1.6.2.jar;C:\Users\david\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\david\.m2\repository\org\springframework\spring-aspects\5.2.12.RELEASE\spring-aspects-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\david\.m2\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;C:\Users\david\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-s3\1.11.327\aws-java-sdk-s3-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-kms\1.11.327\aws-java-sdk-kms-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-core\1.11.327\aws-java-sdk-core-1.11.327.jar;C:\Users\david\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\david\.m2\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;C:\Users\david\.m2\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;C:\Users\david\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\david\.m2\repository\software\amazon\ion\ion-java\1.0.2\ion-java-1.0.2.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-cbor\2.6.7\jackson-dataformat-cbor-2.6.7.jar;C:\Users\david\.m2\repository\joda-time\joda-time\2.8.1\joda-time-2.8.1.jar;C:\Users\david\.m2\repository\com\amazonaws\jmespath-java\1.11.327\jmespath-java-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-dynamodb\1.11.327\aws-java-sdk-dynamodb-1.11.327.jar;C:\sts-bundle\sts-3.9.13.RELEASE\configuration\org.eclipse.osgi\311\0\.cp;C:\sts-bundle\sts-3.9.13.RELEASE\configuration\org.eclipse.osgi\310\0\.cp, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Los_Angeles, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_271\bin, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 65337 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.project.test.PostDaoTest, sun.cpu.endian=little, user.home=C:\Users\david, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_271, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_271\lib\resources.jar;C:\Program Files\Java\jre1.8.0_271\lib\rt.jar;C:\Program Files\Java\jre1.8.0_271\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_271\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_271\lib\jce.jar;C:\Program Files\Java\jre1.8.0_271\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_271\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_271\classes, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=david, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_271\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@3d494fbf], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\david\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4bf324f9, java.library.path=C:\Program Files\Java\jre1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_271/bin/server;C:/Program Files/Java/jre1.8.0_271/bin;C:/Program Files/Java/jre1.8.0_271/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\ProgramData\chocolatey\bin;C:\ProgramData\nvm;C:\Program Files\nodejs;C:\Program Files\Microsoft VS Code\bin;D:\PuTTY\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Users\david\AppData\Local\Microsoft\WindowsApps;C:\sts-bundle\sts-3.9.13.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@77888435, java.ext.dirs=C:\Program Files\Java\jre1.8.0_271\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-01-18 18:56:27 INFO  Version:21 - HV000001: Hibernate Validator 6.1.5.Final
2021-01-18 18:56:27 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-01-18 18:56:27 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-01-18 18:56:27 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-01-18 18:56:27 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-01-18 18:56:27 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-01-18 18:56:27 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-01-18 18:56:27 DEBUG ResourceBundleMessageInterpolator:172 - Loaded expression factory via original TCCL
2021-01-18 18:56:27 DEBUG ValidatorFactoryConfigurationHelper:300 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-01-18 18:56:27 DEBUG ValidatorFactoryConfigurationHelper:375 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-01-18 18:56:27 DEBUG ValidatorFactoryConfigurationHelper:376 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-01-18 18:56:27 DEBUG ValidatorFactoryConfigurationHelper:377 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-01-18 18:56:27 DEBUG ValidatorFactoryConfigurationHelper:378 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-01-18 18:56:27 DEBUG ValidatorFactoryConfigurationHelper:379 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-01-18 18:56:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-18 18:56:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-18 18:56:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-18 18:56:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-18 18:56:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-18 18:56:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-18 18:56:27 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-18 18:56:27 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-18 18:56:27 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-01-18 18:56:27 DEBUG SessionFactoryImpl:298 - Instantiated session factory
2021-01-18 18:56:27 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ab14cb9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@784c5ef5]
2021-01-18 18:56:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-18 18:56:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-18 18:56:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-18 18:56:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-18 18:56:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-18 18:56:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-18 18:56:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-18 18:56:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.PasswordResetToken
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:3928 -  Version select: select id from PasswordResetToken where id =?
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select passwordre_.id, passwordre_.expiryDate as expiryda2_1_, passwordre_.token as token3_1_, passwordre_.user_id as user_id4_1_ from PasswordResetToken passwordre_ where passwordre_.id=?
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into PasswordResetToken (expiryDate, token, user_id, id) values (?, ?, ?, ?)
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:394 -  Update 0: update PasswordResetToken set expiryDate=?, token=?, user_id=? where id=?
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from PasswordResetToken where id=?
2021-01-18 18:56:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@646c0a67]
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expiryDate
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : token
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-01-18 18:56:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a2bcd56]
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.email
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.firstName
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.lastName
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.password
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.profilePicture
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.salt
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.username
2021-01-18 18:56:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 18:56:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 18:56:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.PasswordResetToken)
    - Returns
       - EntityReturnImpl(entity=com.project.model.PasswordResetToken, querySpaceUid=<gen:0>, path=com.project.model.PasswordResetToken)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:1>, path=com.project.model.PasswordResetToken.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.PasswordResetToken)
          - SQL table alias mapping - passwordre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_3_1_}

2021-01-18 18:56:28 DEBUG EntityLoader:129 - Static select for entity com.project.model.PasswordResetToken [NONE]: select passwordre0_.id as id1_1_0_, passwordre0_.expiryDate as expiryda2_1_0_, passwordre0_.token as token3_1_0_, passwordre0_.user_id as user_id4_1_0_, user1_.user_id as user_id1_3_1_, user1_.email as email2_3_1_, user1_.firstname as firstnam3_3_1_, user1_.lastname as lastname4_3_1_, user1_.password as password5_3_1_, user1_.profile_picture as profile_6_3_1_, user1_.password_salt as password7_3_1_, user1_.username as username8_3_1_ from PasswordResetToken passwordre0_ inner join Users user1_ on passwordre0_.user_id=user1_.user_id where passwordre0_.id=?
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.Like
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:3928 -  Version select: select like_id from Likes where like_id =?
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select like_.like_id, like_.post_id_fk as post_id_2_0_, like_.user_id_fk as user_id_3_0_ from Likes like_ where like_.like_id=?
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Likes (post_id_fk, user_id_fk, like_id) values (?, ?, ?)
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:394 -  Update 0: update Likes set post_id_fk=?, user_id_fk=? where like_id=?
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Likes where like_id=?
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Likes (like_id, post_id_fk, user_id_fk) values (null, ?, ?)
2021-01-18 18:56:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@588f63c]
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post
2021-01-18 18:56:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1981d861]
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author
2021-01-18 18:56:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f4c1e6]
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.email
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.firstName
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.lastName
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.password
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.profilePicture
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.salt
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.username
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.postPicture
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.postText
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.timestamp
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-01-18 18:56:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6342d610]
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.email
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.firstName
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.lastName
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.password
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.profilePicture
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.salt
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.username
2021-01-18 18:56:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 18:56:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 18:56:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.Like)
    - Returns
       - EntityReturnImpl(entity=com.project.model.Like, querySpaceUid=<gen:0>, path=com.project.model.Like)
          - EntityAttributeFetchImpl(entity=com.project.model.Post, querySpaceUid=<gen:1>, path=com.project.model.Like.post)
             - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:2>, path=com.project.model.Like.post.author)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:3>, path=com.project.model.Like.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.Like)
          - SQL table alias mapping - like0_
          - alias suffix - 0_
          - suffixed key columns - {like_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(post)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.project.model.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_3_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.project.model.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {user_id1_3_3_}

2021-01-18 18:56:28 DEBUG EntityLoader:129 - Static select for entity com.project.model.Like [NONE]: select like0_.like_id as like_id1_0_0_, like0_.post_id_fk as post_id_2_0_0_, like0_.user_id_fk as user_id_3_0_0_, post1_.post_id as post_id1_2_1_, post1_.user_id_fk as user_id_5_2_1_, post1_.post_picture as post_pic2_2_1_, post1_.post_text as post_tex3_2_1_, post1_.timestamp as timestam4_2_1_, user2_.user_id as user_id1_3_2_, user2_.email as email2_3_2_, user2_.firstname as firstnam3_3_2_, user2_.lastname as lastname4_3_2_, user2_.password as password5_3_2_, user2_.profile_picture as profile_6_3_2_, user2_.password_salt as password7_3_2_, user2_.username as username8_3_2_, user3_.user_id as user_id1_3_3_, user3_.email as email2_3_3_, user3_.firstname as firstnam3_3_3_, user3_.lastname as lastname4_3_3_, user3_.password as password5_3_3_, user3_.profile_picture as profile_6_3_3_, user3_.password_salt as password7_3_3_, user3_.username as username8_3_3_ from Likes like0_ left outer join Posts post1_ on like0_.post_id_fk=post1_.post_id left outer join Users user2_ on post1_.user_id_fk=user2_.user_id left outer join Users user3_ on like0_.user_id_fk=user3_.user_id where like0_.like_id=?
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.User
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:3928 -  Version select: select user_id from Users where user_id =?
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select user_.user_id, user_.email as email2_3_, user_.firstname as firstnam3_3_, user_.lastname as lastname4_3_, user_.password as password5_3_, user_.profile_picture as profile_6_3_, user_.password_salt as password7_3_, user_.username as username8_3_ from Users user_ where user_.user_id=?
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Users (email, firstname, lastname, password, profile_picture, password_salt, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:394 -  Update 0: update Users set email=?, firstname=?, lastname=?, password=?, profile_picture=?, password_salt=?, username=? where user_id=?
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Users where user_id=?
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Users (user_id, email, firstname, lastname, password, profile_picture, password_salt, username) values (null, ?, ?, ?, ?, ?, ?, ?)
2021-01-18 18:56:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@784abd3e]
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : profilePicture
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : salt
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-01-18 18:56:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 18:56:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 18:56:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.User)
    - Returns
       - EntityReturnImpl(entity=com.project.model.User, querySpaceUid=<gen:0>, path=com.project.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}

2021-01-18 18:56:28 DEBUG EntityLoader:129 - Static select for entity com.project.model.User [NONE]: select user0_.user_id as user_id1_3_0_, user0_.email as email2_3_0_, user0_.firstname as firstnam3_3_0_, user0_.lastname as lastname4_3_0_, user0_.password as password5_3_0_, user0_.profile_picture as profile_6_3_0_, user0_.password_salt as password7_3_0_, user0_.username as username8_3_0_ from Users user0_ where user0_.user_id=?
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.Post
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:3928 -  Version select: select post_id from Posts where post_id =?
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select post_.post_id, post_.user_id_fk as user_id_5_2_, post_.post_picture as post_pic2_2_, post_.post_text as post_tex3_2_, post_.timestamp as timestam4_2_ from Posts post_ where post_.post_id=?
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Posts (user_id_fk, post_picture, post_text, timestamp, post_id) values (?, ?, ?, ?, ?)
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:394 -  Update 0: update Posts set user_id_fk=?, post_picture=?, post_text=?, timestamp=? where post_id=?
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Posts where post_id=?
2021-01-18 18:56:28 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Posts (post_id, user_id_fk, post_picture, post_text, timestamp) values (null, ?, ?, ?, ?)
2021-01-18 18:56:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@434514d8]
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author
2021-01-18 18:56:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4613311f]
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.email
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.firstName
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.lastName
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.password
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.profilePicture
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.salt
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.username
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postPicture
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postText
2021-01-18 18:56:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : timestamp
2021-01-18 18:56:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 18:56:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 18:56:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.Post)
    - Returns
       - EntityReturnImpl(entity=com.project.model.Post, querySpaceUid=<gen:0>, path=com.project.model.Post)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:1>, path=com.project.model.Post.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_3_1_}

2021-01-18 18:56:28 DEBUG EntityLoader:129 - Static select for entity com.project.model.Post [NONE]: select post0_.post_id as post_id1_2_0_, post0_.user_id_fk as user_id_5_2_0_, post0_.post_picture as post_pic2_2_0_, post0_.post_text as post_tex3_2_0_, post0_.timestamp as timestam4_2_0_, user1_.user_id as user_id1_3_1_, user1_.email as email2_3_1_, user1_.firstname as firstnam3_3_1_, user1_.lastname as lastname4_3_1_, user1_.password as password5_3_1_, user1_.profile_picture as profile_6_3_1_, user1_.password_salt as password7_3_1_, user1_.username as username8_3_1_ from Posts post0_ left outer join Users user1_ on post0_.user_id_fk=user1_.user_id where post0_.post_id=?
2021-01-18 18:56:28 DEBUG SQL:144 - 
    
    drop table if exists Likes CASCADE 
2021-01-18 18:56:28 DEBUG SQL:144 - 
    
    drop table if exists PasswordResetToken CASCADE 
2021-01-18 18:56:28 DEBUG SQL:144 - 
    
    drop table if exists Posts CASCADE 
2021-01-18 18:56:28 DEBUG SQL:144 - 
    
    drop table if exists Users CASCADE 
2021-01-18 18:56:28 DEBUG SQL:144 - 
    
    drop sequence if exists hibernate_sequence
2021-01-18 18:56:28 DEBUG SQL:144 - create sequence hibernate_sequence start with 1 increment by 1
2021-01-18 18:56:28 DEBUG SQL:144 - 
    
    create table Likes (
       like_id integer generated by default as identity,
        post_id_fk integer,
        user_id_fk integer,
        primary key (like_id)
    )
2021-01-18 18:56:28 DEBUG SQL:144 - 
    
    create table PasswordResetToken (
       id bigint not null,
        expiryDate timestamp,
        token varchar(255),
        user_id integer not null,
        primary key (id)
    )
2021-01-18 18:56:28 DEBUG SQL:144 - 
    
    create table Posts (
       post_id integer generated by default as identity,
        post_picture varchar(255),
        post_text varchar(280) not null,
        timestamp timestamp not null,
        user_id_fk integer,
        primary key (post_id)
    )
2021-01-18 18:56:28 DEBUG SQL:144 - 
    
    create table Users (
       user_id integer generated by default as identity,
        email varchar(255) not null,
        firstname varchar(255) not null,
        lastname varchar(255) not null,
        password varchar(255) not null,
        profile_picture varchar(255),
        password_salt varchar(255) not null,
        username varchar(255) not null,
        primary key (user_id)
    )
2021-01-18 18:56:28 DEBUG SQL:144 - 
    
    alter table Users 
       add constraint UK_ncoa9bfasrql0x4nhmh1plxxy unique (email)
2021-01-18 18:56:28 DEBUG SQL:144 - 
    
    alter table Users 
       add constraint UK_23y4gd49ajvbqgl3psjsvhff6 unique (username)
2021-01-18 18:56:28 DEBUG SQL:144 - 
    
    alter table Likes 
       add constraint FKsgiuhjmogswsfkd01syvnd1uc 
       foreign key (post_id_fk) 
       references Posts
2021-01-18 18:56:28 DEBUG SQL:144 - 
    
    alter table Likes 
       add constraint FK10tjjddvctvy7e5mim2in6icy 
       foreign key (user_id_fk) 
       references Users
2021-01-18 18:56:28 DEBUG SQL:144 - 
    
    alter table PasswordResetToken 
       add constraint FKpr3o3kx11ack418b2doprb9rl 
       foreign key (user_id) 
       references Users
2021-01-18 18:56:28 DEBUG SQL:144 - 
    
    alter table Posts 
       add constraint FKq5d7uyu4hr67yrr645katvulo 
       foreign key (user_id_fk) 
       references Users
2021-01-18 18:56:28 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-01-18 18:56:28 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-01-18 18:56:28 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-18 18:56:28 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-18 18:56:28 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-01-18 18:56:28 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-01-18 18:56:28 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2bc426f0
2021-01-18 18:56:28 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 4cad64ae-6de1-43e4-b9c4-909aec0241fb (<unnamed>)
2021-01-18 18:56:28 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-01-18 18:56:28 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-01-18 18:56:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:28 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:28 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:28 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:28 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@79518e00
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:292 - parse() - HQL: update com.project.model.Post as generatedAlias0 set generatedAlias0.postText = :param0 where generatedAlias0.postId=1
2021-01-18 18:56:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  \-[IDENT] Node: 'project'
    |     |  |  \-[IDENT] Node: 'model'
    |     |  \-[IDENT] Node: 'Post'
    |     \-[ALIAS] Node: 'generatedAlias0'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias0'
    |     |  \-[IDENT] Node: 'postText'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'postId'
          \-[NUM_INT] Node: '1'

2021-01-18 18:56:28 DEBUG HqlSqlBaseWalker:124 - update << begin [level=1, statement=update]
2021-01-18 18:56:28 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Post (generatedAlias0) -> post0_
2021-01-18 18:56:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post_id
2021-01-18 18:56:28 DEBUG DotNode:695 - getDataType() : postText -> org.hibernate.type.StringType@7164ca4c
2021-01-18 18:56:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.postText -> post_text
2021-01-18 18:56:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post_id
2021-01-18 18:56:28 DEBUG DotNode:695 - getDataType() : postId -> org.hibernate.type.IntegerType@1efe439d
2021-01-18 18:56:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.postId -> post_id
2021-01-18 18:56:28 DEBUG HqlSqlBaseWalker:128 - update : finishing up [level=1, statement=update]
2021-01-18 18:56:28 DEBUG HqlSqlBaseWalker:132 - update >> end [level=1, statement=update]
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Posts)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Posts' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Posts,tableAlias=post0_,origin=null,columns={,className=com.project.model.Post}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'post_text' {propertyName=postText,dereferenceType=PRIMITIVE,getPropertyPath=postText,path=generatedAlias0.postText,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
    |     |  +-[ALIAS_REF] IdentNode: 'post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |     |  \-[IDENT] IdentNode: 'postText' {originalText=postText}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7164ca4c}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'post_id' {propertyName=postId,dereferenceType=PRIMITIVE,getPropertyPath=postId,path=generatedAlias0.postId,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
          |  \-[IDENT] IdentNode: 'postId' {originalText=postId}
          \-[NUM_INT] LiteralNode: '1'

2021-01-18 18:56:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:28 DEBUG SQL:144 - 
    update
        Posts 
    set
        post_text=? 
    where
        post_id=1
2021-01-18 18:56:28 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:28 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:28 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 where generatedAlias0.postId=1
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 where generatedAlias0.postId=1
2021-01-18 18:56:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'project'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Post'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'postId'
          \-[NUM_INT] Node: '1'

2021-01-18 18:56:28 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 18:56:28 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Post (generatedAlias0) -> post0_
2021-01-18 18:56:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:56:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:56:28 DEBUG DotNode:695 - getDataType() : postId -> org.hibernate.type.IntegerType@1efe439d
2021-01-18 18:56:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.postId -> post0_.post_id
2021-01-18 18:56:28 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 18:56:28 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} post0_.post_id ) ( FromClause{level=1} Posts post0_ ) ( where ( = ( post0_.post_id post0_.post_id postId ) 1 ) ) )
2021-01-18 18:56:28 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [Posts]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.Post)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.project.model.Post)
          | path: generatedAlias0.postId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.project.model.Post)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: postId
          \-LiteralNode

2021-01-18 18:56:28 DEBUG JoinProcessor:304 - Using FROM fragment [Posts post0_]
2021-01-18 18:56:28 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Posts)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'post0_.post_id as post_id1_2_' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |  \-[SQL_TOKEN] SqlFragment: 'post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Posts post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Posts,tableAlias=post0_,origin=null,columns={,className=com.project.model.Post}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'post0_.post_id' {propertyName=postId,dereferenceType=PRIMITIVE,getPropertyPath=postId,path=generatedAlias0.postId,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'post0_.post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
          |  \-[IDENT] IdentNode: 'postId' {originalText=postId}
          \-[NUM_INT] LiteralNode: '1'

2021-01-18 18:56:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 where generatedAlias0.postId=1
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:259 - SQL: select post0_.post_id as post_id1_2_, post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_ from Posts post0_ where post0_.post_id=1
2021-01-18 18:56:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:28 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    where
        post0_.post_id=1
2021-01-18 18:56:28 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:56:28 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:56:28 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:56:28 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:56:28.476
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:56:28 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:56:28 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:56:28.476}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:56:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:28 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:28 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:28 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:28 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 where generatedAlias0.author=1 order by generatedAlias0.timestamp desc
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 where generatedAlias0.author=1 order by generatedAlias0.timestamp desc
2021-01-18 18:56:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'project'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Post'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias0'
    |     |  \-[IDENT] Node: 'author'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'timestamp'
       \-[DESCENDING] Node: 'desc'

2021-01-18 18:56:28 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 18:56:28 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Post (generatedAlias0) -> post0_
2021-01-18 18:56:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:56:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:56:28 DEBUG DotNode:695 - getDataType() : author -> org.hibernate.type.ManyToOneType(com.project.model.User)
2021-01-18 18:56:28 DEBUG DotNode:653 - dereferenceShortcut() : property author in com.project.model.Post does not require a join.
2021-01-18 18:56:28 DEBUG DotNode:682 - Terminal getPropertyPath = [author]
2021-01-18 18:56:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.author -> post0_.user_id_fk
2021-01-18 18:56:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:56:28 DEBUG DotNode:695 - getDataType() : timestamp -> org.hibernate.type.LocalDateTimeType@492691d7
2021-01-18 18:56:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.timestamp -> post0_.timestamp
2021-01-18 18:56:28 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 18:56:28 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} post0_.post_id ) ( FromClause{level=1} Posts post0_ ) ( where ( = ( post0_.user_id_fk post0_.post_id author ) 1 ) ) ( order ( post0_.timestamp post0_.post_id timestamp ) desc ) )
2021-01-18 18:56:28 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [Posts]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.Post)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    +-SqlNode
    |  \-BinaryLogicOperatorNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.project.model.Post)
    |     | path: generatedAlias0.author
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.project.model.Post)
    |     |  | originalText: generatedAlias0
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: author
    |     \-LiteralNode
    \-OrderByClause
       +-DotNode
       | persister: SingleTableEntityPersister(com.project.model.Post)
       | path: generatedAlias0.timestamp
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.project.model.Post)
       |  | originalText: generatedAlias0
       |  \-IdentNode
       |    persister: null
       |    originalText: timestamp
       \-SqlNode

2021-01-18 18:56:28 DEBUG JoinProcessor:304 - Using FROM fragment [Posts post0_]
2021-01-18 18:56:28 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Posts)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'post0_.post_id as post_id1_2_' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |  \-[SQL_TOKEN] SqlFragment: 'post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Posts post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Posts,tableAlias=post0_,origin=null,columns={,className=com.project.model.Post}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'post0_.user_id_fk' {propertyName=author,dereferenceType=UNKNOWN,getPropertyPath=author,path=generatedAlias0.author,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
    |     |  +-[ALIAS_REF] IdentNode: 'post0_.post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |     |  \-[IDENT] IdentNode: 'author' {originalText=author}
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'post0_.timestamp' {propertyName=timestamp,dereferenceType=PRIMITIVE,getPropertyPath=timestamp,path=generatedAlias0.timestamp,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'post0_.post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
       |  \-[IDENT] IdentNode: 'timestamp' {originalText=timestamp}
       \-[DESCENDING] SqlNode: 'desc'

2021-01-18 18:56:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 where generatedAlias0.author=1 order by generatedAlias0.timestamp desc
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:259 - SQL: select post0_.post_id as post_id1_2_, post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_ from Posts post0_ where post0_.user_id_fk=1 order by post0_.timestamp desc
2021-01-18 18:56:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:28 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    where
        post0_.user_id_fk=1 
    order by
        post0_.timestamp desc
2021-01-18 18:56:28 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:56:28 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:56:28 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:56:28 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:56:28.476
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:56:28 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:56:28 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:56:28.476}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:56:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:28 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:28 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:28 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:28 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0
2021-01-18 18:56:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'project'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-01-18 18:56:28 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 18:56:28 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.User (generatedAlias0) -> user0_
2021-01-18 18:56:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> user0_.user_id
2021-01-18 18:56:28 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 18:56:28 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} Users user0_ ) )
2021-01-18 18:56:28 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [Users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-01-18 18:56:28 DEBUG JoinProcessor:304 - Using FROM fragment [Users user0_]
2021-01-18 18:56:28 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_3_' {alias=generatedAlias0, className=com.project.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.project.model.User}}

2021-01-18 18:56:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:259 - SQL: select user0_.user_id as user_id1_3_, user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_ from Users user0_
2021-01-18 18:56:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:28 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_,
        user0_.email as email2_3_,
        user0_.firstname as firstnam3_3_,
        user0_.lastname as lastname4_3_,
        user0_.password as password5_3_,
        user0_.profile_picture as profile_6_3_,
        user0_.password_salt as password7_3_,
        user0_.username as username8_3_ 
    from
        Users user0_
2021-01-18 18:56:28 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:56:28 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#1]
2021-01-18 18:56:28 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:56:28 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#2]
2021-01-18 18:56:28 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:56:28 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#3]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:56:28 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:56:28 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:56:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:28 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:28 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:56:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'project'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Post'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'timestamp'
       \-[DESCENDING] Node: 'desc'

2021-01-18 18:56:28 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 18:56:28 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Post (generatedAlias0) -> post0_
2021-01-18 18:56:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:56:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 18:56:28 DEBUG DotNode:695 - getDataType() : timestamp -> org.hibernate.type.LocalDateTimeType@492691d7
2021-01-18 18:56:28 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.timestamp -> post0_.timestamp
2021-01-18 18:56:28 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 18:56:28 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} post0_.post_id ) ( FromClause{level=1} Posts post0_ ) ( order ( post0_.timestamp post0_.post_id timestamp ) desc ) )
2021-01-18 18:56:28 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [Posts]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.Post)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-OrderByClause
       +-DotNode
       | persister: SingleTableEntityPersister(com.project.model.Post)
       | path: generatedAlias0.timestamp
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.project.model.Post)
       |  | originalText: generatedAlias0
       |  \-IdentNode
       |    persister: null
       |    originalText: timestamp
       \-SqlNode

2021-01-18 18:56:28 DEBUG JoinProcessor:304 - Using FROM fragment [Posts post0_]
2021-01-18 18:56:28 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Posts)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'post0_.post_id as post_id1_2_' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |  \-[SQL_TOKEN] SqlFragment: 'post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Posts post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Posts,tableAlias=post0_,origin=null,columns={,className=com.project.model.Post}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'post0_.timestamp' {propertyName=timestamp,dereferenceType=PRIMITIVE,getPropertyPath=timestamp,path=generatedAlias0.timestamp,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'post0_.post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
       |  \-[IDENT] IdentNode: 'timestamp' {originalText=timestamp}
       \-[DESCENDING] SqlNode: 'desc'

2021-01-18 18:56:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:56:28 DEBUG QueryTranslatorImpl:259 - SQL: select post0_.post_id as post_id1_2_, post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_ from Posts post0_ order by post0_.timestamp desc
2021-01-18 18:56:28 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:28 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    order by
        post0_.timestamp desc
2021-01-18 18:56:28 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:56:28 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#2]
2021-01-18 18:56:28 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:56:28 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#3]
2021-01-18 18:56:28 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:56:28 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#2]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 2
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:56:28 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:56:28 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#2
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Seans Post
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:56:28.484
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#2]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#3]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 3
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:56:28 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:56:28 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#3
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Alberts Post
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:56:28.484
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#3]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:56:28 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:56:28 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:56:28.476
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:56:28 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:56:28 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:56:28.476}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Seans Post, author=com.project.model.User#2, postId=2, postPicture=null, timestamp=2021-01-18T18:56:28.484}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Alberts Post, author=com.project.model.User#3, postId=3, postPicture=null, timestamp=2021-01-18T18:56:28.484}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:56:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:28 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:28 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-01-18 18:56:28 DEBUG SQL:144 - 
    insert 
    into
        Posts
        (post_id, user_id_fk, post_picture, post_text, timestamp) 
    values
        (null, ?, ?, ?, ?)
2021-01-18 18:56:28 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 4
2021-01-18 18:56:28 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-01-18 18:56:28 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:56:28 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.Post{postText=some text, author=com.project.model.User#1, postId=4, postPicture=null, timestamp=2021-01-18T18:56:28.822}
2021-01-18 18:56:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:28 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:28 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:56:28 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    order by
        post0_.timestamp desc
2021-01-18 18:56:28 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:56:28 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#4]
2021-01-18 18:56:28 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:56:28 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#2]
2021-01-18 18:56:28 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:56:28 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#3]
2021-01-18 18:56:28 DEBUG Loader:384 - Result set row: 3
2021-01-18 18:56:28 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#4]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:56:28 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:56:28 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = some text
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:56:28.822
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#4]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#2]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 2
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:56:28 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:56:28 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#2
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Seans Post
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:56:28.484
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#2]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#3]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 3
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:56:28 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:56:28 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#3
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Alberts Post
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:56:28.484
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#3]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:56:28.476
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:56:28 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:56:28 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:56:28.476}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Seans Post, author=com.project.model.User#2, postId=2, postPicture=null, timestamp=2021-01-18T18:56:28.484}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Alberts Post, author=com.project.model.User#3, postId=3, postPicture=null, timestamp=2021-01-18T18:56:28.484}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.Post{postText=some text, author=com.project.model.User#1, postId=4, postPicture=null, timestamp=2021-01-18T18:56:28.822}
2021-01-18 18:56:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:28 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:28 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:56:28 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    order by
        post0_.timestamp desc
2021-01-18 18:56:28 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:56:28 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#4]
2021-01-18 18:56:28 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:56:28 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#2]
2021-01-18 18:56:28 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:56:28 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#3]
2021-01-18 18:56:28 DEBUG Loader:384 - Result set row: 3
2021-01-18 18:56:28 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#4]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:56:28 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:56:28 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = some text
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:56:28.822
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#4]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#2]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 2
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:56:28 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:56:28 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#2
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Seans Post
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:56:28.484
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#2]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#3]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 3
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:56:28 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:56:28 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#3
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Alberts Post
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:56:28.484
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#3]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:56:28.476
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:56:28 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:56:28 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:56:28.476}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Seans Post, author=com.project.model.User#2, postId=2, postPicture=null, timestamp=2021-01-18T18:56:28.484}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Alberts Post, author=com.project.model.User#3, postId=3, postPicture=null, timestamp=2021-01-18T18:56:28.484}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.Post{postText=some text, author=com.project.model.User#1, postId=4, postPicture=null, timestamp=2021-01-18T18:56:28.822}
2021-01-18 18:56:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:28 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:28 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:28 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:28 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:28 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 18:56:28 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    order by
        post0_.timestamp desc
2021-01-18 18:56:28 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:56:28 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#4]
2021-01-18 18:56:28 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:56:28 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#2]
2021-01-18 18:56:28 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:56:28 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#3]
2021-01-18 18:56:28 DEBUG Loader:384 - Result set row: 3
2021-01-18 18:56:28 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#4]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:56:28 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:56:28 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = some text
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:56:28.822
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#4]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#2]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 2
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:56:28 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:56:28 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#2
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Seans Post
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:56:28.484
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#2]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#3]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 3
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-18 18:56:28 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:56:28 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#3
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Alberts Post
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:56:28.484
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#3]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-18T18:56:28.476
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:28 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-18 18:56:28 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
2021-01-18 18:56:28 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:56:28 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-18T18:56:28.476}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Seans Post, author=com.project.model.User#2, postId=2, postPicture=null, timestamp=2021-01-18T18:56:28.484}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Alberts Post, author=com.project.model.User#3, postId=3, postPicture=null, timestamp=2021-01-18T18:56:28.484}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:56:28 DEBUG EntityPrinter:117 - com.project.model.Post{postText=some text, author=com.project.model.User#1, postId=4, postPicture=null, timestamp=2021-01-18T18:56:28.822}
2021-01-18 18:56:35 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-01-18 18:56:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-01-18 18:56:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-01-18 18:56:35 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-01-18 18:56:35 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.25.Final
2021-01-18 18:56:35 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-01-18 18:56:35 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-01-18 18:56:35 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-01-18 18:56:35 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-01-18 18:56:35 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-01-18 18:56:35 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-01-18 18:56:35 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@600b9d27
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@600b9d27
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@600b9d27
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7922d892
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@71e9ebae
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@432038ec
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@35645047
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@35645047
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@35645047
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@5ddcc487
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@5ddcc487
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5ddcc487
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4671115f
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4671115f
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4671115f
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@36060e
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@36060e
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@36060e
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@be68757
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@be68757
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@be68757
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@1f53a5dc
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@1f53a5dc
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1f53a5dc
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@c7ba306
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@c7ba306
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@c7ba306
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6c4980d3
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6c4980d3
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@38b27cdc
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@38b27cdc
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@3e6104fc
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3e6104fc
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@479460a6
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5be46f9d
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@30c93896
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@30c93896
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@172b013
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@172b013
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@26ceffa8
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@26ceffa8
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@60129b9a
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@60129b9a
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@27216cd
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@27216cd
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6c2c1385
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6c2c1385
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@146dfe6
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@146dfe6
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6af9fcb2
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6af9fcb2
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@632ceb35
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@632ceb35
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@5ddf0d24
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5ddf0d24
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@141e5bef
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@141e5bef
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@c9d0d6
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c9d0d6
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c9d0d6
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@35432107
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@61544ae6
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@61544ae6
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@61544ae6
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5d066c7d
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1603cd68
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@66c92293
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@66c92293
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@1c33c17b
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1c33c17b
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@39de3d36
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@39de3d36
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@58326051
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@58326051
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@598bd2ba
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@598bd2ba
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f5991f6
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@2c07545f
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2c07545f
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@2c07545f
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@76f4b65
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@76f4b65
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@76f4b65
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@545b995e
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@41e68d87
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@45312be2
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@45312be2
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@45312be2
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ab7395e
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ab7395e
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ab7395e
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@e70f13a
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4b40f651
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@27eedb64
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@27eedb64
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2b76ff4e
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@1b84f475
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1b84f475
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@4331d187
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4331d187
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1608bcbd
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b2c5e07
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@336f1079
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@27d4a09
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@27d4a09
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@740d2e78
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1c481ff2
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@72437d8d
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1b955cac
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@676cf48
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5a1de7fb
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@335b5620
2021-01-18 18:56:35 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@29a0cdb
2021-01-18 18:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-01-18 18:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-01-18 18:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-01-18 18:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-01-18 18:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-01-18 18:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-01-18 18:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-01-18 18:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-01-18 18:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-01-18 18:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-01-18 18:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-01-18 18:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-01-18 18:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-01-18 18:56:35 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-01-18 18:56:35 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
2021-01-18 18:56:35 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
2021-01-18 18:56:35 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.1
2021-01-18 18:56:35 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2021-01-18 18:56:35 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-01-18 18:56:35 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-01-18 18:56:35 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10c8f62] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@674c583e]
2021-01-18 18:56:35 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.Like
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 18:56:35 DEBUG EntityBinder:430 - Import with entity name Like
2021-01-18 18:56:35 DEBUG EntityBinder:873 - Bind entity com.project.model.Like on table Likes
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=like_id, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-18 18:56:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-18 18:56:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property likeId with lazy=false
2021-01-18 18:56:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Like:likeId]
2021-01-18 18:56:35 DEBUG SimpleValueBinder:410 - building SimpleValue for likeId
2021-01-18 18:56:35 DEBUG PropertyBinder:266 - Building property likeId
2021-01-18 18:56:35 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(like_id)]), likeId, identity, , ...)
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id_fk', referencedColumn='post_id', mappedBy=''}
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=post, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:35 DEBUG PropertyBinder:266 - Building property post
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id_fk', referencedColumn='user_id', mappedBy=''}
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:35 DEBUG PropertyBinder:266 - Building property user
2021-01-18 18:56:35 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.PasswordResetToken
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 18:56:35 DEBUG EntityBinder:430 - Import with entity name PasswordResetToken
2021-01-18 18:56:35 DEBUG EntityBinder:873 - Bind entity com.project.model.PasswordResetToken on table PasswordResetToken
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-18 18:56:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-18 18:56:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-01-18 18:56:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:id]
2021-01-18 18:56:35 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-01-18 18:56:35 DEBUG PropertyBinder:266 - Building property id
2021-01-18 18:56:35 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=expiryDate, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expiryDate with lazy=false
2021-01-18 18:56:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:expiryDate]
2021-01-18 18:56:35 DEBUG SimpleValueBinder:410 - building SimpleValue for expiryDate
2021-01-18 18:56:35 DEBUG PropertyBinder:266 - Building property expiryDate
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=token, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property token with lazy=false
2021-01-18 18:56:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:token]
2021-01-18 18:56:35 DEBUG SimpleValueBinder:410 - building SimpleValue for token
2021-01-18 18:56:35 DEBUG PropertyBinder:266 - Building property token
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:35 DEBUG PropertyBinder:266 - Building property user
2021-01-18 18:56:35 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.Post
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 18:56:35 DEBUG EntityBinder:430 - Import with entity name Post
2021-01-18 18:56:35 DEBUG EntityBinder:873 - Bind entity com.project.model.Post on table Posts
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-18 18:56:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-18 18:56:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-01-18 18:56:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postId]
2021-01-18 18:56:35 DEBUG SimpleValueBinder:410 - building SimpleValue for postId
2021-01-18 18:56:35 DEBUG PropertyBinder:266 - Building property postId
2021-01-18 18:56:35 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id_fk', referencedColumn='user_id', mappedBy=''}
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=author, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:35 DEBUG PropertyBinder:266 - Building property author
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_picture, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postPicture with lazy=false
2021-01-18 18:56:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postPicture]
2021-01-18 18:56:35 DEBUG SimpleValueBinder:410 - building SimpleValue for postPicture
2021-01-18 18:56:35 DEBUG PropertyBinder:266 - Building property postPicture
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_text, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postText with lazy=false
2021-01-18 18:56:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postText]
2021-01-18 18:56:35 DEBUG SimpleValueBinder:410 - building SimpleValue for postText
2021-01-18 18:56:35 DEBUG PropertyBinder:266 - Building property postText
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=timestamp, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property timestamp with lazy=false
2021-01-18 18:56:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:timestamp]
2021-01-18 18:56:35 DEBUG SimpleValueBinder:410 - building SimpleValue for timestamp
2021-01-18 18:56:35 DEBUG PropertyBinder:266 - Building property timestamp
2021-01-18 18:56:35 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.User
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 18:56:35 DEBUG EntityBinder:430 - Import with entity name User
2021-01-18 18:56:35 DEBUG EntityBinder:873 - Bind entity com.project.model.User on table Users
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-18 18:56:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-18 18:56:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-01-18 18:56:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:userId]
2021-01-18 18:56:35 DEBUG SimpleValueBinder:410 - building SimpleValue for userId
2021-01-18 18:56:35 DEBUG PropertyBinder:266 - Building property userId
2021-01-18 18:56:35 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, identity, , ...)
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-01-18 18:56:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-01-18 18:56:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:email]
2021-01-18 18:56:35 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-01-18 18:56:35 DEBUG PropertyBinder:266 - Building property email
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-01-18 18:56:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:firstName]
2021-01-18 18:56:35 DEBUG SimpleValueBinder:410 - building SimpleValue for firstName
2021-01-18 18:56:35 DEBUG PropertyBinder:266 - Building property firstName
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-01-18 18:56:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:lastName]
2021-01-18 18:56:35 DEBUG SimpleValueBinder:410 - building SimpleValue for lastName
2021-01-18 18:56:35 DEBUG PropertyBinder:266 - Building property lastName
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-01-18 18:56:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:password]
2021-01-18 18:56:35 DEBUG SimpleValueBinder:410 - building SimpleValue for password
2021-01-18 18:56:35 DEBUG PropertyBinder:266 - Building property password
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=profile_picture, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property profilePicture with lazy=false
2021-01-18 18:56:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:profilePicture]
2021-01-18 18:56:35 DEBUG SimpleValueBinder:410 - building SimpleValue for profilePicture
2021-01-18 18:56:35 DEBUG PropertyBinder:266 - Building property profilePicture
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=password_salt, insertable=true, updatable=true, unique=false}
2021-01-18 18:56:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property salt with lazy=false
2021-01-18 18:56:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:salt]
2021-01-18 18:56:35 DEBUG SimpleValueBinder:410 - building SimpleValue for salt
2021-01-18 18:56:35 DEBUG PropertyBinder:266 - Building property salt
2021-01-18 18:56:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-01-18 18:56:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-01-18 18:56:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:username]
2021-01-18 18:56:35 DEBUG SimpleValueBinder:410 - building SimpleValue for username
2021-01-18 18:56:35 DEBUG PropertyBinder:266 - Building property username
2021-01-18 18:56:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for likeId
2021-01-18 18:56:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-01-18 18:56:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expiryDate
2021-01-18 18:56:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for token
2021-01-18 18:56:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postId
2021-01-18 18:56:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postPicture
2021-01-18 18:56:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postText
2021-01-18 18:56:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for timestamp
2021-01-18 18:56:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userId
2021-01-18 18:56:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-01-18 18:56:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for firstName
2021-01-18 18:56:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lastName
2021-01-18 18:56:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for password
2021-01-18 18:56:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for profilePicture
2021-01-18 18:56:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for salt
2021-01-18 18:56:35 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for username
2021-01-18 18:56:35 DEBUG PrimaryKey:35 - Forcing column [like_id] to be non-null as it is part of the primary key for table [likes]
2021-01-18 18:56:35 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [passwordresettoken]
2021-01-18 18:56:35 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-01-18 18:56:35 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-01-18 18:56:35 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.Post
2021-01-18 18:56:35 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:56:35 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:56:35 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:56:35 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.Post
2021-01-18 18:56:35 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:56:35 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:56:35 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 18:56:35 DEBUG SessionFactoryImpl:203 - Building session factory
2021-01-18 18:56:35 DEBUG Settings:68 - SessionFactory name : null
2021-01-18 18:56:35 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-01-18 18:56:35 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-01-18 18:56:35 DEBUG Settings:72 - Statistics: disabled
2021-01-18 18:56:35 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-01-18 18:56:35 DEBUG Settings:75 - Default entity-mode: pojo
2021-01-18 18:56:35 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-01-18 18:56:35 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-01-18 18:56:35 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-01-18 18:56:35 DEBUG Settings:80 - Default batch fetch size: -1
2021-01-18 18:56:35 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-01-18 18:56:35 DEBUG Settings:82 - Default null ordering: NONE
2021-01-18 18:56:35 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-01-18 18:56:35 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-01-18 18:56:35 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-01-18 18:56:35 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-01-18 18:56:35 DEBUG Settings:90 - Query language substitutions: {}
2021-01-18 18:56:35 DEBUG Settings:91 - Named query checking : enabled
2021-01-18 18:56:35 DEBUG Settings:93 - Second-level cache: disabled
2021-01-18 18:56:35 DEBUG Settings:94 - Second-level query cache: disabled
2021-01-18 18:56:35 DEBUG Settings:95 - Second-level query cache factory: null
2021-01-18 18:56:35 DEBUG Settings:96 - Second-level cache region prefix: null
2021-01-18 18:56:35 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-01-18 18:56:35 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-01-18 18:56:35 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-01-18 18:56:35 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-01-18 18:56:35 DEBUG Settings:102 - JDBC batch size: 15
2021-01-18 18:56:35 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-01-18 18:56:35 DEBUG Settings:104 - Scrollable result sets: enabled
2021-01-18 18:56:35 DEBUG Settings:105 - Wrap result sets: disabled
2021-01-18 18:56:35 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-01-18 18:56:35 DEBUG Settings:107 - JDBC result set fetch size: null
2021-01-18 18:56:35 DEBUG Settings:108 - Connection release mode: ON_CLOSE
2021-01-18 18:56:35 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-01-18 18:56:35 DEBUG Settings:111 - JPA compliance - query : disabled
2021-01-18 18:56:35 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-01-18 18:56:35 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-01-18 18:56:35 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-01-18 18:56:35 DEBUG SessionFactoryImpl:258 - Session factory constructed with filter configurations : {}
2021-01-18 18:56:36 DEBUG SessionFactoryImpl:259 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3f4f9acd, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2\target\test-classes;C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2\target\classes;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\annotations-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ant.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ha.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ssi.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-storeconfig.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-tribes.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\ecj-4.17.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\el-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jasper-el.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jasper.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jaspic-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jsp-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\servlet-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-coyote.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-dbcp.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-cs.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-de.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-es.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-fr.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ja.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ko.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-pt-BR.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ru.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-zh-CN.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-jdbc.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-jni.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-util-scan.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-util.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-websocket.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\websocket-api.jar;C:\Users\david\.m2\repository\org\postgresql\postgresql\42.2.14\postgresql-42.2.14.jar;C:\Users\david\.m2\repository\org\hibernate\hibernate-core\5.4.25.Final\hibernate-core-5.4.25.Final.jar;C:\Users\david\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\david\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\david\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\david\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\david\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\david\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\david\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\david\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\david\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\david\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\david\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\david\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\david\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\david\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\david\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\david\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\david\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\david\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.5.Final\hibernate-validator-6.1.5.Final.jar;C:\Users\david\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\david\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\david\.m2\repository\junit\junit\4.13\junit-4.13.jar;C:\Users\david\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.11.3\jackson-databind-2.11.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.3\jackson-annotations-2.11.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.3\jackson-core-2.11.3.jar;C:\Users\david\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\david\.m2\repository\org\springframework\spring-core\5.2.12.RELEASE\spring-core-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-jcl\5.2.12.RELEASE\spring-jcl-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-beans\5.2.12.RELEASE\spring-beans-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-context\5.2.12.RELEASE\spring-context-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-aop\5.2.12.RELEASE\spring-aop-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-expression\5.2.12.RELEASE\spring-expression-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-orm\5.2.12.RELEASE\spring-orm-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-jdbc\5.2.12.RELEASE\spring-jdbc-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-tx\5.2.12.RELEASE\spring-tx-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-webmvc\5.2.12.RELEASE\spring-webmvc-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-web\5.2.12.RELEASE\spring-web-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-context-support\5.2.12.RELEASE\spring-context-support-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\javax\mail\javax.mail-api\1.6.2\javax.mail-api-1.6.2.jar;C:\Users\david\.m2\repository\com\sun\mail\javax.mail\1.6.2\javax.mail-1.6.2.jar;C:\Users\david\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\david\.m2\repository\org\springframework\spring-aspects\5.2.12.RELEASE\spring-aspects-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\david\.m2\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;C:\Users\david\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-s3\1.11.327\aws-java-sdk-s3-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-kms\1.11.327\aws-java-sdk-kms-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-core\1.11.327\aws-java-sdk-core-1.11.327.jar;C:\Users\david\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\david\.m2\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;C:\Users\david\.m2\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;C:\Users\david\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\david\.m2\repository\software\amazon\ion\ion-java\1.0.2\ion-java-1.0.2.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-cbor\2.6.7\jackson-dataformat-cbor-2.6.7.jar;C:\Users\david\.m2\repository\joda-time\joda-time\2.8.1\joda-time-2.8.1.jar;C:\Users\david\.m2\repository\com\amazonaws\jmespath-java\1.11.327\jmespath-java-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-dynamodb\1.11.327\aws-java-sdk-dynamodb-1.11.327.jar;C:\sts-bundle\sts-3.9.13.RELEASE\configuration\org.eclipse.osgi\311\0\.cp;C:\sts-bundle\sts-3.9.13.RELEASE\configuration\org.eclipse.osgi\310\0\.cp, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Los_Angeles, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_271\bin, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 65343 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.project.test.UserDaoTest, sun.cpu.endian=little, user.home=C:\Users\david, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_271, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_271\lib\resources.jar;C:\Program Files\Java\jre1.8.0_271\lib\rt.jar;C:\Program Files\Java\jre1.8.0_271\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_271\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_271\lib\jce.jar;C:\Program Files\Java\jre1.8.0_271\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_271\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_271\classes, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=david, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_271\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@3d494fbf], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\david\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@46baf579, java.library.path=C:\Program Files\Java\jre1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_271/bin/server;C:/Program Files/Java/jre1.8.0_271/bin;C:/Program Files/Java/jre1.8.0_271/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\ProgramData\chocolatey\bin;C:\ProgramData\nvm;C:\Program Files\nodejs;C:\Program Files\Microsoft VS Code\bin;D:\PuTTY\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Users\david\AppData\Local\Microsoft\WindowsApps;C:\sts-bundle\sts-3.9.13.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@4218d6a3, java.ext.dirs=C:\Program Files\Java\jre1.8.0_271\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-01-18 18:56:36 INFO  Version:21 - HV000001: Hibernate Validator 6.1.5.Final
2021-01-18 18:56:36 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-01-18 18:56:36 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-01-18 18:56:36 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-01-18 18:56:36 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-01-18 18:56:36 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-01-18 18:56:36 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-01-18 18:56:36 DEBUG ResourceBundleMessageInterpolator:172 - Loaded expression factory via original TCCL
2021-01-18 18:56:36 DEBUG ValidatorFactoryConfigurationHelper:300 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-01-18 18:56:36 DEBUG ValidatorFactoryConfigurationHelper:375 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-01-18 18:56:36 DEBUG ValidatorFactoryConfigurationHelper:376 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-01-18 18:56:36 DEBUG ValidatorFactoryConfigurationHelper:377 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-01-18 18:56:36 DEBUG ValidatorFactoryConfigurationHelper:378 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-01-18 18:56:36 DEBUG ValidatorFactoryConfigurationHelper:379 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-01-18 18:56:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-18 18:56:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-18 18:56:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-18 18:56:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-18 18:56:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-18 18:56:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-18 18:56:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-18 18:56:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-18 18:56:36 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-01-18 18:56:36 DEBUG SessionFactoryImpl:298 - Instantiated session factory
2021-01-18 18:56:36 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10c8f62] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@31133b6e]
2021-01-18 18:56:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-18 18:56:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-18 18:56:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-18 18:56:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-18 18:56:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-18 18:56:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-18 18:56:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-18 18:56:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.PasswordResetToken
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:3928 -  Version select: select id from PasswordResetToken where id =?
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select passwordre_.id, passwordre_.expiryDate as expiryda2_1_, passwordre_.token as token3_1_, passwordre_.user_id as user_id4_1_ from PasswordResetToken passwordre_ where passwordre_.id=?
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into PasswordResetToken (expiryDate, token, user_id, id) values (?, ?, ?, ?)
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:394 -  Update 0: update PasswordResetToken set expiryDate=?, token=?, user_id=? where id=?
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from PasswordResetToken where id=?
2021-01-18 18:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3804a9a8]
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expiryDate
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : token
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-01-18 18:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68d7a2df]
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.email
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.firstName
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.lastName
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.password
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.profilePicture
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.salt
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.username
2021-01-18 18:56:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 18:56:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 18:56:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.PasswordResetToken)
    - Returns
       - EntityReturnImpl(entity=com.project.model.PasswordResetToken, querySpaceUid=<gen:0>, path=com.project.model.PasswordResetToken)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:1>, path=com.project.model.PasswordResetToken.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.PasswordResetToken)
          - SQL table alias mapping - passwordre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_3_1_}

2021-01-18 18:56:36 DEBUG EntityLoader:129 - Static select for entity com.project.model.PasswordResetToken [NONE]: select passwordre0_.id as id1_1_0_, passwordre0_.expiryDate as expiryda2_1_0_, passwordre0_.token as token3_1_0_, passwordre0_.user_id as user_id4_1_0_, user1_.user_id as user_id1_3_1_, user1_.email as email2_3_1_, user1_.firstname as firstnam3_3_1_, user1_.lastname as lastname4_3_1_, user1_.password as password5_3_1_, user1_.profile_picture as profile_6_3_1_, user1_.password_salt as password7_3_1_, user1_.username as username8_3_1_ from PasswordResetToken passwordre0_ inner join Users user1_ on passwordre0_.user_id=user1_.user_id where passwordre0_.id=?
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.Like
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:3928 -  Version select: select like_id from Likes where like_id =?
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select like_.like_id, like_.post_id_fk as post_id_2_0_, like_.user_id_fk as user_id_3_0_ from Likes like_ where like_.like_id=?
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Likes (post_id_fk, user_id_fk, like_id) values (?, ?, ?)
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:394 -  Update 0: update Likes set post_id_fk=?, user_id_fk=? where like_id=?
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Likes where like_id=?
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Likes (like_id, post_id_fk, user_id_fk) values (null, ?, ?)
2021-01-18 18:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a6fa56e]
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post
2021-01-18 18:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@118ffcfd]
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author
2021-01-18 18:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74174a23]
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.email
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.firstName
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.lastName
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.password
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.profilePicture
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.salt
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.username
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.postPicture
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.postText
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.timestamp
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-01-18 18:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dc4a691]
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.email
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.firstName
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.lastName
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.password
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.profilePicture
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.salt
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.username
2021-01-18 18:56:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 18:56:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 18:56:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.Like)
    - Returns
       - EntityReturnImpl(entity=com.project.model.Like, querySpaceUid=<gen:0>, path=com.project.model.Like)
          - EntityAttributeFetchImpl(entity=com.project.model.Post, querySpaceUid=<gen:1>, path=com.project.model.Like.post)
             - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:2>, path=com.project.model.Like.post.author)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:3>, path=com.project.model.Like.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.Like)
          - SQL table alias mapping - like0_
          - alias suffix - 0_
          - suffixed key columns - {like_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(post)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.project.model.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_3_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.project.model.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {user_id1_3_3_}

2021-01-18 18:56:36 DEBUG EntityLoader:129 - Static select for entity com.project.model.Like [NONE]: select like0_.like_id as like_id1_0_0_, like0_.post_id_fk as post_id_2_0_0_, like0_.user_id_fk as user_id_3_0_0_, post1_.post_id as post_id1_2_1_, post1_.user_id_fk as user_id_5_2_1_, post1_.post_picture as post_pic2_2_1_, post1_.post_text as post_tex3_2_1_, post1_.timestamp as timestam4_2_1_, user2_.user_id as user_id1_3_2_, user2_.email as email2_3_2_, user2_.firstname as firstnam3_3_2_, user2_.lastname as lastname4_3_2_, user2_.password as password5_3_2_, user2_.profile_picture as profile_6_3_2_, user2_.password_salt as password7_3_2_, user2_.username as username8_3_2_, user3_.user_id as user_id1_3_3_, user3_.email as email2_3_3_, user3_.firstname as firstnam3_3_3_, user3_.lastname as lastname4_3_3_, user3_.password as password5_3_3_, user3_.profile_picture as profile_6_3_3_, user3_.password_salt as password7_3_3_, user3_.username as username8_3_3_ from Likes like0_ left outer join Posts post1_ on like0_.post_id_fk=post1_.post_id left outer join Users user2_ on post1_.user_id_fk=user2_.user_id left outer join Users user3_ on like0_.user_id_fk=user3_.user_id where like0_.like_id=?
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.User
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:3928 -  Version select: select user_id from Users where user_id =?
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select user_.user_id, user_.email as email2_3_, user_.firstname as firstnam3_3_, user_.lastname as lastname4_3_, user_.password as password5_3_, user_.profile_picture as profile_6_3_, user_.password_salt as password7_3_, user_.username as username8_3_ from Users user_ where user_.user_id=?
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Users (email, firstname, lastname, password, profile_picture, password_salt, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:394 -  Update 0: update Users set email=?, firstname=?, lastname=?, password=?, profile_picture=?, password_salt=?, username=? where user_id=?
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Users where user_id=?
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Users (user_id, email, firstname, lastname, password, profile_picture, password_salt, username) values (null, ?, ?, ?, ?, ?, ?, ?)
2021-01-18 18:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36c2b646]
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : profilePicture
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : salt
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-01-18 18:56:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 18:56:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 18:56:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.User)
    - Returns
       - EntityReturnImpl(entity=com.project.model.User, querySpaceUid=<gen:0>, path=com.project.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}

2021-01-18 18:56:36 DEBUG EntityLoader:129 - Static select for entity com.project.model.User [NONE]: select user0_.user_id as user_id1_3_0_, user0_.email as email2_3_0_, user0_.firstname as firstnam3_3_0_, user0_.lastname as lastname4_3_0_, user0_.password as password5_3_0_, user0_.profile_picture as profile_6_3_0_, user0_.password_salt as password7_3_0_, user0_.username as username8_3_0_ from Users user0_ where user0_.user_id=?
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.Post
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:3928 -  Version select: select post_id from Posts where post_id =?
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select post_.post_id, post_.user_id_fk as user_id_5_2_, post_.post_picture as post_pic2_2_, post_.post_text as post_tex3_2_, post_.timestamp as timestam4_2_ from Posts post_ where post_.post_id=?
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Posts (user_id_fk, post_picture, post_text, timestamp, post_id) values (?, ?, ?, ?, ?)
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:394 -  Update 0: update Posts set user_id_fk=?, post_picture=?, post_text=?, timestamp=? where post_id=?
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Posts where post_id=?
2021-01-18 18:56:36 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Posts (post_id, user_id_fk, post_picture, post_text, timestamp) values (null, ?, ?, ?, ?)
2021-01-18 18:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b1dc20f]
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author
2021-01-18 18:56:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6540cf1d]
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.email
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.firstName
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.lastName
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.password
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.profilePicture
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.salt
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.username
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postPicture
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postText
2021-01-18 18:56:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : timestamp
2021-01-18 18:56:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 18:56:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 18:56:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.Post)
    - Returns
       - EntityReturnImpl(entity=com.project.model.Post, querySpaceUid=<gen:0>, path=com.project.model.Post)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:1>, path=com.project.model.Post.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_3_1_}

2021-01-18 18:56:36 DEBUG EntityLoader:129 - Static select for entity com.project.model.Post [NONE]: select post0_.post_id as post_id1_2_0_, post0_.user_id_fk as user_id_5_2_0_, post0_.post_picture as post_pic2_2_0_, post0_.post_text as post_tex3_2_0_, post0_.timestamp as timestam4_2_0_, user1_.user_id as user_id1_3_1_, user1_.email as email2_3_1_, user1_.firstname as firstnam3_3_1_, user1_.lastname as lastname4_3_1_, user1_.password as password5_3_1_, user1_.profile_picture as profile_6_3_1_, user1_.password_salt as password7_3_1_, user1_.username as username8_3_1_ from Posts post0_ left outer join Users user1_ on post0_.user_id_fk=user1_.user_id where post0_.post_id=?
2021-01-18 18:56:36 DEBUG SQL:144 - 
    
    drop table if exists Likes CASCADE 
2021-01-18 18:56:36 DEBUG SQL:144 - 
    
    drop table if exists PasswordResetToken CASCADE 
2021-01-18 18:56:36 DEBUG SQL:144 - 
    
    drop table if exists Posts CASCADE 
2021-01-18 18:56:36 DEBUG SQL:144 - 
    
    drop table if exists Users CASCADE 
2021-01-18 18:56:36 DEBUG SQL:144 - 
    
    drop sequence if exists hibernate_sequence
2021-01-18 18:56:36 DEBUG SQL:144 - create sequence hibernate_sequence start with 1 increment by 1
2021-01-18 18:56:36 DEBUG SQL:144 - 
    
    create table Likes (
       like_id integer generated by default as identity,
        post_id_fk integer,
        user_id_fk integer,
        primary key (like_id)
    )
2021-01-18 18:56:36 DEBUG SQL:144 - 
    
    create table PasswordResetToken (
       id bigint not null,
        expiryDate timestamp,
        token varchar(255),
        user_id integer not null,
        primary key (id)
    )
2021-01-18 18:56:36 DEBUG SQL:144 - 
    
    create table Posts (
       post_id integer generated by default as identity,
        post_picture varchar(255),
        post_text varchar(280) not null,
        timestamp timestamp not null,
        user_id_fk integer,
        primary key (post_id)
    )
2021-01-18 18:56:36 DEBUG SQL:144 - 
    
    create table Users (
       user_id integer generated by default as identity,
        email varchar(255) not null,
        firstname varchar(255) not null,
        lastname varchar(255) not null,
        password varchar(255) not null,
        profile_picture varchar(255),
        password_salt varchar(255) not null,
        username varchar(255) not null,
        primary key (user_id)
    )
2021-01-18 18:56:36 DEBUG SQL:144 - 
    
    alter table Users 
       add constraint UK_ncoa9bfasrql0x4nhmh1plxxy unique (email)
2021-01-18 18:56:36 DEBUG SQL:144 - 
    
    alter table Users 
       add constraint UK_23y4gd49ajvbqgl3psjsvhff6 unique (username)
2021-01-18 18:56:36 DEBUG SQL:144 - 
    
    alter table Likes 
       add constraint FKsgiuhjmogswsfkd01syvnd1uc 
       foreign key (post_id_fk) 
       references Posts
2021-01-18 18:56:36 DEBUG SQL:144 - 
    
    alter table Likes 
       add constraint FK10tjjddvctvy7e5mim2in6icy 
       foreign key (user_id_fk) 
       references Users
2021-01-18 18:56:36 DEBUG SQL:144 - 
    
    alter table PasswordResetToken 
       add constraint FKpr3o3kx11ack418b2doprb9rl 
       foreign key (user_id) 
       references Users
2021-01-18 18:56:36 DEBUG SQL:144 - 
    
    alter table Posts 
       add constraint FKq5d7uyu4hr67yrr645katvulo 
       foreign key (user_id_fk) 
       references Users
2021-01-18 18:56:36 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-01-18 18:56:36 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-01-18 18:56:36 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-18 18:56:36 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-18 18:56:36 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-01-18 18:56:36 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-01-18 18:56:36 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4bd51d3e
2021-01-18 18:56:36 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 6f9d28bd-894e-40db-acb6-10546c58f5b7 (<unnamed>)
2021-01-18 18:56:36 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-01-18 18:56:36 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-01-18 18:56:36 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:36 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:36 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:36 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:36 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:36 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
2021-01-18 18:56:36 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@28f4f300
2021-01-18 18:56:36 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0
2021-01-18 18:56:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:36 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'project'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-01-18 18:56:36 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 18:56:36 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.User (generatedAlias0) -> user0_
2021-01-18 18:56:36 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> user0_.user_id
2021-01-18 18:56:36 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 18:56:36 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} Users user0_ ) )
2021-01-18 18:56:36 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [Users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-01-18 18:56:36 DEBUG JoinProcessor:304 - Using FROM fragment [Users user0_]
2021-01-18 18:56:36 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 18:56:36 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_3_' {alias=generatedAlias0, className=com.project.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.project.model.User}}

2021-01-18 18:56:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:36 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0
2021-01-18 18:56:36 DEBUG QueryTranslatorImpl:259 - SQL: select user0_.user_id as user_id1_3_, user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_ from Users user0_
2021-01-18 18:56:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:36 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_,
        user0_.email as email2_3_,
        user0_.firstname as firstnam3_3_,
        user0_.lastname as lastname4_3_,
        user0_.password as password5_3_,
        user0_.profile_picture as profile_6_3_,
        user0_.password_salt as password7_3_,
        user0_.username as username8_3_ 
    from
        Users user0_
2021-01-18 18:56:36 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:56:36 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#1]
2021-01-18 18:56:36 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:56:36 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#2]
2021-01-18 18:56:36 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:56:36 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#3]
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:56:36 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:36 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:56:36 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:56:36 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2021-01-18 18:56:36 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:56:36 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:56:36 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:56:36 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:56:36 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:56:36 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:36 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:36 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:36 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:36 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:36 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.email=:param0
2021-01-18 18:56:36 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0 where generatedAlias0.email=:param0
2021-01-18 18:56:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:36 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'project'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2021-01-18 18:56:36 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 18:56:36 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.User (generatedAlias0) -> user0_
2021-01-18 18:56:36 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> user0_.user_id
2021-01-18 18:56:36 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> user0_.user_id
2021-01-18 18:56:36 DEBUG DotNode:695 - getDataType() : email -> org.hibernate.type.StringType@3e6104fc
2021-01-18 18:56:36 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.email -> user0_.email
2021-01-18 18:56:36 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 18:56:36 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} Users user0_ ) ( where ( = ( user0_.email user0_.user_id email ) ? ) ) )
2021-01-18 18:56:36 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [Users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.project.model.User)
          | path: generatedAlias0.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.project.model.User)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

2021-01-18 18:56:36 DEBUG JoinProcessor:304 - Using FROM fragment [Users user0_]
2021-01-18 18:56:36 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 18:56:36 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_3_' {alias=generatedAlias0, className=com.project.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.project.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=user0_,className=com.project.model.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=com.project.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@3e6104fc}

2021-01-18 18:56:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:36 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0 where generatedAlias0.email=:param0
2021-01-18 18:56:36 DEBUG QueryTranslatorImpl:259 - SQL: select user0_.user_id as user_id1_3_, user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_ from Users user0_ where user0_.email=?
2021-01-18 18:56:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:36 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_,
        user0_.email as email2_3_,
        user0_.firstname as firstnam3_3_,
        user0_.lastname as lastname4_3_,
        user0_.password as password5_3_,
        user0_.profile_picture as profile_6_3_,
        user0_.password_salt as password7_3_,
        user0_.username as username8_3_ 
    from
        Users user0_ 
    where
        user0_.email=?
2021-01-18 18:56:36 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:56:36 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#1]
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:56:36 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:36 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:56:36 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:56:36 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-01-18 18:56:36 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:56:36 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:56:36 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-18 18:56:36 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:36 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:36 DEBUG QueryTranslatorImpl:292 - parse() - HQL: update com.project.model.User as generatedAlias0 set generatedAlias0.email = :param0 where generatedAlias0.userId=1
2021-01-18 18:56:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:36 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  \-[IDENT] Node: 'project'
    |     |  |  \-[IDENT] Node: 'model'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'generatedAlias0'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias0'
    |     |  \-[IDENT] Node: 'email'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'userId'
          \-[NUM_INT] Node: '1'

2021-01-18 18:56:36 DEBUG HqlSqlBaseWalker:124 - update << begin [level=1, statement=update]
2021-01-18 18:56:36 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.User (generatedAlias0) -> user0_
2021-01-18 18:56:36 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> user_id
2021-01-18 18:56:36 DEBUG DotNode:695 - getDataType() : email -> org.hibernate.type.StringType@3e6104fc
2021-01-18 18:56:36 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.email -> email
2021-01-18 18:56:36 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> user_id
2021-01-18 18:56:36 DEBUG DotNode:695 - getDataType() : userId -> org.hibernate.type.IntegerType@36060e
2021-01-18 18:56:36 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.userId -> user_id
2021-01-18 18:56:36 DEBUG HqlSqlBaseWalker:128 - update : finishing up [level=1, statement=update]
2021-01-18 18:56:36 DEBUG HqlSqlBaseWalker:132 - update >> end [level=1, statement=update]
2021-01-18 18:56:36 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Users)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Users' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.project.model.User}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=user0_,className=com.project.model.User,classAlias=generatedAlias0}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=generatedAlias0, className=com.project.model.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'email' {originalText=email}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@3e6104fc}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=generatedAlias0.userId,tableAlias=user0_,className=com.project.model.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=generatedAlias0, className=com.project.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          \-[NUM_INT] LiteralNode: '1'

2021-01-18 18:56:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:36 DEBUG SQL:144 - 
    update
        Users 
    set
        email=? 
    where
        user_id=1
2021-01-18 18:56:36 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:36 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:36 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:36 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userId=1
2021-01-18 18:56:36 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0 where generatedAlias0.userId=1
2021-01-18 18:56:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:36 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'project'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'userId'
          \-[NUM_INT] Node: '1'

2021-01-18 18:56:36 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 18:56:36 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.User (generatedAlias0) -> user0_
2021-01-18 18:56:36 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> user0_.user_id
2021-01-18 18:56:36 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> user0_.user_id
2021-01-18 18:56:36 DEBUG DotNode:695 - getDataType() : userId -> org.hibernate.type.IntegerType@36060e
2021-01-18 18:56:36 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.userId -> user0_.user_id
2021-01-18 18:56:36 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 18:56:36 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} Users user0_ ) ( where ( = ( user0_.user_id user0_.user_id userId ) 1 ) ) )
2021-01-18 18:56:36 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [Users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.project.model.User)
          | path: generatedAlias0.userId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.project.model.User)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: userId
          \-LiteralNode

2021-01-18 18:56:36 DEBUG JoinProcessor:304 - Using FROM fragment [Users user0_]
2021-01-18 18:56:36 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 18:56:36 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_3_' {alias=generatedAlias0, className=com.project.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.project.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=generatedAlias0.userId,tableAlias=user0_,className=com.project.model.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=com.project.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          \-[NUM_INT] LiteralNode: '1'

2021-01-18 18:56:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:36 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0 where generatedAlias0.userId=1
2021-01-18 18:56:36 DEBUG QueryTranslatorImpl:259 - SQL: select user0_.user_id as user_id1_3_, user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_ from Users user0_ where user0_.user_id=1
2021-01-18 18:56:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 18:56:36 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_,
        user0_.email as email2_3_,
        user0_.firstname as firstnam3_3_,
        user0_.lastname as lastname4_3_,
        user0_.password as password5_3_,
        user0_.profile_picture as profile_6_3_,
        user0_.password_salt as password7_3_,
        user0_.username as username8_3_ 
    from
        Users user0_ 
    where
        user0_.user_id=1
2021-01-18 18:56:36 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:56:36 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#1]
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = jshan@mail.com
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:56:36 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:36 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:56:36 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:56:36 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-01-18 18:56:36 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:56:36 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:56:36 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=jshan@mail.com, username=jshan}
2021-01-18 18:56:36 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:36 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:36 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:36 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:36 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:36 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
2021-01-18 18:56:36 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_,
        user0_.email as email2_3_,
        user0_.firstname as firstnam3_3_,
        user0_.lastname as lastname4_3_,
        user0_.password as password5_3_,
        user0_.profile_picture as profile_6_3_,
        user0_.password_salt as password7_3_,
        user0_.username as username8_3_ 
    from
        Users user0_
2021-01-18 18:56:36 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:56:36 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#1]
2021-01-18 18:56:36 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:56:36 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#2]
2021-01-18 18:56:36 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:56:36 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#3]
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = jshan@mail.com
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:36 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:56:36 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:36 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:56:36 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:56:36 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2021-01-18 18:56:36 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:56:36 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:56:36 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:56:36 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=jshan@mail.com, username=jshan}
2021-01-18 18:56:36 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:56:37 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:37 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:37 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-01-18 18:56:37 DEBUG SQL:144 - 
    insert 
    into
        Users
        (user_id, email, firstname, lastname, password, profile_picture, password_salt, username) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
2021-01-18 18:56:37 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 6
2021-01-18 18:56:37 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-01-18 18:56:37 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:37 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:56:37 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:56:37 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-01-18 18:56:37 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:56:37 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:56:37 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Trevin, lastName=Chester, profilePicture=null, password=pass, salt=tsalt, userId=6, email=t@mail.com, username=t}
2021-01-18 18:56:37 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:37 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:37 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
2021-01-18 18:56:37 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_,
        user0_.email as email2_3_,
        user0_.firstname as firstnam3_3_,
        user0_.lastname as lastname4_3_,
        user0_.password as password5_3_,
        user0_.profile_picture as profile_6_3_,
        user0_.password_salt as password7_3_,
        user0_.username as username8_3_ 
    from
        Users user0_
2021-01-18 18:56:37 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:56:37 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#1]
2021-01-18 18:56:37 DEBUG Loader:384 - Result set row: 1
2021-01-18 18:56:37 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#2]
2021-01-18 18:56:37 DEBUG Loader:384 - Result set row: 2
2021-01-18 18:56:37 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#3]
2021-01-18 18:56:37 DEBUG Loader:384 - Result set row: 3
2021-01-18 18:56:37 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#6]
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = jshan@mail.com
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#6]
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = t@mail.com
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Trevin
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Chester
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = pass
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = tsalt
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = t
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#6]
2021-01-18 18:56:37 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:37 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:56:37 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:56:37 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2021-01-18 18:56:37 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:56:37 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:56:37 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Trevin, lastName=Chester, profilePicture=null, password=pass, salt=tsalt, userId=6, email=t@mail.com, username=t}
2021-01-18 18:56:37 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 18:56:37 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=jshan@mail.com, username=jshan}
2021-01-18 18:56:37 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:56:37 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:37 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:37 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:37 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:37 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:37 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.email=:param0
2021-01-18 18:56:37 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_,
        user0_.email as email2_3_,
        user0_.firstname as firstnam3_3_,
        user0_.lastname as lastname4_3_,
        user0_.password as password5_3_,
        user0_.profile_picture as profile_6_3_,
        user0_.password_salt as password7_3_,
        user0_.username as username8_3_ 
    from
        Users user0_ 
    where
        user0_.email=?
2021-01-18 18:56:37 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:56:37 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#2]
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-18 18:56:37 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:37 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:56:37 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:56:37 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-01-18 18:56:37 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:56:37 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:56:37 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-18 18:56:37 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 18:56:37 DEBUG TransactionImpl:81 - begin
2021-01-18 18:56:37 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.email=:param0
2021-01-18 18:56:37 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_,
        user0_.email as email2_3_,
        user0_.firstname as firstnam3_3_,
        user0_.lastname as lastname4_3_,
        user0_.password as password5_3_,
        user0_.profile_picture as profile_6_3_,
        user0_.password_salt as password7_3_,
        user0_.username as username8_3_ 
    from
        Users user0_ 
    where
        user0_.email=?
2021-01-18 18:56:37 DEBUG Loader:384 - Result set row: 0
2021-01-18 18:56:37 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#3]
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-18 18:56:37 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-18 18:56:37 DEBUG TransactionImpl:98 - committing
2021-01-18 18:56:37 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-18 18:56:37 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-18 18:56:37 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-01-18 18:56:37 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-18 18:56:37 DEBUG EntityPrinter:110 - Listing entities:
2021-01-18 18:56:37 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-18 19:08:06 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-01-18 19:08:06 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-01-18 19:08:06 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-01-18 19:08:06 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-01-18 19:08:06 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.25.Final
2021-01-18 19:08:06 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-01-18 19:08:06 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-01-18 19:08:06 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-01-18 19:08:06 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-01-18 19:08:06 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-01-18 19:08:06 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-01-18 19:08:06 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@64f3ca6
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@64f3ca6
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@64f3ca6
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@63187d63
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6e239337
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@300bb303
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48cf8414
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@48cf8414
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@48cf8414
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@752973de
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@752973de
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@752973de
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@67afe909
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@67afe909
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@67afe909
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@60fc7f43
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@60fc7f43
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@60fc7f43
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@6d17914a
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@6d17914a
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6d17914a
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@612af486
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@612af486
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@612af486
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@1cc41b77
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@1cc41b77
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1cc41b77
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3d1c52f5
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3d1c52f5
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2037f12b
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2037f12b
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@33a47707
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@33a47707
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5ab7ac02
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6d7b2319
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@5e24592e
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5e24592e
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@26ffd2c0
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@26ffd2c0
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@994544
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@994544
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1b475663
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1b475663
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@699e0bf0
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@699e0bf0
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@58e03769
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@58e03769
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e2cdc51
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e2cdc51
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2d24cdd9
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2d24cdd9
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ce9771c
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6ce9771c
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@36f6d25c
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@36f6d25c
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@1da75dde
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1da75dde
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7d522180
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7d522180
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7d522180
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5f935d49
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@9c0d0bd
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@9c0d0bd
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@9c0d0bd
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@316d30ad
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@41ece227
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@12209826
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@12209826
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@4bfa5eb9
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4bfa5eb9
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6e321d9d
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6e321d9d
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@3cd46491
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3cd46491
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2c0798bd
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2c0798bd
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@671d97bc
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@1a10c47e
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@1a10c47e
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@1a10c47e
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@674184d
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@674184d
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@674184d
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@4a2e1e52
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@1d2def55
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@15d88c10
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@15d88c10
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@15d88c10
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5beb6be2
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5beb6be2
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5beb6be2
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@31c7c281
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4b544732
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@16c5b50a
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@16c5b50a
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3b4bd341
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@42cc5460
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42cc5460
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@67941d
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@67941d
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7114e780
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6eabe718
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@73b74615
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@7d64a960
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7d64a960
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@542c65d9
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@cdbe995
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7dd45c93
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@374b6e33
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7ed7ae
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@53ba1175
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@cd5ff55
2021-01-18 19:08:06 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6003220a
2021-01-18 19:08:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-01-18 19:08:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-01-18 19:08:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-01-18 19:08:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-01-18 19:08:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-01-18 19:08:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-01-18 19:08:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-01-18 19:08:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-01-18 19:08:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-01-18 19:08:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-01-18 19:08:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-01-18 19:08:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-01-18 19:08:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-01-18 19:08:06 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-01-18 19:08:07 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.4
      major : 12
      minor : 4
2021-01-18 19:08:07 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.14
      major : 42
      minor : 2
2021-01-18 19:08:07 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-01-18 19:08:07 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2021-01-18 19:08:07 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-01-18 19:08:08 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-01-18 19:08:08 DEBUG BasicTypeRegistry:157 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@3350ab4
2021-01-18 19:08:08 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@3350ab4
2021-01-18 19:08:08 DEBUG BasicTypeRegistry:160 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2c0798bd
2021-01-18 19:08:08 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@19f497aa] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@36a58466]
2021-01-18 19:08:08 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.Like
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 19:08:08 DEBUG EntityBinder:430 - Import with entity name Like
2021-01-18 19:08:08 DEBUG EntityBinder:873 - Bind entity com.project.model.Like on table Likes
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=like_id, insertable=true, updatable=true, unique=false}
2021-01-18 19:08:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-18 19:08:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-18 19:08:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property likeId with lazy=false
2021-01-18 19:08:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Like:likeId]
2021-01-18 19:08:08 DEBUG SimpleValueBinder:410 - building SimpleValue for likeId
2021-01-18 19:08:08 DEBUG PropertyBinder:266 - Building property likeId
2021-01-18 19:08:08 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(like_id)]), likeId, identity, , ...)
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id_fk', referencedColumn='post_id', mappedBy=''}
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=post, insertable=true, updatable=true, unique=false}
2021-01-18 19:08:08 DEBUG PropertyBinder:266 - Building property post
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id_fk', referencedColumn='user_id', mappedBy=''}
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-01-18 19:08:08 DEBUG PropertyBinder:266 - Building property user
2021-01-18 19:08:08 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.PasswordResetToken
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 19:08:08 DEBUG EntityBinder:430 - Import with entity name PasswordResetToken
2021-01-18 19:08:08 DEBUG EntityBinder:873 - Bind entity com.project.model.PasswordResetToken on table PasswordResetToken
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-01-18 19:08:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-18 19:08:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-18 19:08:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-01-18 19:08:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:id]
2021-01-18 19:08:08 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-01-18 19:08:08 DEBUG PropertyBinder:266 - Building property id
2021-01-18 19:08:08 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=expiryDate, insertable=true, updatable=true, unique=false}
2021-01-18 19:08:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expiryDate with lazy=false
2021-01-18 19:08:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:expiryDate]
2021-01-18 19:08:08 DEBUG SimpleValueBinder:410 - building SimpleValue for expiryDate
2021-01-18 19:08:08 DEBUG PropertyBinder:266 - Building property expiryDate
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=token, insertable=true, updatable=true, unique=false}
2021-01-18 19:08:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property token with lazy=false
2021-01-18 19:08:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:token]
2021-01-18 19:08:08 DEBUG SimpleValueBinder:410 - building SimpleValue for token
2021-01-18 19:08:08 DEBUG PropertyBinder:266 - Building property token
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-01-18 19:08:08 DEBUG PropertyBinder:266 - Building property user
2021-01-18 19:08:08 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.Post
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 19:08:08 DEBUG EntityBinder:430 - Import with entity name Post
2021-01-18 19:08:08 DEBUG EntityBinder:873 - Bind entity com.project.model.Post on table Posts
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-01-18 19:08:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-18 19:08:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-18 19:08:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-01-18 19:08:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postId]
2021-01-18 19:08:08 DEBUG SimpleValueBinder:410 - building SimpleValue for postId
2021-01-18 19:08:08 DEBUG PropertyBinder:266 - Building property postId
2021-01-18 19:08:08 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id_fk', referencedColumn='user_id', mappedBy=''}
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=author, insertable=true, updatable=true, unique=false}
2021-01-18 19:08:08 DEBUG PropertyBinder:266 - Building property author
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_picture, insertable=true, updatable=true, unique=false}
2021-01-18 19:08:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postPicture with lazy=false
2021-01-18 19:08:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postPicture]
2021-01-18 19:08:08 DEBUG SimpleValueBinder:410 - building SimpleValue for postPicture
2021-01-18 19:08:08 DEBUG PropertyBinder:266 - Building property postPicture
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_text, insertable=true, updatable=true, unique=false}
2021-01-18 19:08:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postText with lazy=false
2021-01-18 19:08:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postText]
2021-01-18 19:08:08 DEBUG SimpleValueBinder:410 - building SimpleValue for postText
2021-01-18 19:08:08 DEBUG PropertyBinder:266 - Building property postText
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=timestamp, insertable=true, updatable=true, unique=false}
2021-01-18 19:08:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property timestamp with lazy=false
2021-01-18 19:08:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:timestamp]
2021-01-18 19:08:08 DEBUG SimpleValueBinder:410 - building SimpleValue for timestamp
2021-01-18 19:08:08 DEBUG PropertyBinder:266 - Building property timestamp
2021-01-18 19:08:08 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.User
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-18 19:08:08 DEBUG EntityBinder:430 - Import with entity name User
2021-01-18 19:08:08 DEBUG EntityBinder:873 - Bind entity com.project.model.User on table Users
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-01-18 19:08:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-18 19:08:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-18 19:08:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-01-18 19:08:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:userId]
2021-01-18 19:08:08 DEBUG SimpleValueBinder:410 - building SimpleValue for userId
2021-01-18 19:08:08 DEBUG PropertyBinder:266 - Building property userId
2021-01-18 19:08:08 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, identity, , ...)
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-01-18 19:08:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-01-18 19:08:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:email]
2021-01-18 19:08:08 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-01-18 19:08:08 DEBUG PropertyBinder:266 - Building property email
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
2021-01-18 19:08:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-01-18 19:08:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:firstName]
2021-01-18 19:08:08 DEBUG SimpleValueBinder:410 - building SimpleValue for firstName
2021-01-18 19:08:08 DEBUG PropertyBinder:266 - Building property firstName
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
2021-01-18 19:08:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-01-18 19:08:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:lastName]
2021-01-18 19:08:08 DEBUG SimpleValueBinder:410 - building SimpleValue for lastName
2021-01-18 19:08:08 DEBUG PropertyBinder:266 - Building property lastName
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-01-18 19:08:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-01-18 19:08:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:password]
2021-01-18 19:08:08 DEBUG SimpleValueBinder:410 - building SimpleValue for password
2021-01-18 19:08:08 DEBUG PropertyBinder:266 - Building property password
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=profile_picture, insertable=true, updatable=true, unique=false}
2021-01-18 19:08:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property profilePicture with lazy=false
2021-01-18 19:08:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:profilePicture]
2021-01-18 19:08:08 DEBUG SimpleValueBinder:410 - building SimpleValue for profilePicture
2021-01-18 19:08:08 DEBUG PropertyBinder:266 - Building property profilePicture
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=password_salt, insertable=true, updatable=true, unique=false}
2021-01-18 19:08:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property salt with lazy=false
2021-01-18 19:08:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:salt]
2021-01-18 19:08:08 DEBUG SimpleValueBinder:410 - building SimpleValue for salt
2021-01-18 19:08:08 DEBUG PropertyBinder:266 - Building property salt
2021-01-18 19:08:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-01-18 19:08:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-01-18 19:08:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:username]
2021-01-18 19:08:08 DEBUG SimpleValueBinder:410 - building SimpleValue for username
2021-01-18 19:08:08 DEBUG PropertyBinder:266 - Building property username
2021-01-18 19:08:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for likeId
2021-01-18 19:08:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-01-18 19:08:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expiryDate
2021-01-18 19:08:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for token
2021-01-18 19:08:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postId
2021-01-18 19:08:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postPicture
2021-01-18 19:08:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postText
2021-01-18 19:08:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for timestamp
2021-01-18 19:08:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userId
2021-01-18 19:08:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-01-18 19:08:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for firstName
2021-01-18 19:08:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lastName
2021-01-18 19:08:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for password
2021-01-18 19:08:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for profilePicture
2021-01-18 19:08:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for salt
2021-01-18 19:08:08 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for username
2021-01-18 19:08:08 DEBUG PrimaryKey:35 - Forcing column [like_id] to be non-null as it is part of the primary key for table [likes]
2021-01-18 19:08:08 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [passwordresettoken]
2021-01-18 19:08:08 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-01-18 19:08:08 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-01-18 19:08:08 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.Post
2021-01-18 19:08:08 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 19:08:08 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 19:08:08 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 19:08:08 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.Post
2021-01-18 19:08:08 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 19:08:08 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 19:08:08 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-18 19:08:08 DEBUG SessionFactoryImpl:203 - Building session factory
2021-01-18 19:08:08 DEBUG Settings:68 - SessionFactory name : null
2021-01-18 19:08:08 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-01-18 19:08:08 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-01-18 19:08:08 DEBUG Settings:72 - Statistics: disabled
2021-01-18 19:08:08 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-01-18 19:08:08 DEBUG Settings:75 - Default entity-mode: pojo
2021-01-18 19:08:08 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-01-18 19:08:08 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-01-18 19:08:08 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-01-18 19:08:08 DEBUG Settings:80 - Default batch fetch size: -1
2021-01-18 19:08:08 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-01-18 19:08:08 DEBUG Settings:82 - Default null ordering: NONE
2021-01-18 19:08:08 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-01-18 19:08:08 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-01-18 19:08:08 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-01-18 19:08:08 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-01-18 19:08:08 DEBUG Settings:90 - Query language substitutions: {}
2021-01-18 19:08:08 DEBUG Settings:91 - Named query checking : enabled
2021-01-18 19:08:08 DEBUG Settings:93 - Second-level cache: disabled
2021-01-18 19:08:08 DEBUG Settings:94 - Second-level query cache: disabled
2021-01-18 19:08:08 DEBUG Settings:95 - Second-level query cache factory: null
2021-01-18 19:08:08 DEBUG Settings:96 - Second-level cache region prefix: null
2021-01-18 19:08:08 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-01-18 19:08:08 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-01-18 19:08:08 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-01-18 19:08:08 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-01-18 19:08:08 DEBUG Settings:102 - JDBC batch size: 15
2021-01-18 19:08:08 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-01-18 19:08:08 DEBUG Settings:104 - Scrollable result sets: enabled
2021-01-18 19:08:08 DEBUG Settings:105 - Wrap result sets: disabled
2021-01-18 19:08:08 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-01-18 19:08:08 DEBUG Settings:107 - JDBC result set fetch size: null
2021-01-18 19:08:08 DEBUG Settings:108 - Connection release mode: ON_CLOSE
2021-01-18 19:08:08 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-01-18 19:08:08 DEBUG Settings:111 - JPA compliance - query : disabled
2021-01-18 19:08:08 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-01-18 19:08:08 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-01-18 19:08:08 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-01-18 19:08:08 DEBUG SessionFactoryImpl:258 - Session factory constructed with filter configurations : {}
2021-01-18 19:08:08 DEBUG SessionFactoryImpl:259 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@21698e5a, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2\target\classes;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\annotations-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ant.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ha.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ssi.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-storeconfig.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-tribes.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\ecj-4.17.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\el-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jasper-el.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jasper.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jaspic-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jsp-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\servlet-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-coyote.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-dbcp.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-cs.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-de.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-es.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-fr.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ja.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ko.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-pt-BR.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ru.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-zh-CN.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-jdbc.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-jni.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-util-scan.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-util.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-websocket.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\websocket-api.jar;C:\Users\david\.m2\repository\org\postgresql\postgresql\42.2.14\postgresql-42.2.14.jar;C:\Users\david\.m2\repository\org\hibernate\hibernate-core\5.4.25.Final\hibernate-core-5.4.25.Final.jar;C:\Users\david\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\david\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\david\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\david\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\david\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\david\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\david\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\david\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\david\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\david\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\david\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\david\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\david\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\david\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\david\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\david\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\david\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\david\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.5.Final\hibernate-validator-6.1.5.Final.jar;C:\Users\david\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\david\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.11.3\jackson-databind-2.11.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.3\jackson-annotations-2.11.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.3\jackson-core-2.11.3.jar;C:\Users\david\.m2\repository\org\springframework\spring-core\5.2.12.RELEASE\spring-core-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-jcl\5.2.12.RELEASE\spring-jcl-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-beans\5.2.12.RELEASE\spring-beans-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-context\5.2.12.RELEASE\spring-context-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-aop\5.2.12.RELEASE\spring-aop-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-expression\5.2.12.RELEASE\spring-expression-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-orm\5.2.12.RELEASE\spring-orm-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-jdbc\5.2.12.RELEASE\spring-jdbc-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-tx\5.2.12.RELEASE\spring-tx-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-webmvc\5.2.12.RELEASE\spring-webmvc-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-web\5.2.12.RELEASE\spring-web-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-context-support\5.2.12.RELEASE\spring-context-support-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\javax\mail\javax.mail-api\1.6.2\javax.mail-api-1.6.2.jar;C:\Users\david\.m2\repository\com\sun\mail\javax.mail\1.6.2\javax.mail-1.6.2.jar;C:\Users\david\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\david\.m2\repository\org\springframework\spring-aspects\5.2.12.RELEASE\spring-aspects-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\david\.m2\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;C:\Users\david\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-s3\1.11.327\aws-java-sdk-s3-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-kms\1.11.327\aws-java-sdk-kms-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-core\1.11.327\aws-java-sdk-core-1.11.327.jar;C:\Users\david\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\david\.m2\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;C:\Users\david\.m2\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;C:\Users\david\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\david\.m2\repository\software\amazon\ion\ion-java\1.0.2\ion-java-1.0.2.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-cbor\2.6.7\jackson-dataformat-cbor-2.6.7.jar;C:\Users\david\.m2\repository\joda-time\joda-time\2.8.1\joda-time-2.8.1.jar;C:\Users\david\.m2\repository\com\amazonaws\jmespath-java\1.11.327\jmespath-java-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-dynamodb\1.11.327\aws-java-sdk-dynamodb-1.11.327.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Los_Angeles, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_271\bin, sun.java.command=com.project.maindriver.MainDriver, sun.cpu.endian=little, user.home=C:\Users\david, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_271, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_271\lib\resources.jar;C:\Program Files\Java\jre1.8.0_271\lib\rt.jar;C:\Program Files\Java\jre1.8.0_271\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_271\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_271\lib\jce.jar;C:\Program Files\Java\jre1.8.0_271\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_271\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_271\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=david, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_271\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@73d16e93], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\david\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3dc2f14, java.library.path=C:\Program Files\Java\jre1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_271/bin/server;C:/Program Files/Java/jre1.8.0_271/bin;C:/Program Files/Java/jre1.8.0_271/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\ProgramData\chocolatey\bin;C:\ProgramData\nvm;C:\Program Files\nodejs;C:\Program Files\Microsoft VS Code\bin;D:\PuTTY\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Users\david\AppData\Local\Microsoft\WindowsApps;C:\sts-bundle\sts-3.9.13.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@1b7554d4, java.ext.dirs=C:\Program Files\Java\jre1.8.0_271\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-01-18 19:08:08 INFO  Version:21 - HV000001: Hibernate Validator 6.1.5.Final
2021-01-18 19:08:08 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-01-18 19:08:08 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-01-18 19:08:08 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-01-18 19:08:08 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-01-18 19:08:08 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-01-18 19:08:08 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-01-18 19:08:08 DEBUG ResourceBundleMessageInterpolator:172 - Loaded expression factory via original TCCL
2021-01-18 19:08:08 DEBUG ValidatorFactoryConfigurationHelper:300 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-01-18 19:08:08 DEBUG ValidatorFactoryConfigurationHelper:375 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-01-18 19:08:08 DEBUG ValidatorFactoryConfigurationHelper:376 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-01-18 19:08:08 DEBUG ValidatorFactoryConfigurationHelper:377 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-01-18 19:08:08 DEBUG ValidatorFactoryConfigurationHelper:378 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-01-18 19:08:08 DEBUG ValidatorFactoryConfigurationHelper:379 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-01-18 19:08:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-18 19:08:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-18 19:08:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-18 19:08:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-18 19:08:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-18 19:08:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-18 19:08:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-18 19:08:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-18 19:08:08 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-01-18 19:08:08 DEBUG SessionFactoryImpl:298 - Instantiated session factory
2021-01-18 19:08:08 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@19f497aa] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3bf26810]
2021-01-18 19:08:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-18 19:08:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-18 19:08:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-18 19:08:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-18 19:08:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-18 19:08:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-18 19:08:09 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-18 19:08:09 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.PasswordResetToken
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:3928 -  Version select: select id from PasswordResetToken where id =?
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select passwordre_.id, passwordre_.expiryDate as expiryda2_1_, passwordre_.token as token3_1_, passwordre_.user_id as user_id4_1_ from PasswordResetToken passwordre_ where passwordre_.id=?
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into PasswordResetToken (expiryDate, token, user_id, id) values (?, ?, ?, ?)
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:394 -  Update 0: update PasswordResetToken set expiryDate=?, token=?, user_id=? where id=?
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from PasswordResetToken where id=?
2021-01-18 19:08:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18ff753c]
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expiryDate
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : token
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-01-18 19:08:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75ac326f]
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.email
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.firstName
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.lastName
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.password
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.profilePicture
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.salt
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.username
2021-01-18 19:08:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 19:08:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 19:08:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.PasswordResetToken)
    - Returns
       - EntityReturnImpl(entity=com.project.model.PasswordResetToken, querySpaceUid=<gen:0>, path=com.project.model.PasswordResetToken)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:1>, path=com.project.model.PasswordResetToken.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.PasswordResetToken)
          - SQL table alias mapping - passwordre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_3_1_}

2021-01-18 19:08:09 DEBUG EntityLoader:129 - Static select for entity com.project.model.PasswordResetToken [NONE]: select passwordre0_.id as id1_1_0_, passwordre0_.expiryDate as expiryda2_1_0_, passwordre0_.token as token3_1_0_, passwordre0_.user_id as user_id4_1_0_, user1_.user_id as user_id1_3_1_, user1_.email as email2_3_1_, user1_.firstname as firstnam3_3_1_, user1_.lastname as lastname4_3_1_, user1_.password as password5_3_1_, user1_.profile_picture as profile_6_3_1_, user1_.password_salt as password7_3_1_, user1_.username as username8_3_1_ from PasswordResetToken passwordre0_ inner join Users user1_ on passwordre0_.user_id=user1_.user_id where passwordre0_.id=?
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.Like
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:3928 -  Version select: select like_id from Likes where like_id =?
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select like_.like_id, like_.post_id_fk as post_id_2_0_, like_.user_id_fk as user_id_3_0_ from Likes like_ where like_.like_id=?
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Likes (post_id_fk, user_id_fk, like_id) values (?, ?, ?)
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:394 -  Update 0: update Likes set post_id_fk=?, user_id_fk=? where like_id=?
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Likes where like_id=?
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Likes (post_id_fk, user_id_fk) values (?, ?)
2021-01-18 19:08:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cca2e9d]
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post
2021-01-18 19:08:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cefa0be]
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author
2021-01-18 19:08:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4850d66b]
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.email
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.firstName
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.lastName
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.password
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.profilePicture
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.salt
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.username
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.postPicture
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.postText
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.timestamp
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-01-18 19:08:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@102fd71d]
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.email
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.firstName
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.lastName
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.password
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.profilePicture
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.salt
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.username
2021-01-18 19:08:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 19:08:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 19:08:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.Like)
    - Returns
       - EntityReturnImpl(entity=com.project.model.Like, querySpaceUid=<gen:0>, path=com.project.model.Like)
          - EntityAttributeFetchImpl(entity=com.project.model.Post, querySpaceUid=<gen:1>, path=com.project.model.Like.post)
             - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:2>, path=com.project.model.Like.post.author)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:3>, path=com.project.model.Like.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.Like)
          - SQL table alias mapping - like0_
          - alias suffix - 0_
          - suffixed key columns - {like_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(post)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.project.model.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_3_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.project.model.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {user_id1_3_3_}

2021-01-18 19:08:09 DEBUG EntityLoader:129 - Static select for entity com.project.model.Like [NONE]: select like0_.like_id as like_id1_0_0_, like0_.post_id_fk as post_id_2_0_0_, like0_.user_id_fk as user_id_3_0_0_, post1_.post_id as post_id1_2_1_, post1_.user_id_fk as user_id_5_2_1_, post1_.post_picture as post_pic2_2_1_, post1_.post_text as post_tex3_2_1_, post1_.timestamp as timestam4_2_1_, user2_.user_id as user_id1_3_2_, user2_.email as email2_3_2_, user2_.firstname as firstnam3_3_2_, user2_.lastname as lastname4_3_2_, user2_.password as password5_3_2_, user2_.profile_picture as profile_6_3_2_, user2_.password_salt as password7_3_2_, user2_.username as username8_3_2_, user3_.user_id as user_id1_3_3_, user3_.email as email2_3_3_, user3_.firstname as firstnam3_3_3_, user3_.lastname as lastname4_3_3_, user3_.password as password5_3_3_, user3_.profile_picture as profile_6_3_3_, user3_.password_salt as password7_3_3_, user3_.username as username8_3_3_ from Likes like0_ left outer join Posts post1_ on like0_.post_id_fk=post1_.post_id left outer join Users user2_ on post1_.user_id_fk=user2_.user_id left outer join Users user3_ on like0_.user_id_fk=user3_.user_id where like0_.like_id=?
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.User
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:3928 -  Version select: select user_id from Users where user_id =?
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select user_.user_id, user_.email as email2_3_, user_.firstname as firstnam3_3_, user_.lastname as lastname4_3_, user_.password as password5_3_, user_.profile_picture as profile_6_3_, user_.password_salt as password7_3_, user_.username as username8_3_ from Users user_ where user_.user_id=?
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Users (email, firstname, lastname, password, profile_picture, password_salt, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:394 -  Update 0: update Users set email=?, firstname=?, lastname=?, password=?, profile_picture=?, password_salt=?, username=? where user_id=?
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Users where user_id=?
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Users (email, firstname, lastname, password, profile_picture, password_salt, username) values (?, ?, ?, ?, ?, ?, ?)
2021-01-18 19:08:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@464d60fb]
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : profilePicture
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : salt
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-01-18 19:08:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 19:08:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 19:08:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.User)
    - Returns
       - EntityReturnImpl(entity=com.project.model.User, querySpaceUid=<gen:0>, path=com.project.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}

2021-01-18 19:08:09 DEBUG EntityLoader:129 - Static select for entity com.project.model.User [NONE]: select user0_.user_id as user_id1_3_0_, user0_.email as email2_3_0_, user0_.firstname as firstnam3_3_0_, user0_.lastname as lastname4_3_0_, user0_.password as password5_3_0_, user0_.profile_picture as profile_6_3_0_, user0_.password_salt as password7_3_0_, user0_.username as username8_3_0_ from Users user0_ where user0_.user_id=?
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.Post
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:3928 -  Version select: select post_id from Posts where post_id =?
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select post_.post_id, post_.user_id_fk as user_id_5_2_, post_.post_picture as post_pic2_2_, post_.post_text as post_tex3_2_, post_.timestamp as timestam4_2_ from Posts post_ where post_.post_id=?
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Posts (user_id_fk, post_picture, post_text, timestamp, post_id) values (?, ?, ?, ?, ?)
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:394 -  Update 0: update Posts set user_id_fk=?, post_picture=?, post_text=?, timestamp=? where post_id=?
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Posts where post_id=?
2021-01-18 19:08:09 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Posts (user_id_fk, post_picture, post_text, timestamp) values (?, ?, ?, ?)
2021-01-18 19:08:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a0ce342]
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author
2021-01-18 19:08:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fe38c0e]
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.email
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.firstName
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.lastName
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.password
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.profilePicture
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.salt
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.username
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postPicture
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postText
2021-01-18 19:08:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : timestamp
2021-01-18 19:08:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-18 19:08:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-18 19:08:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.Post)
    - Returns
       - EntityReturnImpl(entity=com.project.model.Post, querySpaceUid=<gen:0>, path=com.project.model.Post)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:1>, path=com.project.model.Post.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_3_1_}

2021-01-18 19:08:09 DEBUG EntityLoader:129 - Static select for entity com.project.model.Post [NONE]: select post0_.post_id as post_id1_2_0_, post0_.user_id_fk as user_id_5_2_0_, post0_.post_picture as post_pic2_2_0_, post0_.post_text as post_tex3_2_0_, post0_.timestamp as timestam4_2_0_, user1_.user_id as user_id1_3_1_, user1_.email as email2_3_1_, user1_.firstname as firstnam3_3_1_, user1_.lastname as lastname4_3_1_, user1_.password as password5_3_1_, user1_.profile_picture as profile_6_3_1_, user1_.password_salt as password7_3_1_, user1_.username as username8_3_1_ from Posts post0_ left outer join Users user1_ on post0_.user_id_fk=user1_.user_id where post0_.post_id=?
2021-01-18 19:08:09 DEBUG SQL:144 - 
    
    alter table Likes 
       drop constraint FKsgiuhjmogswsfkd01syvnd1uc
2021-01-18 19:08:09 DEBUG SQL:144 - 
    
    alter table Likes 
       drop constraint FK10tjjddvctvy7e5mim2in6icy
2021-01-18 19:08:10 DEBUG SQL:144 - 
    
    alter table PasswordResetToken 
       drop constraint FKpr3o3kx11ack418b2doprb9rl
2021-01-18 19:08:10 DEBUG SQL:144 - 
    
    alter table Posts 
       drop constraint FKq5d7uyu4hr67yrr645katvulo
2021-01-18 19:08:10 DEBUG SQL:144 - 
    
    drop table if exists Likes cascade
2021-01-18 19:08:10 DEBUG SQL:144 - 
    
    drop table if exists PasswordResetToken cascade
2021-01-18 19:08:10 DEBUG SQL:144 - 
    
    drop table if exists Posts cascade
2021-01-18 19:08:10 DEBUG SQL:144 - 
    
    drop table if exists Users cascade
2021-01-18 19:08:10 DEBUG SQL:144 - 
    
    drop sequence if exists hibernate_sequence
2021-01-18 19:08:10 DEBUG SQL:144 - create sequence hibernate_sequence start 1 increment 1
2021-01-18 19:08:11 DEBUG SQL:144 - 
    
    create table Likes (
       like_id  serial not null,
        post_id_fk int4,
        user_id_fk int4,
        primary key (like_id)
    )
2021-01-18 19:08:11 DEBUG SQL:144 - 
    
    create table PasswordResetToken (
       id int8 not null,
        expiryDate timestamp,
        token varchar(255),
        user_id int4 not null,
        primary key (id)
    )
2021-01-18 19:08:11 DEBUG SQL:144 - 
    
    create table Posts (
       post_id  serial not null,
        post_picture varchar(255),
        post_text varchar(280) not null,
        timestamp timestamp not null,
        user_id_fk int4,
        primary key (post_id)
    )
2021-01-18 19:08:11 DEBUG SQL:144 - 
    
    create table Users (
       user_id  serial not null,
        email varchar(255) not null,
        firstname varchar(255) not null,
        lastname varchar(255) not null,
        password varchar(255) not null,
        profile_picture varchar(255),
        password_salt varchar(255) not null,
        username varchar(255) not null,
        primary key (user_id)
    )
2021-01-18 19:08:11 DEBUG SQL:144 - 
    
    alter table Users 
       add constraint UK_ncoa9bfasrql0x4nhmh1plxxy unique (email)
2021-01-18 19:08:11 DEBUG SQL:144 - 
    
    alter table Users 
       add constraint UK_23y4gd49ajvbqgl3psjsvhff6 unique (username)
2021-01-18 19:08:11 DEBUG SQL:144 - 
    
    alter table Likes 
       add constraint FKsgiuhjmogswsfkd01syvnd1uc 
       foreign key (post_id_fk) 
       references Posts
2021-01-18 19:08:11 DEBUG SQL:144 - 
    
    alter table Likes 
       add constraint FK10tjjddvctvy7e5mim2in6icy 
       foreign key (user_id_fk) 
       references Users
2021-01-18 19:08:11 DEBUG SQL:144 - 
    
    alter table PasswordResetToken 
       add constraint FKpr3o3kx11ack418b2doprb9rl 
       foreign key (user_id) 
       references Users
2021-01-18 19:08:11 DEBUG SQL:144 - 
    
    alter table Posts 
       add constraint FKq5d7uyu4hr67yrr645katvulo 
       foreign key (user_id_fk) 
       references Users
2021-01-18 19:08:11 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-01-18 19:08:11 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-01-18 19:08:11 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-18 19:08:11 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-18 19:08:11 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-01-18 19:08:11 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-01-18 19:08:11 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@51e1e058
2021-01-18 19:08:11 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 0a6d6ae0-8cd9-4b08-a8d0-a7a8c829c2a0 (<unnamed>)
2021-01-18 19:08:11 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-01-18 19:08:12 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-01-18 19:08:12 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 19:08:12 DEBUG TransactionImpl:81 - begin
2021-01-18 19:08:12 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
2021-01-18 19:08:12 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@1b96d447
2021-01-18 19:08:12 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0
2021-01-18 19:08:12 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 19:08:12 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'project'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-01-18 19:08:12 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 19:08:12 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.User (generatedAlias0) -> user0_
2021-01-18 19:08:12 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> user0_.user_id
2021-01-18 19:08:12 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 19:08:12 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} Users user0_ ) )
2021-01-18 19:08:12 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [Users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-01-18 19:08:12 DEBUG JoinProcessor:304 - Using FROM fragment [Users user0_]
2021-01-18 19:08:12 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 19:08:12 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_3_' {alias=generatedAlias0, className=com.project.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.project.model.User}}

2021-01-18 19:08:12 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 19:08:12 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0
2021-01-18 19:08:12 DEBUG QueryTranslatorImpl:259 - SQL: select user0_.user_id as user_id1_3_, user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_ from Users user0_
2021-01-18 19:08:12 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 19:08:12 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_,
        user0_.email as email2_3_,
        user0_.firstname as firstnam3_3_,
        user0_.lastname as lastname4_3_,
        user0_.password as password5_3_,
        user0_.profile_picture as profile_6_3_,
        user0_.password_salt as password7_3_,
        user0_.username as username8_3_ 
    from
        Users user0_
2021-01-18 19:08:12 DEBUG TransactionImpl:98 - committing
2021-01-18 19:08:12 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 19:08:12 DEBUG TransactionImpl:81 - begin
2021-01-18 19:08:13 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 19:08:13 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 19:08:13 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 19:08:13 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'project'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Post'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'timestamp'
       \-[DESCENDING] Node: 'desc'

2021-01-18 19:08:13 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 19:08:13 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Post (generatedAlias0) -> post0_
2021-01-18 19:08:13 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 19:08:13 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-18 19:08:13 DEBUG DotNode:695 - getDataType() : timestamp -> org.hibernate.type.LocalDateTimeType@1b475663
2021-01-18 19:08:13 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.timestamp -> post0_.timestamp
2021-01-18 19:08:13 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 19:08:13 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} post0_.post_id ) ( FromClause{level=1} Posts post0_ ) ( order ( post0_.timestamp post0_.post_id timestamp ) desc ) )
2021-01-18 19:08:13 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [Posts]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.Post)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-OrderByClause
       +-DotNode
       | persister: SingleTableEntityPersister(com.project.model.Post)
       | path: generatedAlias0.timestamp
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.project.model.Post)
       |  | originalText: generatedAlias0
       |  \-IdentNode
       |    persister: null
       |    originalText: timestamp
       \-SqlNode

2021-01-18 19:08:13 DEBUG JoinProcessor:304 - Using FROM fragment [Posts post0_]
2021-01-18 19:08:13 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 19:08:13 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Posts)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'post0_.post_id as post_id1_2_' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |  \-[SQL_TOKEN] SqlFragment: 'post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Posts post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Posts,tableAlias=post0_,origin=null,columns={,className=com.project.model.Post}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'post0_.timestamp' {propertyName=timestamp,dereferenceType=PRIMITIVE,getPropertyPath=timestamp,path=generatedAlias0.timestamp,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'post0_.post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
       |  \-[IDENT] IdentNode: 'timestamp' {originalText=timestamp}
       \-[DESCENDING] SqlNode: 'desc'

2021-01-18 19:08:13 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 19:08:13 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-18 19:08:13 DEBUG QueryTranslatorImpl:259 - SQL: select post0_.post_id as post_id1_2_, post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_ from Posts post0_ order by post0_.timestamp desc
2021-01-18 19:08:13 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 19:08:13 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    order by
        post0_.timestamp desc
2021-01-18 19:08:13 DEBUG TransactionImpl:98 - committing
2021-01-18 19:08:13 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-18 19:08:13 DEBUG TransactionImpl:81 - begin
2021-01-18 19:08:14 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Like as generatedAlias0
2021-01-18 19:08:14 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.Like as generatedAlias0
2021-01-18 19:08:14 DEBUG ErrorTracker:73 - Keyword  'Like' is being interpreted as an identifier due to: expecting IDENT, found 'Like'
2021-01-18 19:08:14 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 19:08:14 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'project'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[WEIRD_IDENT] Node: 'Like'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-01-18 19:08:14 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-18 19:08:14 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Like (generatedAlias0) -> like0_
2021-01-18 19:08:14 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> like0_.like_id
2021-01-18 19:08:14 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-18 19:08:14 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} like0_.like_id ) ( FromClause{level=1} Likes like0_ ) )
2021-01-18 19:08:14 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Like): [Likes]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.Like)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-01-18 19:08:14 DEBUG JoinProcessor:304 - Using FROM fragment [Likes like0_]
2021-01-18 19:08:14 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-18 19:08:14 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Likes)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'like0_.like_id as like_id1_0_' {alias=generatedAlias0, className=com.project.model.Like, tableAlias=like0_}
    |  \-[SQL_TOKEN] SqlFragment: 'like0_.post_id_fk as post_id_2_0_, like0_.user_id_fk as user_id_3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[like0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Likes like0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Likes,tableAlias=like0_,origin=null,columns={,className=com.project.model.Like}}

2021-01-18 19:08:14 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 19:08:14 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.Like as generatedAlias0
2021-01-18 19:08:14 DEBUG QueryTranslatorImpl:259 - SQL: select like0_.like_id as like_id1_0_, like0_.post_id_fk as post_id_2_0_, like0_.user_id_fk as user_id_3_0_ from Likes like0_
2021-01-18 19:08:14 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-18 19:08:14 DEBUG SQL:144 - 
    select
        like0_.like_id as like_id1_0_,
        like0_.post_id_fk as post_id_2_0_,
        like0_.user_id_fk as user_id_3_0_ 
    from
        Likes like0_
2021-01-18 19:08:14 DEBUG TransactionImpl:98 - committing
2021-01-19 10:23:43 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-01-19 10:23:43 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-01-19 10:23:43 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-01-19 10:23:43 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-01-19 10:23:43 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.25.Final
2021-01-19 10:23:43 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-01-19 10:23:43 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-01-19 10:23:43 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-01-19 10:23:43 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-01-19 10:23:43 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-01-19 10:23:43 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-01-19 10:23:43 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@600b9d27
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@600b9d27
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@600b9d27
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7922d892
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@71e9ebae
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@432038ec
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@35645047
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@35645047
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@35645047
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@5ddcc487
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@5ddcc487
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5ddcc487
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4671115f
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@4671115f
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4671115f
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@36060e
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@36060e
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@36060e
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@be68757
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@be68757
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@be68757
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@1f53a5dc
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@1f53a5dc
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1f53a5dc
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@c7ba306
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@c7ba306
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@c7ba306
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6c4980d3
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6c4980d3
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@38b27cdc
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@38b27cdc
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@3e6104fc
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@3e6104fc
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@479460a6
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5be46f9d
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@30c93896
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@30c93896
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@172b013
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@172b013
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@26ceffa8
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@26ceffa8
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@60129b9a
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@60129b9a
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@27216cd
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@27216cd
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6c2c1385
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6c2c1385
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@146dfe6
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@146dfe6
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6af9fcb2
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6af9fcb2
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@632ceb35
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@632ceb35
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@5ddf0d24
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5ddf0d24
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@141e5bef
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@141e5bef
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@c9d0d6
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c9d0d6
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c9d0d6
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@35432107
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@61544ae6
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@61544ae6
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@61544ae6
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5d066c7d
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1603cd68
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@66c92293
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@66c92293
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@1c33c17b
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1c33c17b
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@39de3d36
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@39de3d36
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@58326051
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@58326051
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@598bd2ba
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@598bd2ba
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f5991f6
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@2c07545f
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2c07545f
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@2c07545f
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@76f4b65
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@76f4b65
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@76f4b65
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@545b995e
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@41e68d87
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@45312be2
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@45312be2
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@45312be2
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@ab7395e
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@ab7395e
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@ab7395e
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@e70f13a
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@4b40f651
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@27eedb64
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@27eedb64
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2b76ff4e
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@1b84f475
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1b84f475
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@4331d187
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4331d187
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1608bcbd
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@b2c5e07
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@336f1079
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@27d4a09
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@27d4a09
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@740d2e78
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1c481ff2
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@72437d8d
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1b955cac
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@676cf48
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5a1de7fb
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@335b5620
2021-01-19 10:23:43 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@29a0cdb
2021-01-19 10:23:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-01-19 10:23:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-01-19 10:23:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-01-19 10:23:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-01-19 10:23:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-01-19 10:23:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-01-19 10:23:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-01-19 10:23:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-01-19 10:23:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-01-19 10:23:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-01-19 10:23:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-01-19 10:23:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-01-19 10:23:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-01-19 10:23:43 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-01-19 10:23:43 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
2021-01-19 10:23:43 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
2021-01-19 10:23:43 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.1
2021-01-19 10:23:43 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2021-01-19 10:23:43 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-01-19 10:23:43 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-01-19 10:23:43 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10c8f62] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@674c583e]
2021-01-19 10:23:43 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.Like
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-19 10:23:44 DEBUG EntityBinder:430 - Import with entity name Like
2021-01-19 10:23:44 DEBUG EntityBinder:873 - Bind entity com.project.model.Like on table Likes
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=like_id, insertable=true, updatable=true, unique=false}
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-19 10:23:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property likeId with lazy=false
2021-01-19 10:23:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Like:likeId]
2021-01-19 10:23:44 DEBUG SimpleValueBinder:410 - building SimpleValue for likeId
2021-01-19 10:23:44 DEBUG PropertyBinder:266 - Building property likeId
2021-01-19 10:23:44 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(like_id)]), likeId, identity, , ...)
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id_fk', referencedColumn='post_id', mappedBy=''}
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=post, insertable=true, updatable=true, unique=false}
2021-01-19 10:23:44 DEBUG PropertyBinder:266 - Building property post
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id_fk', referencedColumn='user_id', mappedBy=''}
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-01-19 10:23:44 DEBUG PropertyBinder:266 - Building property user
2021-01-19 10:23:44 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.PasswordResetToken
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-19 10:23:44 DEBUG EntityBinder:430 - Import with entity name PasswordResetToken
2021-01-19 10:23:44 DEBUG EntityBinder:873 - Bind entity com.project.model.PasswordResetToken on table PasswordResetToken
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-19 10:23:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-01-19 10:23:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:id]
2021-01-19 10:23:44 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-01-19 10:23:44 DEBUG PropertyBinder:266 - Building property id
2021-01-19 10:23:44 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=expiryDate, insertable=true, updatable=true, unique=false}
2021-01-19 10:23:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expiryDate with lazy=false
2021-01-19 10:23:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:expiryDate]
2021-01-19 10:23:44 DEBUG SimpleValueBinder:410 - building SimpleValue for expiryDate
2021-01-19 10:23:44 DEBUG PropertyBinder:266 - Building property expiryDate
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=token, insertable=true, updatable=true, unique=false}
2021-01-19 10:23:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property token with lazy=false
2021-01-19 10:23:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:token]
2021-01-19 10:23:44 DEBUG SimpleValueBinder:410 - building SimpleValue for token
2021-01-19 10:23:44 DEBUG PropertyBinder:266 - Building property token
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-01-19 10:23:44 DEBUG PropertyBinder:266 - Building property user
2021-01-19 10:23:44 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.Post
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-19 10:23:44 DEBUG EntityBinder:430 - Import with entity name Post
2021-01-19 10:23:44 DEBUG EntityBinder:873 - Bind entity com.project.model.Post on table Posts
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-19 10:23:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-01-19 10:23:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postId]
2021-01-19 10:23:44 DEBUG SimpleValueBinder:410 - building SimpleValue for postId
2021-01-19 10:23:44 DEBUG PropertyBinder:266 - Building property postId
2021-01-19 10:23:44 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id_fk', referencedColumn='user_id', mappedBy=''}
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=author, insertable=true, updatable=true, unique=false}
2021-01-19 10:23:44 DEBUG PropertyBinder:266 - Building property author
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_picture, insertable=true, updatable=true, unique=false}
2021-01-19 10:23:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postPicture with lazy=false
2021-01-19 10:23:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postPicture]
2021-01-19 10:23:44 DEBUG SimpleValueBinder:410 - building SimpleValue for postPicture
2021-01-19 10:23:44 DEBUG PropertyBinder:266 - Building property postPicture
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_text, insertable=true, updatable=true, unique=false}
2021-01-19 10:23:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postText with lazy=false
2021-01-19 10:23:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postText]
2021-01-19 10:23:44 DEBUG SimpleValueBinder:410 - building SimpleValue for postText
2021-01-19 10:23:44 DEBUG PropertyBinder:266 - Building property postText
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=timestamp, insertable=true, updatable=true, unique=false}
2021-01-19 10:23:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property timestamp with lazy=false
2021-01-19 10:23:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:timestamp]
2021-01-19 10:23:44 DEBUG SimpleValueBinder:410 - building SimpleValue for timestamp
2021-01-19 10:23:44 DEBUG PropertyBinder:266 - Building property timestamp
2021-01-19 10:23:44 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.User
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-19 10:23:44 DEBUG EntityBinder:430 - Import with entity name User
2021-01-19 10:23:44 DEBUG EntityBinder:873 - Bind entity com.project.model.User on table Users
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-19 10:23:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-01-19 10:23:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:userId]
2021-01-19 10:23:44 DEBUG SimpleValueBinder:410 - building SimpleValue for userId
2021-01-19 10:23:44 DEBUG PropertyBinder:266 - Building property userId
2021-01-19 10:23:44 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, identity, , ...)
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-01-19 10:23:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-01-19 10:23:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:email]
2021-01-19 10:23:44 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-01-19 10:23:44 DEBUG PropertyBinder:266 - Building property email
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
2021-01-19 10:23:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-01-19 10:23:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:firstName]
2021-01-19 10:23:44 DEBUG SimpleValueBinder:410 - building SimpleValue for firstName
2021-01-19 10:23:44 DEBUG PropertyBinder:266 - Building property firstName
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
2021-01-19 10:23:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-01-19 10:23:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:lastName]
2021-01-19 10:23:44 DEBUG SimpleValueBinder:410 - building SimpleValue for lastName
2021-01-19 10:23:44 DEBUG PropertyBinder:266 - Building property lastName
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-01-19 10:23:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-01-19 10:23:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:password]
2021-01-19 10:23:44 DEBUG SimpleValueBinder:410 - building SimpleValue for password
2021-01-19 10:23:44 DEBUG PropertyBinder:266 - Building property password
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=profile_picture, insertable=true, updatable=true, unique=false}
2021-01-19 10:23:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property profilePicture with lazy=false
2021-01-19 10:23:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:profilePicture]
2021-01-19 10:23:44 DEBUG SimpleValueBinder:410 - building SimpleValue for profilePicture
2021-01-19 10:23:44 DEBUG PropertyBinder:266 - Building property profilePicture
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=password_salt, insertable=true, updatable=true, unique=false}
2021-01-19 10:23:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property salt with lazy=false
2021-01-19 10:23:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:salt]
2021-01-19 10:23:44 DEBUG SimpleValueBinder:410 - building SimpleValue for salt
2021-01-19 10:23:44 DEBUG PropertyBinder:266 - Building property salt
2021-01-19 10:23:44 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-01-19 10:23:44 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-01-19 10:23:44 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:username]
2021-01-19 10:23:44 DEBUG SimpleValueBinder:410 - building SimpleValue for username
2021-01-19 10:23:44 DEBUG PropertyBinder:266 - Building property username
2021-01-19 10:23:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for likeId
2021-01-19 10:23:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-01-19 10:23:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expiryDate
2021-01-19 10:23:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for token
2021-01-19 10:23:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postId
2021-01-19 10:23:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postPicture
2021-01-19 10:23:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postText
2021-01-19 10:23:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for timestamp
2021-01-19 10:23:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userId
2021-01-19 10:23:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-01-19 10:23:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for firstName
2021-01-19 10:23:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lastName
2021-01-19 10:23:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for password
2021-01-19 10:23:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for profilePicture
2021-01-19 10:23:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for salt
2021-01-19 10:23:44 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for username
2021-01-19 10:23:44 DEBUG PrimaryKey:35 - Forcing column [like_id] to be non-null as it is part of the primary key for table [likes]
2021-01-19 10:23:44 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [passwordresettoken]
2021-01-19 10:23:44 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-01-19 10:23:44 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-01-19 10:23:44 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.Post
2021-01-19 10:23:44 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-19 10:23:44 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-19 10:23:44 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-19 10:23:44 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.Post
2021-01-19 10:23:44 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-19 10:23:44 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-19 10:23:44 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-19 10:23:44 DEBUG SessionFactoryImpl:203 - Building session factory
2021-01-19 10:23:44 DEBUG Settings:68 - SessionFactory name : null
2021-01-19 10:23:44 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-01-19 10:23:44 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-01-19 10:23:44 DEBUG Settings:72 - Statistics: disabled
2021-01-19 10:23:44 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-01-19 10:23:44 DEBUG Settings:75 - Default entity-mode: pojo
2021-01-19 10:23:44 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-01-19 10:23:44 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-01-19 10:23:44 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-01-19 10:23:44 DEBUG Settings:80 - Default batch fetch size: -1
2021-01-19 10:23:44 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-01-19 10:23:44 DEBUG Settings:82 - Default null ordering: NONE
2021-01-19 10:23:44 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-01-19 10:23:44 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-01-19 10:23:44 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-01-19 10:23:44 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-01-19 10:23:44 DEBUG Settings:90 - Query language substitutions: {}
2021-01-19 10:23:44 DEBUG Settings:91 - Named query checking : enabled
2021-01-19 10:23:44 DEBUG Settings:93 - Second-level cache: disabled
2021-01-19 10:23:44 DEBUG Settings:94 - Second-level query cache: disabled
2021-01-19 10:23:44 DEBUG Settings:95 - Second-level query cache factory: null
2021-01-19 10:23:44 DEBUG Settings:96 - Second-level cache region prefix: null
2021-01-19 10:23:44 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-01-19 10:23:44 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-01-19 10:23:44 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-01-19 10:23:44 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-01-19 10:23:44 DEBUG Settings:102 - JDBC batch size: 15
2021-01-19 10:23:44 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-01-19 10:23:44 DEBUG Settings:104 - Scrollable result sets: enabled
2021-01-19 10:23:44 DEBUG Settings:105 - Wrap result sets: disabled
2021-01-19 10:23:44 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-01-19 10:23:44 DEBUG Settings:107 - JDBC result set fetch size: null
2021-01-19 10:23:44 DEBUG Settings:108 - Connection release mode: ON_CLOSE
2021-01-19 10:23:44 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-01-19 10:23:44 DEBUG Settings:111 - JPA compliance - query : disabled
2021-01-19 10:23:44 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-01-19 10:23:44 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-01-19 10:23:44 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-01-19 10:23:44 DEBUG SessionFactoryImpl:258 - Session factory constructed with filter configurations : {}
2021-01-19 10:23:44 DEBUG SessionFactoryImpl:259 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3f4f9acd, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2\target\test-classes;C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2\target\classes;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\annotations-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ant.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ha.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ssi.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-storeconfig.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-tribes.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\ecj-4.17.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\el-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jasper-el.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jasper.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jaspic-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jsp-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\servlet-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-coyote.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-dbcp.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-cs.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-de.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-es.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-fr.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ja.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ko.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-pt-BR.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ru.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-zh-CN.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-jdbc.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-jni.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-util-scan.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-util.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-websocket.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\websocket-api.jar;C:\Users\david\.m2\repository\org\postgresql\postgresql\42.2.14\postgresql-42.2.14.jar;C:\Users\david\.m2\repository\org\hibernate\hibernate-core\5.4.25.Final\hibernate-core-5.4.25.Final.jar;C:\Users\david\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\david\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\david\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\david\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\david\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\david\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\david\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\david\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\david\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\david\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\david\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\david\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\david\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\david\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\david\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\david\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\david\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\david\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.5.Final\hibernate-validator-6.1.5.Final.jar;C:\Users\david\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\david\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\david\.m2\repository\junit\junit\4.13\junit-4.13.jar;C:\Users\david\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.11.3\jackson-databind-2.11.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.3\jackson-annotations-2.11.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.3\jackson-core-2.11.3.jar;C:\Users\david\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\david\.m2\repository\org\springframework\spring-core\5.2.12.RELEASE\spring-core-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-jcl\5.2.12.RELEASE\spring-jcl-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-beans\5.2.12.RELEASE\spring-beans-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-context\5.2.12.RELEASE\spring-context-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-aop\5.2.12.RELEASE\spring-aop-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-expression\5.2.12.RELEASE\spring-expression-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-orm\5.2.12.RELEASE\spring-orm-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-jdbc\5.2.12.RELEASE\spring-jdbc-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-tx\5.2.12.RELEASE\spring-tx-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-webmvc\5.2.12.RELEASE\spring-webmvc-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-web\5.2.12.RELEASE\spring-web-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-context-support\5.2.12.RELEASE\spring-context-support-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\javax\mail\javax.mail-api\1.6.2\javax.mail-api-1.6.2.jar;C:\Users\david\.m2\repository\com\sun\mail\javax.mail\1.6.2\javax.mail-1.6.2.jar;C:\Users\david\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\david\.m2\repository\org\springframework\spring-aspects\5.2.12.RELEASE\spring-aspects-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\david\.m2\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;C:\Users\david\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-s3\1.11.327\aws-java-sdk-s3-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-kms\1.11.327\aws-java-sdk-kms-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-core\1.11.327\aws-java-sdk-core-1.11.327.jar;C:\Users\david\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\david\.m2\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;C:\Users\david\.m2\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;C:\Users\david\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\david\.m2\repository\software\amazon\ion\ion-java\1.0.2\ion-java-1.0.2.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-cbor\2.6.7\jackson-dataformat-cbor-2.6.7.jar;C:\Users\david\.m2\repository\joda-time\joda-time\2.8.1\joda-time-2.8.1.jar;C:\Users\david\.m2\repository\com\amazonaws\jmespath-java\1.11.327\jmespath-java-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-dynamodb\1.11.327\aws-java-sdk-dynamodb-1.11.327.jar;C:\sts-bundle\sts-3.9.13.RELEASE\configuration\org.eclipse.osgi\311\0\.cp;C:\sts-bundle\sts-3.9.13.RELEASE\configuration\org.eclipse.osgi\310\0\.cp, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Los_Angeles, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_271\bin, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 49997 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.project.test.UserDaoTest, sun.cpu.endian=little, user.home=C:\Users\david, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_271, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_271\lib\resources.jar;C:\Program Files\Java\jre1.8.0_271\lib\rt.jar;C:\Program Files\Java\jre1.8.0_271\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_271\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_271\lib\jce.jar;C:\Program Files\Java\jre1.8.0_271\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_271\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_271\classes, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=david, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_271\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@3d494fbf], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\david\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@46baf579, java.library.path=C:\Program Files\Java\jre1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_271/bin/server;C:/Program Files/Java/jre1.8.0_271/bin;C:/Program Files/Java/jre1.8.0_271/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\ProgramData\chocolatey\bin;C:\ProgramData\nvm;C:\Program Files\nodejs;C:\Program Files\Microsoft VS Code\bin;D:\PuTTY\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Users\david\AppData\Local\Microsoft\WindowsApps;C:\sts-bundle\sts-3.9.13.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@4218d6a3, java.ext.dirs=C:\Program Files\Java\jre1.8.0_271\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-01-19 10:23:44 INFO  Version:21 - HV000001: Hibernate Validator 6.1.5.Final
2021-01-19 10:23:44 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-01-19 10:23:44 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-01-19 10:23:44 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-01-19 10:23:44 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-01-19 10:23:44 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-01-19 10:23:44 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-01-19 10:23:44 DEBUG ResourceBundleMessageInterpolator:172 - Loaded expression factory via original TCCL
2021-01-19 10:23:44 DEBUG ValidatorFactoryConfigurationHelper:300 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-01-19 10:23:44 DEBUG ValidatorFactoryConfigurationHelper:375 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-01-19 10:23:44 DEBUG ValidatorFactoryConfigurationHelper:376 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-01-19 10:23:44 DEBUG ValidatorFactoryConfigurationHelper:377 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-01-19 10:23:44 DEBUG ValidatorFactoryConfigurationHelper:378 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-01-19 10:23:44 DEBUG ValidatorFactoryConfigurationHelper:379 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-19 10:23:44 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-01-19 10:23:44 DEBUG SessionFactoryImpl:298 - Instantiated session factory
2021-01-19 10:23:44 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10c8f62] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@31133b6e]
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-19 10:23:44 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.PasswordResetToken
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:3928 -  Version select: select id from PasswordResetToken where id =?
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select passwordre_.id, passwordre_.expiryDate as expiryda2_1_, passwordre_.token as token3_1_, passwordre_.user_id as user_id4_1_ from PasswordResetToken passwordre_ where passwordre_.id=?
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into PasswordResetToken (expiryDate, token, user_id, id) values (?, ?, ?, ?)
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:394 -  Update 0: update PasswordResetToken set expiryDate=?, token=?, user_id=? where id=?
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from PasswordResetToken where id=?
2021-01-19 10:23:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3804a9a8]
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expiryDate
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : token
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-01-19 10:23:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68d7a2df]
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.email
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.firstName
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.lastName
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.password
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.profilePicture
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.salt
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.username
2021-01-19 10:23:44 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-19 10:23:44 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-19 10:23:44 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.PasswordResetToken)
    - Returns
       - EntityReturnImpl(entity=com.project.model.PasswordResetToken, querySpaceUid=<gen:0>, path=com.project.model.PasswordResetToken)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:1>, path=com.project.model.PasswordResetToken.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.PasswordResetToken)
          - SQL table alias mapping - passwordre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_3_1_}

2021-01-19 10:23:44 DEBUG EntityLoader:129 - Static select for entity com.project.model.PasswordResetToken [NONE]: select passwordre0_.id as id1_1_0_, passwordre0_.expiryDate as expiryda2_1_0_, passwordre0_.token as token3_1_0_, passwordre0_.user_id as user_id4_1_0_, user1_.user_id as user_id1_3_1_, user1_.email as email2_3_1_, user1_.firstname as firstnam3_3_1_, user1_.lastname as lastname4_3_1_, user1_.password as password5_3_1_, user1_.profile_picture as profile_6_3_1_, user1_.password_salt as password7_3_1_, user1_.username as username8_3_1_ from PasswordResetToken passwordre0_ inner join Users user1_ on passwordre0_.user_id=user1_.user_id where passwordre0_.id=?
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.Like
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:3928 -  Version select: select like_id from Likes where like_id =?
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select like_.like_id, like_.post_id_fk as post_id_2_0_, like_.user_id_fk as user_id_3_0_ from Likes like_ where like_.like_id=?
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Likes (post_id_fk, user_id_fk, like_id) values (?, ?, ?)
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:394 -  Update 0: update Likes set post_id_fk=?, user_id_fk=? where like_id=?
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Likes where like_id=?
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Likes (like_id, post_id_fk, user_id_fk) values (null, ?, ?)
2021-01-19 10:23:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a6fa56e]
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post
2021-01-19 10:23:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@118ffcfd]
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author
2021-01-19 10:23:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74174a23]
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.email
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.firstName
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.lastName
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.password
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.profilePicture
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.salt
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.username
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.postPicture
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.postText
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.timestamp
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-01-19 10:23:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dc4a691]
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.email
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.firstName
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.lastName
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.password
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.profilePicture
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.salt
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.username
2021-01-19 10:23:44 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-19 10:23:44 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-19 10:23:44 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.Like)
    - Returns
       - EntityReturnImpl(entity=com.project.model.Like, querySpaceUid=<gen:0>, path=com.project.model.Like)
          - EntityAttributeFetchImpl(entity=com.project.model.Post, querySpaceUid=<gen:1>, path=com.project.model.Like.post)
             - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:2>, path=com.project.model.Like.post.author)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:3>, path=com.project.model.Like.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.Like)
          - SQL table alias mapping - like0_
          - alias suffix - 0_
          - suffixed key columns - {like_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(post)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.project.model.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_3_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.project.model.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {user_id1_3_3_}

2021-01-19 10:23:44 DEBUG EntityLoader:129 - Static select for entity com.project.model.Like [NONE]: select like0_.like_id as like_id1_0_0_, like0_.post_id_fk as post_id_2_0_0_, like0_.user_id_fk as user_id_3_0_0_, post1_.post_id as post_id1_2_1_, post1_.user_id_fk as user_id_5_2_1_, post1_.post_picture as post_pic2_2_1_, post1_.post_text as post_tex3_2_1_, post1_.timestamp as timestam4_2_1_, user2_.user_id as user_id1_3_2_, user2_.email as email2_3_2_, user2_.firstname as firstnam3_3_2_, user2_.lastname as lastname4_3_2_, user2_.password as password5_3_2_, user2_.profile_picture as profile_6_3_2_, user2_.password_salt as password7_3_2_, user2_.username as username8_3_2_, user3_.user_id as user_id1_3_3_, user3_.email as email2_3_3_, user3_.firstname as firstnam3_3_3_, user3_.lastname as lastname4_3_3_, user3_.password as password5_3_3_, user3_.profile_picture as profile_6_3_3_, user3_.password_salt as password7_3_3_, user3_.username as username8_3_3_ from Likes like0_ left outer join Posts post1_ on like0_.post_id_fk=post1_.post_id left outer join Users user2_ on post1_.user_id_fk=user2_.user_id left outer join Users user3_ on like0_.user_id_fk=user3_.user_id where like0_.like_id=?
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.User
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:3928 -  Version select: select user_id from Users where user_id =?
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select user_.user_id, user_.email as email2_3_, user_.firstname as firstnam3_3_, user_.lastname as lastname4_3_, user_.password as password5_3_, user_.profile_picture as profile_6_3_, user_.password_salt as password7_3_, user_.username as username8_3_ from Users user_ where user_.user_id=?
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Users (email, firstname, lastname, password, profile_picture, password_salt, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:394 -  Update 0: update Users set email=?, firstname=?, lastname=?, password=?, profile_picture=?, password_salt=?, username=? where user_id=?
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Users where user_id=?
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Users (user_id, email, firstname, lastname, password, profile_picture, password_salt, username) values (null, ?, ?, ?, ?, ?, ?, ?)
2021-01-19 10:23:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36c2b646]
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : profilePicture
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : salt
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-01-19 10:23:44 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-19 10:23:44 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-19 10:23:44 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.User)
    - Returns
       - EntityReturnImpl(entity=com.project.model.User, querySpaceUid=<gen:0>, path=com.project.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}

2021-01-19 10:23:44 DEBUG EntityLoader:129 - Static select for entity com.project.model.User [NONE]: select user0_.user_id as user_id1_3_0_, user0_.email as email2_3_0_, user0_.firstname as firstnam3_3_0_, user0_.lastname as lastname4_3_0_, user0_.password as password5_3_0_, user0_.profile_picture as profile_6_3_0_, user0_.password_salt as password7_3_0_, user0_.username as username8_3_0_ from Users user0_ where user0_.user_id=?
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.Post
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:3928 -  Version select: select post_id from Posts where post_id =?
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select post_.post_id, post_.user_id_fk as user_id_5_2_, post_.post_picture as post_pic2_2_, post_.post_text as post_tex3_2_, post_.timestamp as timestam4_2_ from Posts post_ where post_.post_id=?
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Posts (user_id_fk, post_picture, post_text, timestamp, post_id) values (?, ?, ?, ?, ?)
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:394 -  Update 0: update Posts set user_id_fk=?, post_picture=?, post_text=?, timestamp=? where post_id=?
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Posts where post_id=?
2021-01-19 10:23:44 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Posts (post_id, user_id_fk, post_picture, post_text, timestamp) values (null, ?, ?, ?, ?)
2021-01-19 10:23:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b1dc20f]
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author
2021-01-19 10:23:44 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6540cf1d]
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.email
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.firstName
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.lastName
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.password
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.profilePicture
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.salt
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.username
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postPicture
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postText
2021-01-19 10:23:44 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : timestamp
2021-01-19 10:23:44 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-19 10:23:44 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-19 10:23:44 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.Post)
    - Returns
       - EntityReturnImpl(entity=com.project.model.Post, querySpaceUid=<gen:0>, path=com.project.model.Post)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:1>, path=com.project.model.Post.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_3_1_}

2021-01-19 10:23:44 DEBUG EntityLoader:129 - Static select for entity com.project.model.Post [NONE]: select post0_.post_id as post_id1_2_0_, post0_.user_id_fk as user_id_5_2_0_, post0_.post_picture as post_pic2_2_0_, post0_.post_text as post_tex3_2_0_, post0_.timestamp as timestam4_2_0_, user1_.user_id as user_id1_3_1_, user1_.email as email2_3_1_, user1_.firstname as firstnam3_3_1_, user1_.lastname as lastname4_3_1_, user1_.password as password5_3_1_, user1_.profile_picture as profile_6_3_1_, user1_.password_salt as password7_3_1_, user1_.username as username8_3_1_ from Posts post0_ left outer join Users user1_ on post0_.user_id_fk=user1_.user_id where post0_.post_id=?
2021-01-19 10:23:44 DEBUG SQL:144 - 
    
    drop table if exists Likes CASCADE 
2021-01-19 10:23:44 DEBUG SQL:144 - 
    
    drop table if exists PasswordResetToken CASCADE 
2021-01-19 10:23:44 DEBUG SQL:144 - 
    
    drop table if exists Posts CASCADE 
2021-01-19 10:23:44 DEBUG SQL:144 - 
    
    drop table if exists Users CASCADE 
2021-01-19 10:23:44 DEBUG SQL:144 - 
    
    drop sequence if exists hibernate_sequence
2021-01-19 10:23:44 DEBUG SQL:144 - create sequence hibernate_sequence start with 1 increment by 1
2021-01-19 10:23:44 DEBUG SQL:144 - 
    
    create table Likes (
       like_id integer generated by default as identity,
        post_id_fk integer,
        user_id_fk integer,
        primary key (like_id)
    )
2021-01-19 10:23:44 DEBUG SQL:144 - 
    
    create table PasswordResetToken (
       id bigint not null,
        expiryDate timestamp,
        token varchar(255),
        user_id integer not null,
        primary key (id)
    )
2021-01-19 10:23:44 DEBUG SQL:144 - 
    
    create table Posts (
       post_id integer generated by default as identity,
        post_picture varchar(255),
        post_text varchar(280) not null,
        timestamp timestamp not null,
        user_id_fk integer,
        primary key (post_id)
    )
2021-01-19 10:23:44 DEBUG SQL:144 - 
    
    create table Users (
       user_id integer generated by default as identity,
        email varchar(255) not null,
        firstname varchar(255) not null,
        lastname varchar(255) not null,
        password varchar(255) not null,
        profile_picture varchar(255),
        password_salt varchar(255) not null,
        username varchar(255) not null,
        primary key (user_id)
    )
2021-01-19 10:23:44 DEBUG SQL:144 - 
    
    alter table Users 
       add constraint UK_ncoa9bfasrql0x4nhmh1plxxy unique (email)
2021-01-19 10:23:44 DEBUG SQL:144 - 
    
    alter table Users 
       add constraint UK_23y4gd49ajvbqgl3psjsvhff6 unique (username)
2021-01-19 10:23:44 DEBUG SQL:144 - 
    
    alter table Likes 
       add constraint FKsgiuhjmogswsfkd01syvnd1uc 
       foreign key (post_id_fk) 
       references Posts
2021-01-19 10:23:44 DEBUG SQL:144 - 
    
    alter table Likes 
       add constraint FK10tjjddvctvy7e5mim2in6icy 
       foreign key (user_id_fk) 
       references Users
2021-01-19 10:23:44 DEBUG SQL:144 - 
    
    alter table PasswordResetToken 
       add constraint FKpr3o3kx11ack418b2doprb9rl 
       foreign key (user_id) 
       references Users
2021-01-19 10:23:44 DEBUG SQL:144 - 
    
    alter table Posts 
       add constraint FKq5d7uyu4hr67yrr645katvulo 
       foreign key (user_id_fk) 
       references Users
2021-01-19 10:23:44 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-01-19 10:23:44 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-01-19 10:23:44 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-19 10:23:44 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-19 10:23:44 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-01-19 10:23:44 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-01-19 10:23:44 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4bd51d3e
2021-01-19 10:23:44 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: 90c86126-3967-453d-9c53-1d68c9e3f2bf (<unnamed>)
2021-01-19 10:23:44 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-01-19 10:23:44 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-01-19 10:23:44 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:23:44 DEBUG TransactionImpl:81 - begin
2021-01-19 10:23:44 DEBUG TransactionImpl:98 - committing
2021-01-19 10:23:44 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:23:44 DEBUG TransactionImpl:81 - begin
2021-01-19 10:23:44 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
2021-01-19 10:23:45 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@28f4f300
2021-01-19 10:23:45 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0
2021-01-19 10:23:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:23:45 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'project'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-01-19 10:23:45 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-19 10:23:45 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.User (generatedAlias0) -> user0_
2021-01-19 10:23:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> user0_.user_id
2021-01-19 10:23:45 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-19 10:23:45 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} Users user0_ ) )
2021-01-19 10:23:45 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [Users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-01-19 10:23:45 DEBUG JoinProcessor:304 - Using FROM fragment [Users user0_]
2021-01-19 10:23:45 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-19 10:23:45 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_3_' {alias=generatedAlias0, className=com.project.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.project.model.User}}

2021-01-19 10:23:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:23:45 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0
2021-01-19 10:23:45 DEBUG QueryTranslatorImpl:259 - SQL: select user0_.user_id as user_id1_3_, user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_ from Users user0_
2021-01-19 10:23:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:23:45 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_,
        user0_.email as email2_3_,
        user0_.firstname as firstnam3_3_,
        user0_.lastname as lastname4_3_,
        user0_.password as password5_3_,
        user0_.profile_picture as profile_6_3_,
        user0_.password_salt as password7_3_,
        user0_.username as username8_3_ 
    from
        Users user0_
2021-01-19 10:23:45 DEBUG Loader:384 - Result set row: 0
2021-01-19 10:23:45 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#1]
2021-01-19 10:23:45 DEBUG Loader:384 - Result set row: 1
2021-01-19 10:23:45 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#2]
2021-01-19 10:23:45 DEBUG Loader:384 - Result set row: 2
2021-01-19 10:23:45 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#3]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-19 10:23:45 DEBUG TransactionImpl:98 - committing
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-19 10:23:45 DEBUG EntityPrinter:110 - Listing entities:
2021-01-19 10:23:45 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-19 10:23:45 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-19 10:23:45 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-19 10:23:45 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:23:45 DEBUG TransactionImpl:81 - begin
2021-01-19 10:23:45 DEBUG TransactionImpl:98 - committing
2021-01-19 10:23:45 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:23:45 DEBUG TransactionImpl:81 - begin
2021-01-19 10:23:45 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.email=:param0
2021-01-19 10:23:45 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0 where generatedAlias0.email=:param0
2021-01-19 10:23:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:23:45 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'project'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

2021-01-19 10:23:45 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-19 10:23:45 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.User (generatedAlias0) -> user0_
2021-01-19 10:23:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> user0_.user_id
2021-01-19 10:23:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> user0_.user_id
2021-01-19 10:23:45 DEBUG DotNode:695 - getDataType() : email -> org.hibernate.type.StringType@3e6104fc
2021-01-19 10:23:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.email -> user0_.email
2021-01-19 10:23:45 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-19 10:23:45 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} Users user0_ ) ( where ( = ( user0_.email user0_.user_id email ) ? ) ) )
2021-01-19 10:23:45 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [Users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.project.model.User)
          | path: generatedAlias0.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.project.model.User)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

2021-01-19 10:23:45 DEBUG JoinProcessor:304 - Using FROM fragment [Users user0_]
2021-01-19 10:23:45 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-19 10:23:45 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_3_' {alias=generatedAlias0, className=com.project.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.project.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=user0_,className=com.project.model.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=com.project.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@3e6104fc}

2021-01-19 10:23:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:23:45 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0 where generatedAlias0.email=:param0
2021-01-19 10:23:45 DEBUG QueryTranslatorImpl:259 - SQL: select user0_.user_id as user_id1_3_, user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_ from Users user0_ where user0_.email=?
2021-01-19 10:23:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:23:45 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_,
        user0_.email as email2_3_,
        user0_.firstname as firstnam3_3_,
        user0_.lastname as lastname4_3_,
        user0_.password as password5_3_,
        user0_.profile_picture as profile_6_3_,
        user0_.password_salt as password7_3_,
        user0_.username as username8_3_ 
    from
        Users user0_ 
    where
        user0_.email=?
2021-01-19 10:23:45 DEBUG Loader:384 - Result set row: 0
2021-01-19 10:23:45 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#1]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-19 10:23:45 DEBUG TransactionImpl:98 - committing
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-19 10:23:45 DEBUG EntityPrinter:110 - Listing entities:
2021-01-19 10:23:45 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-19 10:23:45 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:23:45 DEBUG TransactionImpl:81 - begin
2021-01-19 10:23:45 DEBUG QueryTranslatorImpl:292 - parse() - HQL: update com.project.model.User as generatedAlias0 set generatedAlias0.email = :param0 where generatedAlias0.userId=1
2021-01-19 10:23:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:23:45 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  \-[IDENT] Node: 'project'
    |     |  |  \-[IDENT] Node: 'model'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'generatedAlias0'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias0'
    |     |  \-[IDENT] Node: 'email'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'userId'
          \-[NUM_INT] Node: '1'

2021-01-19 10:23:45 DEBUG HqlSqlBaseWalker:124 - update << begin [level=1, statement=update]
2021-01-19 10:23:45 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.User (generatedAlias0) -> user0_
2021-01-19 10:23:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> user_id
2021-01-19 10:23:45 DEBUG DotNode:695 - getDataType() : email -> org.hibernate.type.StringType@3e6104fc
2021-01-19 10:23:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.email -> email
2021-01-19 10:23:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> user_id
2021-01-19 10:23:45 DEBUG DotNode:695 - getDataType() : userId -> org.hibernate.type.IntegerType@36060e
2021-01-19 10:23:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.userId -> user_id
2021-01-19 10:23:45 DEBUG HqlSqlBaseWalker:128 - update : finishing up [level=1, statement=update]
2021-01-19 10:23:45 DEBUG HqlSqlBaseWalker:132 - update >> end [level=1, statement=update]
2021-01-19 10:23:45 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Users)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Users' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.project.model.User}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=generatedAlias0.email,tableAlias=user0_,className=com.project.model.User,classAlias=generatedAlias0}
    |     |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=generatedAlias0, className=com.project.model.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'email' {originalText=email}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@3e6104fc}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=generatedAlias0.userId,tableAlias=user0_,className=com.project.model.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user_id' {alias=generatedAlias0, className=com.project.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          \-[NUM_INT] LiteralNode: '1'

2021-01-19 10:23:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:23:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:23:45 DEBUG SQL:144 - 
    update
        Users 
    set
        email=? 
    where
        user_id=1
2021-01-19 10:23:45 DEBUG TransactionImpl:98 - committing
2021-01-19 10:23:45 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:23:45 DEBUG TransactionImpl:81 - begin
2021-01-19 10:23:45 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.userId=1
2021-01-19 10:23:45 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0 where generatedAlias0.userId=1
2021-01-19 10:23:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:23:45 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'project'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'userId'
          \-[NUM_INT] Node: '1'

2021-01-19 10:23:45 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-19 10:23:45 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.User (generatedAlias0) -> user0_
2021-01-19 10:23:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> user0_.user_id
2021-01-19 10:23:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> user0_.user_id
2021-01-19 10:23:45 DEBUG DotNode:695 - getDataType() : userId -> org.hibernate.type.IntegerType@36060e
2021-01-19 10:23:45 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.userId -> user0_.user_id
2021-01-19 10:23:45 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-19 10:23:45 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} Users user0_ ) ( where ( = ( user0_.user_id user0_.user_id userId ) 1 ) ) )
2021-01-19 10:23:45 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [Users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.project.model.User)
          | path: generatedAlias0.userId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.project.model.User)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: userId
          \-LiteralNode

2021-01-19 10:23:45 DEBUG JoinProcessor:304 - Using FROM fragment [Users user0_]
2021-01-19 10:23:45 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-19 10:23:45 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_3_' {alias=generatedAlias0, className=com.project.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.project.model.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_id' {propertyName=userId,dereferenceType=PRIMITIVE,getPropertyPath=userId,path=generatedAlias0.userId,tableAlias=user0_,className=com.project.model.User,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=generatedAlias0, className=com.project.model.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'userId' {originalText=userId}
          \-[NUM_INT] LiteralNode: '1'

2021-01-19 10:23:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:23:45 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0 where generatedAlias0.userId=1
2021-01-19 10:23:45 DEBUG QueryTranslatorImpl:259 - SQL: select user0_.user_id as user_id1_3_, user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_ from Users user0_ where user0_.user_id=1
2021-01-19 10:23:45 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:23:45 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_,
        user0_.email as email2_3_,
        user0_.firstname as firstnam3_3_,
        user0_.lastname as lastname4_3_,
        user0_.password as password5_3_,
        user0_.profile_picture as profile_6_3_,
        user0_.password_salt as password7_3_,
        user0_.username as username8_3_ 
    from
        Users user0_ 
    where
        user0_.user_id=1
2021-01-19 10:23:45 DEBUG Loader:384 - Result set row: 0
2021-01-19 10:23:45 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#1]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = jshan@mail.com
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-19 10:23:45 DEBUG TransactionImpl:98 - committing
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-19 10:23:45 DEBUG EntityPrinter:110 - Listing entities:
2021-01-19 10:23:45 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=jshan@mail.com, username=jshan}
2021-01-19 10:23:45 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:23:45 DEBUG TransactionImpl:81 - begin
2021-01-19 10:23:45 DEBUG TransactionImpl:98 - committing
2021-01-19 10:23:45 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:23:45 DEBUG TransactionImpl:81 - begin
2021-01-19 10:23:45 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
2021-01-19 10:23:45 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_,
        user0_.email as email2_3_,
        user0_.firstname as firstnam3_3_,
        user0_.lastname as lastname4_3_,
        user0_.password as password5_3_,
        user0_.profile_picture as profile_6_3_,
        user0_.password_salt as password7_3_,
        user0_.username as username8_3_ 
    from
        Users user0_
2021-01-19 10:23:45 DEBUG Loader:384 - Result set row: 0
2021-01-19 10:23:45 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#1]
2021-01-19 10:23:45 DEBUG Loader:384 - Result set row: 1
2021-01-19 10:23:45 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#2]
2021-01-19 10:23:45 DEBUG Loader:384 - Result set row: 2
2021-01-19 10:23:45 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#3]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = jshan@mail.com
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-19 10:23:45 DEBUG TransactionImpl:98 - committing
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-19 10:23:45 DEBUG EntityPrinter:110 - Listing entities:
2021-01-19 10:23:45 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-19 10:23:45 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=jshan@mail.com, username=jshan}
2021-01-19 10:23:45 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-19 10:23:45 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:23:45 DEBUG TransactionImpl:81 - begin
2021-01-19 10:23:45 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-01-19 10:23:45 DEBUG SQL:144 - 
    insert 
    into
        Users
        (user_id, email, firstname, lastname, password, profile_picture, password_salt, username) 
    values
        (null, ?, ?, ?, ?, ?, ?, ?)
2021-01-19 10:23:45 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 6
2021-01-19 10:23:45 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-01-19 10:23:45 DEBUG TransactionImpl:98 - committing
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-19 10:23:45 DEBUG EntityPrinter:110 - Listing entities:
2021-01-19 10:23:45 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Trevin, lastName=Chester, profilePicture=null, password=pass, salt=tsalt, userId=6, email=t@mail.com, username=t}
2021-01-19 10:23:45 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:23:45 DEBUG TransactionImpl:81 - begin
2021-01-19 10:23:45 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
2021-01-19 10:23:45 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_,
        user0_.email as email2_3_,
        user0_.firstname as firstnam3_3_,
        user0_.lastname as lastname4_3_,
        user0_.password as password5_3_,
        user0_.profile_picture as profile_6_3_,
        user0_.password_salt as password7_3_,
        user0_.username as username8_3_ 
    from
        Users user0_
2021-01-19 10:23:45 DEBUG Loader:384 - Result set row: 0
2021-01-19 10:23:45 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#1]
2021-01-19 10:23:45 DEBUG Loader:384 - Result set row: 1
2021-01-19 10:23:45 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#2]
2021-01-19 10:23:45 DEBUG Loader:384 - Result set row: 2
2021-01-19 10:23:45 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#3]
2021-01-19 10:23:45 DEBUG Loader:384 - Result set row: 3
2021-01-19 10:23:45 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#6]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = jshan@mail.com
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#6]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = t@mail.com
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Trevin
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Chester
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = pass
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = tsalt
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = t
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#6]
2021-01-19 10:23:45 DEBUG TransactionImpl:98 - committing
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-19 10:23:45 DEBUG EntityPrinter:110 - Listing entities:
2021-01-19 10:23:45 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Trevin, lastName=Chester, profilePicture=null, password=pass, salt=tsalt, userId=6, email=t@mail.com, username=t}
2021-01-19 10:23:45 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-19 10:23:45 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=jshan@mail.com, username=jshan}
2021-01-19 10:23:45 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-19 10:23:45 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:23:45 DEBUG TransactionImpl:81 - begin
2021-01-19 10:23:45 DEBUG TransactionImpl:98 - committing
2021-01-19 10:23:45 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:23:45 DEBUG TransactionImpl:81 - begin
2021-01-19 10:23:45 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.email=:param0
2021-01-19 10:23:45 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_,
        user0_.email as email2_3_,
        user0_.firstname as firstnam3_3_,
        user0_.lastname as lastname4_3_,
        user0_.password as password5_3_,
        user0_.profile_picture as profile_6_3_,
        user0_.password_salt as password7_3_,
        user0_.username as username8_3_ 
    from
        Users user0_ 
    where
        user0_.email=?
2021-01-19 10:23:45 DEBUG Loader:384 - Result set row: 0
2021-01-19 10:23:45 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#2]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-19 10:23:45 DEBUG TransactionImpl:98 - committing
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-19 10:23:45 DEBUG EntityPrinter:110 - Listing entities:
2021-01-19 10:23:45 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-19 10:23:45 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:23:45 DEBUG TransactionImpl:81 - begin
2021-01-19 10:23:45 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0 where generatedAlias0.email=:param0
2021-01-19 10:23:45 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_,
        user0_.email as email2_3_,
        user0_.firstname as firstnam3_3_,
        user0_.lastname as lastname4_3_,
        user0_.password as password5_3_,
        user0_.profile_picture as profile_6_3_,
        user0_.password_salt as password7_3_,
        user0_.username as username8_3_ 
    from
        Users user0_ 
    where
        user0_.email=?
2021-01-19 10:23:45 DEBUG Loader:384 - Result set row: 0
2021-01-19 10:23:45 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#3]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:23:45 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-19 10:23:45 DEBUG TransactionImpl:98 - committing
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-01-19 10:23:45 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-19 10:23:45 DEBUG EntityPrinter:110 - Listing entities:
2021-01-19 10:23:45 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-19 10:23:59 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-01-19 10:23:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-01-19 10:23:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-01-19 10:23:59 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-01-19 10:23:59 INFO  Version:44 - HHH000412: Hibernate ORM core version 5.4.25.Final
2021-01-19 10:23:59 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-01-19 10:23:59 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-01-19 10:23:59 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-01-19 10:23:59 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-01-19 10:23:59 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-01-19 10:23:59 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-01-19 10:23:59 INFO  Version:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@457c9034
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration boolean -> org.hibernate.type.BooleanType@457c9034
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@457c9034
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3f57bcad
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7daa0fbd
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration yes_no -> org.hibernate.type.YesNoType@181e731e
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@17d88132
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration byte -> org.hibernate.type.ByteType@17d88132
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@17d88132
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration character -> org.hibernate.type.CharacterType@36b4091c
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration char -> org.hibernate.type.CharacterType@36b4091c
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@36b4091c
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5b367418
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration short -> org.hibernate.type.ShortType@5b367418
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5b367418
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration integer -> org.hibernate.type.IntegerType@1efe439d
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration int -> org.hibernate.type.IntegerType@1efe439d
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1efe439d
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@413f69cc
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration long -> org.hibernate.type.LongType@413f69cc
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@413f69cc
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@39ac0c0a
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration float -> org.hibernate.type.FloatType@39ac0c0a
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@39ac0c0a
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@65b104b9
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration double -> org.hibernate.type.DoubleType@65b104b9
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@65b104b9
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@54504ecd
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@54504ecd
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6239aba6
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6239aba6
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration string -> org.hibernate.type.StringType@7164ca4c
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.String -> org.hibernate.type.StringType@7164ca4c
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3f91b517
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2421cc4
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration url -> org.hibernate.type.UrlType@58ce9668
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@58ce9668
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration Duration -> org.hibernate.type.DurationType@1fa1cab1
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1fa1cab1
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration Instant -> org.hibernate.type.InstantType@5c2375a9
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5c2375a9
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@492691d7
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@492691d7
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@67545b57
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@67545b57
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@74589991
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@74589991
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1869fbd2
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1869fbd2
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@ca30bc1
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@ca30bc1
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@10a9d961
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@10a9d961
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration date -> org.hibernate.type.DateType@a4add54
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@a4add54
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration time -> org.hibernate.type.TimeType@61fe30
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@61fe30
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration timestamp -> org.hibernate.type.TimestampType@7b420819
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7b420819
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7b420819
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@a3d9978
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration calendar -> org.hibernate.type.CalendarType@1e461e41
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1e461e41
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1e461e41
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3899782c
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@30e868be
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration locale -> org.hibernate.type.LocaleType@13ad5cd3
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@13ad5cd3
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration currency -> org.hibernate.type.CurrencyType@6581dc0a
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6581dc0a
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@77128536
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@77128536
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration class -> org.hibernate.type.ClassType@4c1f22f3
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4c1f22f3
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@484094a5
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@484094a5
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@602e0143
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration binary -> org.hibernate.type.BinaryType@34c01041
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration byte[] -> org.hibernate.type.BinaryType@34c01041
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration [B -> org.hibernate.type.BinaryType@34c01041
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7f0d96f2
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7f0d96f2
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7f0d96f2
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration row_version -> org.hibernate.type.RowVersionType@49ff7d8c
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration image -> org.hibernate.type.ImageType@77102b91
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration characters -> org.hibernate.type.CharArrayType@3f9342d4
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration char[] -> org.hibernate.type.CharArrayType@3f9342d4
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration [C -> org.hibernate.type.CharArrayType@3f9342d4
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3d3e5463
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3d3e5463
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3d3e5463
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration text -> org.hibernate.type.TextType@42b02722
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration ntext -> org.hibernate.type.NTextType@528c868
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration blob -> org.hibernate.type.BlobType@7a1234bf
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7a1234bf
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@38aa816f
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration clob -> org.hibernate.type.ClobType@39a2bb97
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@39a2bb97
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration nclob -> org.hibernate.type.NClobType@5bf8fa12
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5bf8fa12
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5812f68b
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@55493582
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration serializable -> org.hibernate.type.SerializableType@52c3cb31
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration object -> org.hibernate.type.ObjectType@1c481ff2
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1c481ff2
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@676cf48
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5a1de7fb
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@335b5620
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@29a0cdb
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@32a68f4f
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@73194df
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6eb2384f
2021-01-19 10:24:00 DEBUG BasicTypeRegistry:157 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3c9c0d96
2021-01-19 10:24:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-01-19 10:24:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-01-19 10:24:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-01-19 10:24:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-01-19 10:24:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-01-19 10:24:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-01-19 10:24:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-01-19 10:24:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-01-19 10:24:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-01-19 10:24:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-01-19 10:24:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-01-19 10:24:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-01-19 10:24:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-01-19 10:24:00 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-01-19 10:24:00 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
2021-01-19 10:24:00 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
2021-01-19 10:24:00 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.1
2021-01-19 10:24:00 INFO  Dialect:175 - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2021-01-19 10:24:00 DEBUG IdentifierHelperBuilder:110 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-01-19 10:24:00 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-01-19 10:24:00 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ab14cb9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5fb97279]
2021-01-19 10:24:00 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.Like
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-19 10:24:00 DEBUG EntityBinder:430 - Import with entity name Like
2021-01-19 10:24:00 DEBUG EntityBinder:873 - Bind entity com.project.model.Like on table Likes
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=like_id, insertable=true, updatable=true, unique=false}
2021-01-19 10:24:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-19 10:24:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-19 10:24:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property likeId with lazy=false
2021-01-19 10:24:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Like:likeId]
2021-01-19 10:24:00 DEBUG SimpleValueBinder:410 - building SimpleValue for likeId
2021-01-19 10:24:00 DEBUG PropertyBinder:266 - Building property likeId
2021-01-19 10:24:00 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(like_id)]), likeId, identity, , ...)
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id_fk', referencedColumn='post_id', mappedBy=''}
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=post, insertable=true, updatable=true, unique=false}
2021-01-19 10:24:00 DEBUG PropertyBinder:266 - Building property post
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id_fk', referencedColumn='user_id', mappedBy=''}
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Likes), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-01-19 10:24:00 DEBUG PropertyBinder:266 - Building property user
2021-01-19 10:24:00 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.PasswordResetToken
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-19 10:24:00 DEBUG EntityBinder:430 - Import with entity name PasswordResetToken
2021-01-19 10:24:00 DEBUG EntityBinder:873 - Bind entity com.project.model.PasswordResetToken on table PasswordResetToken
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=id, insertable=true, updatable=true, unique=false}
2021-01-19 10:24:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-19 10:24:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-19 10:24:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-01-19 10:24:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:id]
2021-01-19 10:24:00 DEBUG SimpleValueBinder:410 - building SimpleValue for id
2021-01-19 10:24:00 DEBUG PropertyBinder:266 - Building property id
2021-01-19 10:24:00 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=expiryDate, insertable=true, updatable=true, unique=false}
2021-01-19 10:24:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property expiryDate with lazy=false
2021-01-19 10:24:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:expiryDate]
2021-01-19 10:24:00 DEBUG SimpleValueBinder:410 - building SimpleValue for expiryDate
2021-01-19 10:24:00 DEBUG PropertyBinder:266 - Building property expiryDate
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=token, insertable=true, updatable=true, unique=false}
2021-01-19 10:24:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property token with lazy=false
2021-01-19 10:24:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.PasswordResetToken:token]
2021-01-19 10:24:00 DEBUG SimpleValueBinder:410 - building SimpleValue for token
2021-01-19 10:24:00 DEBUG PropertyBinder:266 - Building property token
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(PasswordResetToken), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-01-19 10:24:00 DEBUG PropertyBinder:266 - Building property user
2021-01-19 10:24:00 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.Post
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-19 10:24:00 DEBUG EntityBinder:430 - Import with entity name Post
2021-01-19 10:24:00 DEBUG EntityBinder:873 - Bind entity com.project.model.Post on table Posts
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-01-19 10:24:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-19 10:24:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-19 10:24:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-01-19 10:24:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postId]
2021-01-19 10:24:00 DEBUG SimpleValueBinder:410 - building SimpleValue for postId
2021-01-19 10:24:00 DEBUG PropertyBinder:266 - Building property postId
2021-01-19 10:24:00 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, identity, , ...)
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id_fk', referencedColumn='user_id', mappedBy=''}
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=author, insertable=true, updatable=true, unique=false}
2021-01-19 10:24:00 DEBUG PropertyBinder:266 - Building property author
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_picture, insertable=true, updatable=true, unique=false}
2021-01-19 10:24:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postPicture with lazy=false
2021-01-19 10:24:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postPicture]
2021-01-19 10:24:00 DEBUG SimpleValueBinder:410 - building SimpleValue for postPicture
2021-01-19 10:24:00 DEBUG PropertyBinder:266 - Building property postPicture
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=post_text, insertable=true, updatable=true, unique=false}
2021-01-19 10:24:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postText with lazy=false
2021-01-19 10:24:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:postText]
2021-01-19 10:24:00 DEBUG SimpleValueBinder:410 - building SimpleValue for postText
2021-01-19 10:24:00 DEBUG PropertyBinder:266 - Building property postText
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Posts), mappingColumn=timestamp, insertable=true, updatable=true, unique=false}
2021-01-19 10:24:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property timestamp with lazy=false
2021-01-19 10:24:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.Post:timestamp]
2021-01-19 10:24:00 DEBUG SimpleValueBinder:410 - building SimpleValue for timestamp
2021-01-19 10:24:00 DEBUG PropertyBinder:266 - Building property timestamp
2021-01-19 10:24:00 DEBUG AnnotationBinder:558 - Binding entity from annotated class: com.project.model.User
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-01-19 10:24:00 DEBUG EntityBinder:430 - Import with entity name User
2021-01-19 10:24:00 DEBUG EntityBinder:873 - Bind entity com.project.model.User on table Users
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-01-19 10:24:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-19 10:24:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-19 10:24:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property userId with lazy=false
2021-01-19 10:24:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:userId]
2021-01-19 10:24:00 DEBUG SimpleValueBinder:410 - building SimpleValue for userId
2021-01-19 10:24:00 DEBUG PropertyBinder:266 - Building property userId
2021-01-19 10:24:00 DEBUG BinderHelper:643 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, identity, , ...)
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-01-19 10:24:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-01-19 10:24:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:email]
2021-01-19 10:24:00 DEBUG SimpleValueBinder:410 - building SimpleValue for email
2021-01-19 10:24:00 DEBUG PropertyBinder:266 - Building property email
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
2021-01-19 10:24:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-01-19 10:24:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:firstName]
2021-01-19 10:24:00 DEBUG SimpleValueBinder:410 - building SimpleValue for firstName
2021-01-19 10:24:00 DEBUG PropertyBinder:266 - Building property firstName
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
2021-01-19 10:24:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-01-19 10:24:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:lastName]
2021-01-19 10:24:00 DEBUG SimpleValueBinder:410 - building SimpleValue for lastName
2021-01-19 10:24:00 DEBUG PropertyBinder:266 - Building property lastName
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-01-19 10:24:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-01-19 10:24:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:password]
2021-01-19 10:24:00 DEBUG SimpleValueBinder:410 - building SimpleValue for password
2021-01-19 10:24:00 DEBUG PropertyBinder:266 - Building property password
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=profile_picture, insertable=true, updatable=true, unique=false}
2021-01-19 10:24:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property profilePicture with lazy=false
2021-01-19 10:24:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:profilePicture]
2021-01-19 10:24:00 DEBUG SimpleValueBinder:410 - building SimpleValue for profilePicture
2021-01-19 10:24:00 DEBUG PropertyBinder:266 - Building property profilePicture
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=password_salt, insertable=true, updatable=true, unique=false}
2021-01-19 10:24:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property salt with lazy=false
2021-01-19 10:24:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:salt]
2021-01-19 10:24:00 DEBUG SimpleValueBinder:410 - building SimpleValue for salt
2021-01-19 10:24:00 DEBUG PropertyBinder:266 - Building property salt
2021-01-19 10:24:00 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-01-19 10:24:00 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-01-19 10:24:00 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.project.model.User:username]
2021-01-19 10:24:00 DEBUG SimpleValueBinder:410 - building SimpleValue for username
2021-01-19 10:24:00 DEBUG PropertyBinder:266 - Building property username
2021-01-19 10:24:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for likeId
2021-01-19 10:24:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for id
2021-01-19 10:24:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for expiryDate
2021-01-19 10:24:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for token
2021-01-19 10:24:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postId
2021-01-19 10:24:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postPicture
2021-01-19 10:24:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for postText
2021-01-19 10:24:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for timestamp
2021-01-19 10:24:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for userId
2021-01-19 10:24:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for email
2021-01-19 10:24:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for firstName
2021-01-19 10:24:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for lastName
2021-01-19 10:24:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for password
2021-01-19 10:24:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for profilePicture
2021-01-19 10:24:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for salt
2021-01-19 10:24:00 DEBUG SimpleValueBinder:455 - Starting fillSimpleValue for username
2021-01-19 10:24:00 DEBUG PrimaryKey:35 - Forcing column [like_id] to be non-null as it is part of the primary key for table [likes]
2021-01-19 10:24:00 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [passwordresettoken]
2021-01-19 10:24:00 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-01-19 10:24:00 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-01-19 10:24:00 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.Post
2021-01-19 10:24:00 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-19 10:24:00 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-19 10:24:00 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-19 10:24:00 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.Post
2021-01-19 10:24:00 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-19 10:24:00 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-19 10:24:00 DEBUG InFlightMetadataCollectorImpl:1869 - Resolving reference to class: com.project.model.User
2021-01-19 10:24:00 DEBUG SessionFactoryImpl:203 - Building session factory
2021-01-19 10:24:00 DEBUG Settings:68 - SessionFactory name : null
2021-01-19 10:24:00 DEBUG Settings:69 - Automatic flush during beforeCompletion(): enabled
2021-01-19 10:24:00 DEBUG Settings:70 - Automatic session close at end of transaction: disabled
2021-01-19 10:24:00 DEBUG Settings:72 - Statistics: disabled
2021-01-19 10:24:00 DEBUG Settings:74 - Deleted entity synthetic identifier rollback: disabled
2021-01-19 10:24:00 DEBUG Settings:75 - Default entity-mode: pojo
2021-01-19 10:24:00 DEBUG Settings:76 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-01-19 10:24:00 DEBUG Settings:77 - Allow initialization of lazy state outside session : disabled
2021-01-19 10:24:00 DEBUG Settings:79 - Using BatchFetchStyle : LEGACY
2021-01-19 10:24:00 DEBUG Settings:80 - Default batch fetch size: -1
2021-01-19 10:24:00 DEBUG Settings:81 - Maximum outer join fetch depth: null
2021-01-19 10:24:00 DEBUG Settings:82 - Default null ordering: NONE
2021-01-19 10:24:00 DEBUG Settings:83 - Order SQL updates by primary key: disabled
2021-01-19 10:24:00 DEBUG Settings:84 - Order SQL inserts for batching: disabled
2021-01-19 10:24:00 DEBUG Settings:86 - multi-tenancy strategy : NONE
2021-01-19 10:24:00 DEBUG Settings:88 - JTA Track by Thread: enabled
2021-01-19 10:24:00 DEBUG Settings:90 - Query language substitutions: {}
2021-01-19 10:24:00 DEBUG Settings:91 - Named query checking : enabled
2021-01-19 10:24:00 DEBUG Settings:93 - Second-level cache: disabled
2021-01-19 10:24:00 DEBUG Settings:94 - Second-level query cache: disabled
2021-01-19 10:24:00 DEBUG Settings:95 - Second-level query cache factory: null
2021-01-19 10:24:00 DEBUG Settings:96 - Second-level cache region prefix: null
2021-01-19 10:24:00 DEBUG Settings:97 - Optimize second-level cache for minimal puts: disabled
2021-01-19 10:24:00 DEBUG Settings:98 - Structured second-level cache entries: disabled
2021-01-19 10:24:00 DEBUG Settings:99 - Second-level cache direct-reference entries: disabled
2021-01-19 10:24:00 DEBUG Settings:100 - Automatic eviction of collection cache: disabled
2021-01-19 10:24:00 DEBUG Settings:102 - JDBC batch size: 15
2021-01-19 10:24:00 DEBUG Settings:103 - JDBC batch updates for versioned data: enabled
2021-01-19 10:24:00 DEBUG Settings:104 - Scrollable result sets: enabled
2021-01-19 10:24:00 DEBUG Settings:105 - Wrap result sets: disabled
2021-01-19 10:24:00 DEBUG Settings:106 - JDBC3 getGeneratedKeys(): enabled
2021-01-19 10:24:00 DEBUG Settings:107 - JDBC result set fetch size: null
2021-01-19 10:24:00 DEBUG Settings:108 - Connection release mode: ON_CLOSE
2021-01-19 10:24:00 DEBUG Settings:109 - Generate SQL with comments: disabled
2021-01-19 10:24:00 DEBUG Settings:111 - JPA compliance - query : disabled
2021-01-19 10:24:00 DEBUG Settings:112 - JPA compliance - closed-handling : disabled
2021-01-19 10:24:00 DEBUG Settings:113 - JPA compliance - lists : disabled
2021-01-19 10:24:00 DEBUG Settings:114 - JPA compliance - transactions : disabled
2021-01-19 10:24:00 DEBUG SessionFactoryImpl:258 - Session factory constructed with filter configurations : {}
2021-01-19 10:24:00 DEBUG SessionFactoryImpl:259 - Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@46baf579, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2\target\test-classes;C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2\target\classes;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\annotations-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ant.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ha.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-ssi.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-storeconfig.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina-tribes.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\catalina.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\ecj-4.17.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\el-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jasper-el.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jasper.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jaspic-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\jsp-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\servlet-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-api.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-coyote.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-dbcp.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-cs.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-de.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-es.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-fr.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ja.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ko.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-pt-BR.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-ru.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-i18n-zh-CN.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-jdbc.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-jni.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-util-scan.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-util.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\tomcat-websocket.jar;C:\Users\david\Desktop\apache-tomcat-9.0.41\lib\websocket-api.jar;C:\Users\david\.m2\repository\org\postgresql\postgresql\42.2.14\postgresql-42.2.14.jar;C:\Users\david\.m2\repository\org\hibernate\hibernate-core\5.4.25.Final\hibernate-core-5.4.25.Final.jar;C:\Users\david\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\david\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\david\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\david\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\david\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\david\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\david\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\david\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\david\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\david\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\david\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\david\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\david\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\david\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\david\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\david\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\david\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\david\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.5.Final\hibernate-validator-6.1.5.Final.jar;C:\Users\david\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\david\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\david\.m2\repository\junit\junit\4.13\junit-4.13.jar;C:\Users\david\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.11.3\jackson-databind-2.11.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.3\jackson-annotations-2.11.3.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.3\jackson-core-2.11.3.jar;C:\Users\david\.m2\repository\com\h2database\h2\1.4.200\h2-1.4.200.jar;C:\Users\david\.m2\repository\org\springframework\spring-core\5.2.12.RELEASE\spring-core-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-jcl\5.2.12.RELEASE\spring-jcl-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-beans\5.2.12.RELEASE\spring-beans-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-context\5.2.12.RELEASE\spring-context-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-aop\5.2.12.RELEASE\spring-aop-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-expression\5.2.12.RELEASE\spring-expression-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-orm\5.2.12.RELEASE\spring-orm-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-jdbc\5.2.12.RELEASE\spring-jdbc-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-tx\5.2.12.RELEASE\spring-tx-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-webmvc\5.2.12.RELEASE\spring-webmvc-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-web\5.2.12.RELEASE\spring-web-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\springframework\spring-context-support\5.2.12.RELEASE\spring-context-support-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\javax\mail\javax.mail-api\1.6.2\javax.mail-api-1.6.2.jar;C:\Users\david\.m2\repository\com\sun\mail\javax.mail\1.6.2\javax.mail-1.6.2.jar;C:\Users\david\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\david\.m2\repository\org\springframework\spring-aspects\5.2.12.RELEASE\spring-aspects-5.2.12.RELEASE.jar;C:\Users\david\.m2\repository\org\aspectj\aspectjweaver\1.9.6\aspectjweaver-1.9.6.jar;C:\Users\david\.m2\repository\commons-fileupload\commons-fileupload\1.3.1\commons-fileupload-1.3.1.jar;C:\Users\david\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-s3\1.11.327\aws-java-sdk-s3-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-kms\1.11.327\aws-java-sdk-kms-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-core\1.11.327\aws-java-sdk-core-1.11.327.jar;C:\Users\david\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\david\.m2\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;C:\Users\david\.m2\repository\org\apache\httpcomponents\httpcore\4.4.9\httpcore-4.4.9.jar;C:\Users\david\.m2\repository\commons-codec\commons-codec\1.10\commons-codec-1.10.jar;C:\Users\david\.m2\repository\software\amazon\ion\ion-java\1.0.2\ion-java-1.0.2.jar;C:\Users\david\.m2\repository\com\fasterxml\jackson\dataformat\jackson-dataformat-cbor\2.6.7\jackson-dataformat-cbor-2.6.7.jar;C:\Users\david\.m2\repository\joda-time\joda-time\2.8.1\joda-time-2.8.1.jar;C:\Users\david\.m2\repository\com\amazonaws\jmespath-java\1.11.327\jmespath-java-1.11.327.jar;C:\Users\david\.m2\repository\com\amazonaws\aws-java-sdk-dynamodb\1.11.327\aws-java-sdk-dynamodb-1.11.327.jar;C:\sts-bundle\sts-3.9.13.RELEASE\configuration\org.eclipse.osgi\311\0\.cp;C:\sts-bundle\sts-3.9.13.RELEASE\configuration\org.eclipse.osgi\310\0\.cp, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Los_Angeles, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jre1.8.0_271\bin, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 49999 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.project.test.PostDaoTest, sun.cpu.endian=little, user.home=C:\Users\david, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jre1.8.0_271, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jre1.8.0_271\lib\resources.jar;C:\Program Files\Java\jre1.8.0_271\lib\rt.jar;C:\Program Files\Java\jre1.8.0_271\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_271\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_271\lib\jce.jar;C:\Program Files\Java\jre1.8.0_271\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_271\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_271\classes, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_271-b09, user.name=david, path.separator=;, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jre1.8.0_271\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.classLoaders=[sun.misc.Launcher$AppClassLoader@3d494fbf], hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\david\AppData\Local\Temp\, java.version=1.8.0_271, user.dir=C:\Users\david\Desktop\SocialMediaAppP2\socialMediaApp\Backend\Project2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4bf324f9, java.library.path=C:\Program Files\Java\jre1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_271/bin/server;C:/Program Files/Java/jre1.8.0_271/bin;C:/Program Files/Java/jre1.8.0_271/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\ProgramData\chocolatey\bin;C:\ProgramData\nvm;C:\Program Files\nodejs;C:\Program Files\Microsoft VS Code\bin;D:\PuTTY\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk1.8.0_271\bin;C:\Program Files\Java\jre1.8.0_271\bin;C:\Users\david\AppData\Local\Microsoft\WindowsApps;C:\sts-bundle\sts-3.9.13.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.271-b09, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@77888435, java.ext.dirs=C:\Program Files\Java\jre1.8.0_271\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2021-01-19 10:24:00 INFO  Version:21 - HV000001: Hibernate Validator 6.1.5.Final
2021-01-19 10:24:00 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-01-19 10:24:00 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-01-19 10:24:00 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-01-19 10:24:00 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-01-19 10:24:00 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-01-19 10:24:00 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-01-19 10:24:00 DEBUG ResourceBundleMessageInterpolator:172 - Loaded expression factory via original TCCL
2021-01-19 10:24:00 DEBUG ValidatorFactoryConfigurationHelper:300 - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2021-01-19 10:24:00 DEBUG ValidatorFactoryConfigurationHelper:375 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-01-19 10:24:00 DEBUG ValidatorFactoryConfigurationHelper:376 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-01-19 10:24:00 DEBUG ValidatorFactoryConfigurationHelper:377 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-01-19 10:24:00 DEBUG ValidatorFactoryConfigurationHelper:378 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-01-19 10:24:00 DEBUG ValidatorFactoryConfigurationHelper:379 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-01-19 10:24:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-19 10:24:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-19 10:24:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-19 10:24:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-19 10:24:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-19 10:24:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-19 10:24:00 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-19 10:24:00 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-19 10:24:00 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-01-19 10:24:00 DEBUG SessionFactoryImpl:298 - Instantiated session factory
2021-01-19 10:24:00 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5ab14cb9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@784c5ef5]
2021-01-19 10:24:01 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.PasswordResetToken] is safe
2021-01-19 10:24:01 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.PasswordResetToken
2021-01-19 10:24:01 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Like] is safe
2021-01-19 10:24:01 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Like
2021-01-19 10:24:01 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.User] is safe
2021-01-19 10:24:01 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.User
2021-01-19 10:24:01 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.project.model.Post] is safe
2021-01-19 10:24:01 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.project.model.Post
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.PasswordResetToken
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:3928 -  Version select: select id from PasswordResetToken where id =?
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select passwordre_.id, passwordre_.expiryDate as expiryda2_1_, passwordre_.token as token3_1_, passwordre_.user_id as user_id4_1_ from PasswordResetToken passwordre_ where passwordre_.id=?
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into PasswordResetToken (expiryDate, token, user_id, id) values (?, ?, ?, ?)
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:394 -  Update 0: update PasswordResetToken set expiryDate=?, token=?, user_id=? where id=?
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from PasswordResetToken where id=?
2021-01-19 10:24:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@646c0a67]
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : expiryDate
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : token
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-01-19 10:24:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a2bcd56]
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.email
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.firstName
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.lastName
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.password
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.profilePicture
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.salt
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.username
2021-01-19 10:24:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-19 10:24:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-19 10:24:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.PasswordResetToken)
    - Returns
       - EntityReturnImpl(entity=com.project.model.PasswordResetToken, querySpaceUid=<gen:0>, path=com.project.model.PasswordResetToken)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:1>, path=com.project.model.PasswordResetToken.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.PasswordResetToken)
          - SQL table alias mapping - passwordre0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_3_1_}

2021-01-19 10:24:01 DEBUG EntityLoader:129 - Static select for entity com.project.model.PasswordResetToken [NONE]: select passwordre0_.id as id1_1_0_, passwordre0_.expiryDate as expiryda2_1_0_, passwordre0_.token as token3_1_0_, passwordre0_.user_id as user_id4_1_0_, user1_.user_id as user_id1_3_1_, user1_.email as email2_3_1_, user1_.firstname as firstnam3_3_1_, user1_.lastname as lastname4_3_1_, user1_.password as password5_3_1_, user1_.profile_picture as profile_6_3_1_, user1_.password_salt as password7_3_1_, user1_.username as username8_3_1_ from PasswordResetToken passwordre0_ inner join Users user1_ on passwordre0_.user_id=user1_.user_id where passwordre0_.id=?
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.Like
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:3928 -  Version select: select like_id from Likes where like_id =?
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select like_.like_id, like_.post_id_fk as post_id_2_0_, like_.user_id_fk as user_id_3_0_ from Likes like_ where like_.like_id=?
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Likes (post_id_fk, user_id_fk, like_id) values (?, ?, ?)
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:394 -  Update 0: update Likes set post_id_fk=?, user_id_fk=? where like_id=?
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Likes where like_id=?
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Likes (like_id, post_id_fk, user_id_fk) values (null, ?, ?)
2021-01-19 10:24:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@588f63c]
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post
2021-01-19 10:24:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1981d861]
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author
2021-01-19 10:24:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f4c1e6]
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.email
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.firstName
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.lastName
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.password
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.profilePicture
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.salt
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.author.username
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.postPicture
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.postText
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : post.timestamp
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-01-19 10:24:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6342d610]
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.email
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.firstName
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.lastName
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.password
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.profilePicture
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.salt
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user.username
2021-01-19 10:24:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-19 10:24:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-19 10:24:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.Like)
    - Returns
       - EntityReturnImpl(entity=com.project.model.Like, querySpaceUid=<gen:0>, path=com.project.model.Like)
          - EntityAttributeFetchImpl(entity=com.project.model.Post, querySpaceUid=<gen:1>, path=com.project.model.Like.post)
             - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:2>, path=com.project.model.Like.post.author)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:3>, path=com.project.model.Like.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.Like)
          - SQL table alias mapping - like0_
          - alias suffix - 0_
          - suffixed key columns - {like_id1_0_0_}
          - JOIN (JoinDefinedByMetadata(post)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_2_1_}
                - JOIN (JoinDefinedByMetadata(author)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.project.model.User)
                      - SQL table alias mapping - user2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id1_3_2_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.project.model.User)
                - SQL table alias mapping - user3_
                - alias suffix - 3_
                - suffixed key columns - {user_id1_3_3_}

2021-01-19 10:24:01 DEBUG EntityLoader:129 - Static select for entity com.project.model.Like [NONE]: select like0_.like_id as like_id1_0_0_, like0_.post_id_fk as post_id_2_0_0_, like0_.user_id_fk as user_id_3_0_0_, post1_.post_id as post_id1_2_1_, post1_.user_id_fk as user_id_5_2_1_, post1_.post_picture as post_pic2_2_1_, post1_.post_text as post_tex3_2_1_, post1_.timestamp as timestam4_2_1_, user2_.user_id as user_id1_3_2_, user2_.email as email2_3_2_, user2_.firstname as firstnam3_3_2_, user2_.lastname as lastname4_3_2_, user2_.password as password5_3_2_, user2_.profile_picture as profile_6_3_2_, user2_.password_salt as password7_3_2_, user2_.username as username8_3_2_, user3_.user_id as user_id1_3_3_, user3_.email as email2_3_3_, user3_.firstname as firstnam3_3_3_, user3_.lastname as lastname4_3_3_, user3_.password as password5_3_3_, user3_.profile_picture as profile_6_3_3_, user3_.password_salt as password7_3_3_, user3_.username as username8_3_3_ from Likes like0_ left outer join Posts post1_ on like0_.post_id_fk=post1_.post_id left outer join Users user2_ on post1_.user_id_fk=user2_.user_id left outer join Users user3_ on like0_.user_id_fk=user3_.user_id where like0_.like_id=?
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.User
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:3928 -  Version select: select user_id from Users where user_id =?
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select user_.user_id, user_.email as email2_3_, user_.firstname as firstnam3_3_, user_.lastname as lastname4_3_, user_.password as password5_3_, user_.profile_picture as profile_6_3_, user_.password_salt as password7_3_, user_.username as username8_3_ from Users user_ where user_.user_id=?
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Users (email, firstname, lastname, password, profile_picture, password_salt, username, user_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:394 -  Update 0: update Users set email=?, firstname=?, lastname=?, password=?, profile_picture=?, password_salt=?, username=? where user_id=?
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Users where user_id=?
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Users (user_id, email, firstname, lastname, password, profile_picture, password_salt, username) values (null, ?, ?, ?, ?, ?, ?, ?)
2021-01-19 10:24:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@784abd3e]
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : profilePicture
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : salt
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-01-19 10:24:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-19 10:24:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-19 10:24:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.User)
    - Returns
       - EntityReturnImpl(entity=com.project.model.User, querySpaceUid=<gen:0>, path=com.project.model.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_3_0_}

2021-01-19 10:24:01 DEBUG EntityLoader:129 - Static select for entity com.project.model.User [NONE]: select user0_.user_id as user_id1_3_0_, user0_.email as email2_3_0_, user0_.firstname as firstnam3_3_0_, user0_.lastname as lastname4_3_0_, user0_.password as password5_3_0_, user0_.profile_picture as profile_6_3_0_, user0_.password_salt as password7_3_0_, user0_.username as username8_3_0_ from Users user0_ where user0_.user_id=?
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:3923 - Static SQL for entity: com.project.model.Post
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:3928 -  Version select: select post_id from Posts where post_id =?
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:3931 -  Snapshot select: select post_.post_id, post_.user_id_fk as user_id_5_2_, post_.post_picture as post_pic2_2_, post_.post_text as post_tex3_2_, post_.timestamp as timestam4_2_ from Posts post_ where post_.post_id=?
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Posts (user_id_fk, post_picture, post_text, timestamp, post_id) values (?, ?, ?, ?, ?)
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:394 -  Update 0: update Posts set user_id_fk=?, post_picture=?, post_text=?, timestamp=? where post_id=?
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Posts where post_id=?
2021-01-19 10:24:01 DEBUG AbstractEntityPersister:3939 -  Identity insert: insert into Posts (post_id, user_id_fk, post_picture, post_text, timestamp) values (null, ?, ?, ?, ?)
2021-01-19 10:24:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@434514d8]
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author
2021-01-19 10:24:01 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4613311f]
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.email
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.firstName
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.lastName
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.password
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.profilePicture
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.salt
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : author.username
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postPicture
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postText
2021-01-19 10:24:01 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : timestamp
2021-01-19 10:24:01 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-01-19 10:24:01 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-01-19 10:24:01 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.project.model.Post)
    - Returns
       - EntityReturnImpl(entity=com.project.model.Post, querySpaceUid=<gen:0>, path=com.project.model.Post)
          - EntityAttributeFetchImpl(entity=com.project.model.User, querySpaceUid=<gen:1>, path=com.project.model.Post.author)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.project.model.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(author)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.project.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_3_1_}

2021-01-19 10:24:01 DEBUG EntityLoader:129 - Static select for entity com.project.model.Post [NONE]: select post0_.post_id as post_id1_2_0_, post0_.user_id_fk as user_id_5_2_0_, post0_.post_picture as post_pic2_2_0_, post0_.post_text as post_tex3_2_0_, post0_.timestamp as timestam4_2_0_, user1_.user_id as user_id1_3_1_, user1_.email as email2_3_1_, user1_.firstname as firstnam3_3_1_, user1_.lastname as lastname4_3_1_, user1_.password as password5_3_1_, user1_.profile_picture as profile_6_3_1_, user1_.password_salt as password7_3_1_, user1_.username as username8_3_1_ from Posts post0_ left outer join Users user1_ on post0_.user_id_fk=user1_.user_id where post0_.post_id=?
2021-01-19 10:24:01 DEBUG SQL:144 - 
    
    drop table if exists Likes CASCADE 
2021-01-19 10:24:01 DEBUG SQL:144 - 
    
    drop table if exists PasswordResetToken CASCADE 
2021-01-19 10:24:01 DEBUG SQL:144 - 
    
    drop table if exists Posts CASCADE 
2021-01-19 10:24:01 DEBUG SQL:144 - 
    
    drop table if exists Users CASCADE 
2021-01-19 10:24:01 DEBUG SQL:144 - 
    
    drop sequence if exists hibernate_sequence
2021-01-19 10:24:01 DEBUG SQL:144 - create sequence hibernate_sequence start with 1 increment by 1
2021-01-19 10:24:01 DEBUG SQL:144 - 
    
    create table Likes (
       like_id integer generated by default as identity,
        post_id_fk integer,
        user_id_fk integer,
        primary key (like_id)
    )
2021-01-19 10:24:01 DEBUG SQL:144 - 
    
    create table PasswordResetToken (
       id bigint not null,
        expiryDate timestamp,
        token varchar(255),
        user_id integer not null,
        primary key (id)
    )
2021-01-19 10:24:01 DEBUG SQL:144 - 
    
    create table Posts (
       post_id integer generated by default as identity,
        post_picture varchar(255),
        post_text varchar(280) not null,
        timestamp timestamp not null,
        user_id_fk integer,
        primary key (post_id)
    )
2021-01-19 10:24:01 DEBUG SQL:144 - 
    
    create table Users (
       user_id integer generated by default as identity,
        email varchar(255) not null,
        firstname varchar(255) not null,
        lastname varchar(255) not null,
        password varchar(255) not null,
        profile_picture varchar(255),
        password_salt varchar(255) not null,
        username varchar(255) not null,
        primary key (user_id)
    )
2021-01-19 10:24:01 DEBUG SQL:144 - 
    
    alter table Users 
       add constraint UK_ncoa9bfasrql0x4nhmh1plxxy unique (email)
2021-01-19 10:24:01 DEBUG SQL:144 - 
    
    alter table Users 
       add constraint UK_23y4gd49ajvbqgl3psjsvhff6 unique (username)
2021-01-19 10:24:01 DEBUG SQL:144 - 
    
    alter table Likes 
       add constraint FKsgiuhjmogswsfkd01syvnd1uc 
       foreign key (post_id_fk) 
       references Posts
2021-01-19 10:24:01 DEBUG SQL:144 - 
    
    alter table Likes 
       add constraint FK10tjjddvctvy7e5mim2in6icy 
       foreign key (user_id_fk) 
       references Users
2021-01-19 10:24:01 DEBUG SQL:144 - 
    
    alter table PasswordResetToken 
       add constraint FKpr3o3kx11ack418b2doprb9rl 
       foreign key (user_id) 
       references Users
2021-01-19 10:24:01 DEBUG SQL:144 - 
    
    alter table Posts 
       add constraint FKq5d7uyu4hr67yrr645katvulo 
       foreign key (user_id_fk) 
       references Users
2021-01-19 10:24:01 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-01-19 10:24:01 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-01-19 10:24:01 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-19 10:24:01 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-19 10:24:01 DEBUG NamedQueryRepository:153 - Checking 0 named HQL queries
2021-01-19 10:24:01 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-01-19 10:24:01 DEBUG SessionFactoryRegistry:51 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2bc426f0
2021-01-19 10:24:01 DEBUG SessionFactoryRegistry:73 - Registering SessionFactory: e4670cea-382b-465b-b670-29197c3aeb4e (<unnamed>)
2021-01-19 10:24:01 DEBUG SessionFactoryRegistry:80 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-01-19 10:24:01 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-01-19 10:24:01 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:24:01 DEBUG TransactionImpl:81 - begin
2021-01-19 10:24:01 DEBUG TransactionImpl:98 - committing
2021-01-19 10:24:01 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:24:01 DEBUG TransactionImpl:81 - begin
2021-01-19 10:24:01 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@79518e00
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:292 - parse() - HQL: update com.project.model.Post as generatedAlias0 set generatedAlias0.postText = :param0 where generatedAlias0.postId=1
2021-01-19 10:24:01 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  \-[IDENT] Node: 'project'
    |     |  |  \-[IDENT] Node: 'model'
    |     |  \-[IDENT] Node: 'Post'
    |     \-[ALIAS] Node: 'generatedAlias0'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias0'
    |     |  \-[IDENT] Node: 'postText'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'param0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'postId'
          \-[NUM_INT] Node: '1'

2021-01-19 10:24:01 DEBUG HqlSqlBaseWalker:124 - update << begin [level=1, statement=update]
2021-01-19 10:24:01 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Post (generatedAlias0) -> post0_
2021-01-19 10:24:01 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post_id
2021-01-19 10:24:01 DEBUG DotNode:695 - getDataType() : postText -> org.hibernate.type.StringType@7164ca4c
2021-01-19 10:24:01 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.postText -> post_text
2021-01-19 10:24:01 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post_id
2021-01-19 10:24:01 DEBUG DotNode:695 - getDataType() : postId -> org.hibernate.type.IntegerType@1efe439d
2021-01-19 10:24:01 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.postId -> post_id
2021-01-19 10:24:01 DEBUG HqlSqlBaseWalker:128 - update : finishing up [level=1, statement=update]
2021-01-19 10:24:01 DEBUG HqlSqlBaseWalker:132 - update >> end [level=1, statement=update]
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (Posts)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Posts' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Posts,tableAlias=post0_,origin=null,columns={,className=com.project.model.Post}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'post_text' {propertyName=postText,dereferenceType=PRIMITIVE,getPropertyPath=postText,path=generatedAlias0.postText,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
    |     |  +-[ALIAS_REF] IdentNode: 'post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |     |  \-[IDENT] IdentNode: 'postText' {originalText=postText}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@7164ca4c}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'post_id' {propertyName=postId,dereferenceType=PRIMITIVE,getPropertyPath=postId,path=generatedAlias0.postId,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
          |  \-[IDENT] IdentNode: 'postId' {originalText=postId}
          \-[NUM_INT] LiteralNode: '1'

2021-01-19 10:24:01 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:24:01 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:24:01 DEBUG SQL:144 - 
    update
        Posts 
    set
        post_text=? 
    where
        post_id=1
2021-01-19 10:24:01 DEBUG TransactionImpl:98 - committing
2021-01-19 10:24:01 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:24:01 DEBUG TransactionImpl:81 - begin
2021-01-19 10:24:01 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 where generatedAlias0.postId=1
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 where generatedAlias0.postId=1
2021-01-19 10:24:01 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'project'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Post'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'postId'
          \-[NUM_INT] Node: '1'

2021-01-19 10:24:01 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-19 10:24:01 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Post (generatedAlias0) -> post0_
2021-01-19 10:24:01 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-19 10:24:01 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-19 10:24:01 DEBUG DotNode:695 - getDataType() : postId -> org.hibernate.type.IntegerType@1efe439d
2021-01-19 10:24:01 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.postId -> post0_.post_id
2021-01-19 10:24:01 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-19 10:24:01 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} post0_.post_id ) ( FromClause{level=1} Posts post0_ ) ( where ( = ( post0_.post_id post0_.post_id postId ) 1 ) ) )
2021-01-19 10:24:01 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [Posts]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.Post)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.project.model.Post)
          | path: generatedAlias0.postId
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.project.model.Post)
          |  | originalText: generatedAlias0
          |  \-IdentNode
          |    persister: null
          |    originalText: postId
          \-LiteralNode

2021-01-19 10:24:01 DEBUG JoinProcessor:304 - Using FROM fragment [Posts post0_]
2021-01-19 10:24:01 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Posts)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'post0_.post_id as post_id1_2_' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |  \-[SQL_TOKEN] SqlFragment: 'post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Posts post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Posts,tableAlias=post0_,origin=null,columns={,className=com.project.model.Post}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'post0_.post_id' {propertyName=postId,dereferenceType=PRIMITIVE,getPropertyPath=postId,path=generatedAlias0.postId,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'post0_.post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
          |  \-[IDENT] IdentNode: 'postId' {originalText=postId}
          \-[NUM_INT] LiteralNode: '1'

2021-01-19 10:24:01 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 where generatedAlias0.postId=1
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:259 - SQL: select post0_.post_id as post_id1_2_, post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_ from Posts post0_ where post0_.post_id=1
2021-01-19 10:24:01 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:24:01 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    where
        post0_.post_id=1
2021-01-19 10:24:01 DEBUG Loader:384 - Result set row: 0
2021-01-19 10:24:01 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-19 10:24:01 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-19 10:24:01 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-19T10:24:01.504
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-19 10:24:01 DEBUG TransactionImpl:98 - committing
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-19 10:24:01 DEBUG EntityPrinter:110 - Listing entities:
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-19T10:24:01.504}
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-19 10:24:01 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:24:01 DEBUG TransactionImpl:81 - begin
2021-01-19 10:24:01 DEBUG TransactionImpl:98 - committing
2021-01-19 10:24:01 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:24:01 DEBUG TransactionImpl:81 - begin
2021-01-19 10:24:01 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 where generatedAlias0.author=1 order by generatedAlias0.timestamp desc
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 where generatedAlias0.author=1 order by generatedAlias0.timestamp desc
2021-01-19 10:24:01 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'project'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Post'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    +-[WHERE] Node: 'where'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'generatedAlias0'
    |     |  \-[IDENT] Node: 'author'
    |     \-[NUM_INT] Node: '1'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'timestamp'
       \-[DESCENDING] Node: 'desc'

2021-01-19 10:24:01 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-19 10:24:01 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Post (generatedAlias0) -> post0_
2021-01-19 10:24:01 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-19 10:24:01 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-19 10:24:01 DEBUG DotNode:695 - getDataType() : author -> org.hibernate.type.ManyToOneType(com.project.model.User)
2021-01-19 10:24:01 DEBUG DotNode:653 - dereferenceShortcut() : property author in com.project.model.Post does not require a join.
2021-01-19 10:24:01 DEBUG DotNode:682 - Terminal getPropertyPath = [author]
2021-01-19 10:24:01 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.author -> post0_.user_id_fk
2021-01-19 10:24:01 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-19 10:24:01 DEBUG DotNode:695 - getDataType() : timestamp -> org.hibernate.type.LocalDateTimeType@492691d7
2021-01-19 10:24:01 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.timestamp -> post0_.timestamp
2021-01-19 10:24:01 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-19 10:24:01 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} post0_.post_id ) ( FromClause{level=1} Posts post0_ ) ( where ( = ( post0_.user_id_fk post0_.post_id author ) 1 ) ) ( order ( post0_.timestamp post0_.post_id timestamp ) desc ) )
2021-01-19 10:24:01 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [Posts]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.Post)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    +-SqlNode
    |  \-BinaryLogicOperatorNode
    |     +-DotNode
    |     | persister: SingleTableEntityPersister(com.project.model.Post)
    |     | path: generatedAlias0.author
    |     |  +-IdentNode
    |     |  | persister: SingleTableEntityPersister(com.project.model.Post)
    |     |  | originalText: generatedAlias0
    |     |  \-IdentNode
    |     |    persister: null
    |     |    originalText: author
    |     \-LiteralNode
    \-OrderByClause
       +-DotNode
       | persister: SingleTableEntityPersister(com.project.model.Post)
       | path: generatedAlias0.timestamp
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.project.model.Post)
       |  | originalText: generatedAlias0
       |  \-IdentNode
       |    persister: null
       |    originalText: timestamp
       \-SqlNode

2021-01-19 10:24:01 DEBUG JoinProcessor:304 - Using FROM fragment [Posts post0_]
2021-01-19 10:24:01 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Posts)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'post0_.post_id as post_id1_2_' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |  \-[SQL_TOKEN] SqlFragment: 'post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Posts post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Posts,tableAlias=post0_,origin=null,columns={,className=com.project.model.Post}}
    +-[WHERE] SqlNode: 'where'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'post0_.user_id_fk' {propertyName=author,dereferenceType=UNKNOWN,getPropertyPath=author,path=generatedAlias0.author,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
    |     |  +-[ALIAS_REF] IdentNode: 'post0_.post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |     |  \-[IDENT] IdentNode: 'author' {originalText=author}
    |     \-[NUM_INT] LiteralNode: '1'
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'post0_.timestamp' {propertyName=timestamp,dereferenceType=PRIMITIVE,getPropertyPath=timestamp,path=generatedAlias0.timestamp,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'post0_.post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
       |  \-[IDENT] IdentNode: 'timestamp' {originalText=timestamp}
       \-[DESCENDING] SqlNode: 'desc'

2021-01-19 10:24:01 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 where generatedAlias0.author=1 order by generatedAlias0.timestamp desc
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:259 - SQL: select post0_.post_id as post_id1_2_, post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_ from Posts post0_ where post0_.user_id_fk=1 order by post0_.timestamp desc
2021-01-19 10:24:01 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:24:01 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    where
        post0_.user_id_fk=1 
    order by
        post0_.timestamp desc
2021-01-19 10:24:01 DEBUG Loader:384 - Result set row: 0
2021-01-19 10:24:01 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-19 10:24:01 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-19 10:24:01 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-19T10:24:01.504
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-19 10:24:01 DEBUG TransactionImpl:98 - committing
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-19 10:24:01 DEBUG EntityPrinter:110 - Listing entities:
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-19T10:24:01.504}
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-19 10:24:01 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:24:01 DEBUG TransactionImpl:81 - begin
2021-01-19 10:24:01 DEBUG TransactionImpl:98 - committing
2021-01-19 10:24:01 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:24:01 DEBUG TransactionImpl:81 - begin
2021-01-19 10:24:01 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0
2021-01-19 10:24:01 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'project'
       |     |  |  \-[IDENT] Node: 'model'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2021-01-19 10:24:01 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-19 10:24:01 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.User (generatedAlias0) -> user0_
2021-01-19 10:24:01 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> user0_.user_id
2021-01-19 10:24:01 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-19 10:24:01 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} Users user0_ ) )
2021-01-19 10:24:01 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [Users]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2021-01-19 10:24:01 DEBUG JoinProcessor:304 - Using FROM fragment [Users user0_]
2021-01-19 10:24:01 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_3_' {alias=generatedAlias0, className=com.project.model.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.project.model.User}}

2021-01-19 10:24:01 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.User as generatedAlias0
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:259 - SQL: select user0_.user_id as user_id1_3_, user0_.email as email2_3_, user0_.firstname as firstnam3_3_, user0_.lastname as lastname4_3_, user0_.password as password5_3_, user0_.profile_picture as profile_6_3_, user0_.password_salt as password7_3_, user0_.username as username8_3_ from Users user0_
2021-01-19 10:24:01 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:24:01 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_,
        user0_.email as email2_3_,
        user0_.firstname as firstnam3_3_,
        user0_.lastname as lastname4_3_,
        user0_.password as password5_3_,
        user0_.profile_picture as profile_6_3_,
        user0_.password_salt as password7_3_,
        user0_.username as username8_3_ 
    from
        Users user0_
2021-01-19 10:24:01 DEBUG Loader:384 - Result set row: 0
2021-01-19 10:24:01 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#1]
2021-01-19 10:24:01 DEBUG Loader:384 - Result set row: 1
2021-01-19 10:24:01 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#2]
2021-01-19 10:24:01 DEBUG Loader:384 - Result set row: 2
2021-01-19 10:24:01 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.User#3]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-19 10:24:01 DEBUG TransactionImpl:98 - committing
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-19 10:24:01 DEBUG EntityPrinter:110 - Listing entities:
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-19 10:24:01 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:24:01 DEBUG TransactionImpl:81 - begin
2021-01-19 10:24:01 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:292 - parse() - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-19 10:24:01 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:313 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'project'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Post'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[ORDER] Node: 'order'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 'generatedAlias0'
       |  \-[IDENT] Node: 'timestamp'
       \-[DESCENDING] Node: 'desc'

2021-01-19 10:24:01 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-01-19 10:24:01 DEBUG FromElement:153 - FromClause{level=1} : com.project.model.Post (generatedAlias0) -> post0_
2021-01-19 10:24:01 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-19 10:24:01 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0 -> post0_.post_id
2021-01-19 10:24:01 DEBUG DotNode:695 - getDataType() : timestamp -> org.hibernate.type.LocalDateTimeType@492691d7
2021-01-19 10:24:01 DEBUG FromReferenceNode:60 - Resolved : generatedAlias0.timestamp -> post0_.timestamp
2021-01-19 10:24:01 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-01-19 10:24:01 DEBUG HqlSqlWalker:760 - processQuery() :  ( SELECT ( {select clause} post0_.post_id ) ( FromClause{level=1} Posts post0_ ) ( order ( post0_.timestamp post0_.post_id timestamp ) desc ) )
2021-01-19 10:24:01 DEBUG JoinProcessor:129 - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Post): [Posts]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.project.model.Post)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-OrderByClause
       +-DotNode
       | persister: SingleTableEntityPersister(com.project.model.Post)
       | path: generatedAlias0.timestamp
       |  +-IdentNode
       |  | persister: SingleTableEntityPersister(com.project.model.Post)
       |  | originalText: generatedAlias0
       |  \-IdentNode
       |    persister: null
       |    originalText: timestamp
       \-SqlNode

2021-01-19 10:24:01 DEBUG JoinProcessor:304 - Using FROM fragment [Posts post0_]
2021-01-19 10:24:01 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:279 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Posts)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'post0_.post_id as post_id1_2_' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
    |  \-[SQL_TOKEN] SqlFragment: 'post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[post0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Posts post0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Posts,tableAlias=post0_,origin=null,columns={,className=com.project.model.Post}}
    \-[ORDER] OrderByClause: 'order'
       +-[DOT] DotNode: 'post0_.timestamp' {propertyName=timestamp,dereferenceType=PRIMITIVE,getPropertyPath=timestamp,path=generatedAlias0.timestamp,tableAlias=post0_,className=com.project.model.Post,classAlias=generatedAlias0}
       |  +-[ALIAS_REF] IdentNode: 'post0_.post_id' {alias=generatedAlias0, className=com.project.model.Post, tableAlias=post0_}
       |  \-[IDENT] IdentNode: 'timestamp' {originalText=timestamp}
       \-[DESCENDING] SqlNode: 'desc'

2021-01-19 10:24:01 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:258 - HQL: select generatedAlias0 from com.project.model.Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-19 10:24:01 DEBUG QueryTranslatorImpl:259 - SQL: select post0_.post_id as post_id1_2_, post0_.user_id_fk as user_id_5_2_, post0_.post_picture as post_pic2_2_, post0_.post_text as post_tex3_2_, post0_.timestamp as timestam4_2_ from Posts post0_ order by post0_.timestamp desc
2021-01-19 10:24:01 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-01-19 10:24:01 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    order by
        post0_.timestamp desc
2021-01-19 10:24:01 DEBUG Loader:384 - Result set row: 0
2021-01-19 10:24:01 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#2]
2021-01-19 10:24:01 DEBUG Loader:384 - Result set row: 1
2021-01-19 10:24:01 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#3]
2021-01-19 10:24:01 DEBUG Loader:384 - Result set row: 2
2021-01-19 10:24:01 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#2]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 2
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-19 10:24:01 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-19 10:24:01 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#2
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Seans Post
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-19T10:24:01.512
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#2]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#3]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 3
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-19 10:24:01 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-19 10:24:01 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#3
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Alberts Post
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-19T10:24:01.512
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#3]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-19 10:24:01 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-19 10:24:01 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-19T10:24:01.504
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-19 10:24:01 DEBUG TransactionImpl:98 - committing
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-19 10:24:01 DEBUG EntityPrinter:110 - Listing entities:
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-19T10:24:01.504}
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Seans Post, author=com.project.model.User#2, postId=2, postPicture=null, timestamp=2021-01-19T10:24:01.512}
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Alberts Post, author=com.project.model.User#3, postId=3, postPicture=null, timestamp=2021-01-19T10:24:01.512}
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-19 10:24:01 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:24:01 DEBUG TransactionImpl:81 - begin
2021-01-19 10:24:01 DEBUG ActionQueue:281 - Executing identity-insert immediately
2021-01-19 10:24:01 DEBUG SQL:144 - 
    insert 
    into
        Posts
        (post_id, user_id_fk, post_picture, post_text, timestamp) 
    values
        (null, ?, ?, ?, ?)
2021-01-19 10:24:01 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 4
2021-01-19 10:24:01 DEBUG ResourceRegistryStandardImpl:106 - HHH000387: ResultSet's statement was not registered
2021-01-19 10:24:01 DEBUG TransactionImpl:98 - committing
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-19 10:24:01 DEBUG EntityPrinter:110 - Listing entities:
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.Post{postText=some text, author=com.project.model.User#1, postId=4, postPicture=null, timestamp=2021-01-19T10:24:01.894}
2021-01-19 10:24:01 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:24:01 DEBUG TransactionImpl:81 - begin
2021-01-19 10:24:01 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-19 10:24:01 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    order by
        post0_.timestamp desc
2021-01-19 10:24:01 DEBUG Loader:384 - Result set row: 0
2021-01-19 10:24:01 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#4]
2021-01-19 10:24:01 DEBUG Loader:384 - Result set row: 1
2021-01-19 10:24:01 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#2]
2021-01-19 10:24:01 DEBUG Loader:384 - Result set row: 2
2021-01-19 10:24:01 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#3]
2021-01-19 10:24:01 DEBUG Loader:384 - Result set row: 3
2021-01-19 10:24:01 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#4]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-19 10:24:01 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-19 10:24:01 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = some text
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-19T10:24:01.894
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#4]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#2]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 2
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-19 10:24:01 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-19 10:24:01 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#2
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Seans Post
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-19T10:24:01.512
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#2]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#3]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 3
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-19 10:24:01 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-19 10:24:01 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#3
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Alberts Post
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-19T10:24:01.512
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#3]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-19T10:24:01.504
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-19 10:24:01 DEBUG TransactionImpl:98 - committing
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-19 10:24:01 DEBUG EntityPrinter:110 - Listing entities:
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-19T10:24:01.504}
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Seans Post, author=com.project.model.User#2, postId=2, postPicture=null, timestamp=2021-01-19T10:24:01.512}
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Alberts Post, author=com.project.model.User#3, postId=3, postPicture=null, timestamp=2021-01-19T10:24:01.512}
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.Post{postText=some text, author=com.project.model.User#1, postId=4, postPicture=null, timestamp=2021-01-19T10:24:01.894}
2021-01-19 10:24:01 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:24:01 DEBUG TransactionImpl:81 - begin
2021-01-19 10:24:01 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-19 10:24:01 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    order by
        post0_.timestamp desc
2021-01-19 10:24:01 DEBUG Loader:384 - Result set row: 0
2021-01-19 10:24:01 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#4]
2021-01-19 10:24:01 DEBUG Loader:384 - Result set row: 1
2021-01-19 10:24:01 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#2]
2021-01-19 10:24:01 DEBUG Loader:384 - Result set row: 2
2021-01-19 10:24:01 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#3]
2021-01-19 10:24:01 DEBUG Loader:384 - Result set row: 3
2021-01-19 10:24:01 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#4]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-19 10:24:01 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-19 10:24:01 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = some text
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-19T10:24:01.894
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#4]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#2]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 2
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-19 10:24:01 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-19 10:24:01 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#2
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Seans Post
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-19T10:24:01.512
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#2]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#3]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 3
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-19 10:24:01 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-19 10:24:01 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#3
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Alberts Post
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-19T10:24:01.512
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#3]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-19T10:24:01.504
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:01 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-19 10:24:01 DEBUG TransactionImpl:98 - committing
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
2021-01-19 10:24:01 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-19 10:24:01 DEBUG EntityPrinter:110 - Listing entities:
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-19T10:24:01.504}
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Seans Post, author=com.project.model.User#2, postId=2, postPicture=null, timestamp=2021-01-19T10:24:01.512}
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Alberts Post, author=com.project.model.User#3, postId=3, postPicture=null, timestamp=2021-01-19T10:24:01.512}
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-19 10:24:01 DEBUG EntityPrinter:117 - com.project.model.Post{postText=some text, author=com.project.model.User#1, postId=4, postPicture=null, timestamp=2021-01-19T10:24:01.894}
2021-01-19 10:24:01 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:24:01 DEBUG TransactionImpl:81 - begin
2021-01-19 10:24:02 DEBUG TransactionImpl:98 - committing
2021-01-19 10:24:02 DEBUG TransactionImpl:53 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-01-19 10:24:02 DEBUG TransactionImpl:81 - begin
2021-01-19 10:24:02 DEBUG CriteriaQueryImpl:303 - Rendered criteria query -> select generatedAlias0 from Post as generatedAlias0 order by generatedAlias0.timestamp desc
2021-01-19 10:24:02 DEBUG SQL:144 - 
    select
        post0_.post_id as post_id1_2_,
        post0_.user_id_fk as user_id_5_2_,
        post0_.post_picture as post_pic2_2_,
        post0_.post_text as post_tex3_2_,
        post0_.timestamp as timestam4_2_ 
    from
        Posts post0_ 
    order by
        post0_.timestamp desc
2021-01-19 10:24:02 DEBUG Loader:384 - Result set row: 0
2021-01-19 10:24:02 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#4]
2021-01-19 10:24:02 DEBUG Loader:384 - Result set row: 1
2021-01-19 10:24:02 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#2]
2021-01-19 10:24:02 DEBUG Loader:384 - Result set row: 2
2021-01-19 10:24:02 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#3]
2021-01-19 10:24:02 DEBUG Loader:384 - Result set row: 3
2021-01-19 10:24:02 DEBUG Loader:1594 - Result row: EntityKey[com.project.model.Post#1]
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#4]
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-19 10:24:02 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#1]
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = j@mail.com
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Joe
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Shannon
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforjoe
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforjoe
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = jshan
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#1]
2021-01-19 10:24:02 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#1
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = some text
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-19T10:24:01.894
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#4]
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#2]
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 2
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-19 10:24:02 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#2]
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = s@mail.com
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Sean
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Riehl
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforsean
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforsean
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = sriehl
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#2]
2021-01-19 10:24:02 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#2
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Seans Post
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-19T10:24:01.512
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#2]
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#3]
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 3
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG SQL:144 - 
    select
        user0_.user_id as user_id1_3_0_,
        user0_.email as email2_3_0_,
        user0_.firstname as firstnam3_3_0_,
        user0_.lastname as lastname4_3_0_,
        user0_.password as password5_3_0_,
        user0_.profile_picture as profile_6_3_0_,
        user0_.password_salt as password7_3_0_,
        user0_.username as username8_3_0_ 
    from
        Users user0_ 
    where
        user0_.user_id=?
2021-01-19 10:24:02 DEBUG EntityReferenceInitializerImpl:131 - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.User#3]
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `email` : value = a@mail.com
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`email`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `firstName` : value = Albert
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`firstName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `lastName` : value = Washington
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`lastName`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `password` : value = passforalbert
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`password`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `profilePicture` : value = null
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`profilePicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `salt` : value = saltforalbert
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`salt`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `username` : value = awashington
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`username`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.User#3]
2021-01-19 10:24:02 DEBUG AbstractLoadPlanBasedEntityLoader:307 - Done entity load : com.project.model.User#3
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Alberts Post
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-19T10:24:01.512
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#3]
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:198 - Resolving attributes for [com.project.model.Post#1]
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `author` : value = 1
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`author`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `postPicture` : value = null
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`postPicture`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `postText` : value = Post Text
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`postText`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:211 - Processing attribute `timestamp` : value = 2021-01-19T10:24:01.504
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:242 - Attribute (`timestamp`)  - enhanced for lazy-loading? - false
2021-01-19 10:24:02 DEBUG TwoPhaseLoad:381 - Done materializing entity [com.project.model.Post#1]
2021-01-19 10:24:02 DEBUG TransactionImpl:98 - committing
2021-01-19 10:24:02 DEBUG AbstractFlushingEventListener:139 - Processing flush-time cascades
2021-01-19 10:24:02 DEBUG AbstractFlushingEventListener:192 - Dirty checking collections
2021-01-19 10:24:02 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
2021-01-19 10:24:02 DEBUG AbstractFlushingEventListener:120 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2021-01-19 10:24:02 DEBUG EntityPrinter:110 - Listing entities:
2021-01-19 10:24:02 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Post Text, author=com.project.model.User#1, postId=1, postPicture=null, timestamp=2021-01-19T10:24:01.504}
2021-01-19 10:24:02 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Seans Post, author=com.project.model.User#2, postId=2, postPicture=null, timestamp=2021-01-19T10:24:01.512}
2021-01-19 10:24:02 DEBUG EntityPrinter:117 - com.project.model.Post{postText=Alberts Post, author=com.project.model.User#3, postId=3, postPicture=null, timestamp=2021-01-19T10:24:01.512}
2021-01-19 10:24:02 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Albert, lastName=Washington, profilePicture=null, password=passforalbert, salt=saltforalbert, userId=3, email=a@mail.com, username=awashington}
2021-01-19 10:24:02 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Joe, lastName=Shannon, profilePicture=null, password=passforjoe, salt=saltforjoe, userId=1, email=j@mail.com, username=jshan}
2021-01-19 10:24:02 DEBUG EntityPrinter:117 - com.project.model.User{firstName=Sean, lastName=Riehl, profilePicture=null, password=passforsean, salt=saltforsean, userId=2, email=s@mail.com, username=sriehl}
2021-01-19 10:24:02 DEBUG EntityPrinter:117 - com.project.model.Post{postText=some text, author=com.project.model.User#1, postId=4, postPicture=null, timestamp=2021-01-19T10:24:01.894}
